<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="95">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="applications">
        <df name="AdjointFluidApplication">
          <df name="custom_elements">
            <in>vms_adjoint_element.cpp</in>
            <in>vms_adjoint_element.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>adjoint_fluid_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="strategies">
              <in>adjoint_fluid_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>time_averaged_primal_utility.h</in>
          </df>
          <df name="python_scripts">
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="Circle">
              <df name="kratos.gid">
                <df name="__pycache__">
                </df>
              </df>
            </df>
            <df name="NACA0012">
              <df name="kratos.gid">
                <df name="__pycache__">
                </df>
              </df>
            </df>
            <df name="SquareWithUpstreamRectangle">
              <df name="kratos.gid">
                <df name="__pycache__">
                </df>
              </df>
            </df>
          </df>
          <in>adjoint_fluid_application.cpp</in>
          <in>adjoint_fluid_application.h</in>
          <in>adjoint_fluid_application_variables.cpp</in>
          <in>adjoint_fluid_application_variables.h</in>
        </df>
        <df name="ALEapplication">
          <df name="custom_elements">
            <in>laplacian_meshmoving_element.cpp</in>
            <in>laplacian_meshmoving_element.h</in>
            <in>structural_meshmoving_element.cpp</in>
            <in>structural_meshmoving_element.h</in>
            <in>structural_meshmoving_element_nonlinear.cpp</in>
            <in>structural_meshmoving_element_nonlinear.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>ale_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="strategies">
              <in>laplacian_meshmoving_strategy.h</in>
              <in>structural_meshmoving_strategy.h</in>
              <in>structural_meshmoving_strategy_nonlinear.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>ball_vertex_meshmoving.h</in>
            <in>ball_vertex_meshmoving3D.h</in>
            <in>move_mesh_utilities.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="Cylinder_2D.gid">
            </df>
            <df name="Cylinder_3D.gid">
            </df>
          </df>
          <in>ale_application.cpp</in>
          <in>ale_application.h</in>
        </df>
        <df name="blade_critical_load_application">
        </df>
        <df name="CMakeFiles">
        </df>
        <df name="constitutive_laws_application">
          <df name="constitutive_laws">
            <in>umat.cpp</in>
            <in>umat.h</in>
          </df>
          <df name="custom_external_libraries">
            <df name="umat">
              <in>mises_umat.f</in>
              <in>umat_fortran_wrapper.f</in>
              <in>umat_hypo.f</in>
              <in>xit.f</in>
            </df>
          </df>
          <df name="custom_python">
            <in>add_constitutive_laws_to_python.cpp</in>
            <in>add_constitutive_laws_to_python.h</in>
            <in>constitutive_laws_python_application.cpp</in>
          </df>
          <df name="external_includes">
            <in>f77char.h</in>
            <in>f77cmplx.h</in>
            <in>f77matrx.h</in>
            <in>fortran.h</in>
          </df>
          <df name="test_examples">
            <df name="beam_3d.gid">
            </df>
          </df>
          <in>constitutive_laws_application.cpp</in>
          <in>constitutive_laws_application.h</in>
        </df>
        <df name="convection_diffusion_application">
          <df name="custom_conditions">
            <in>thermal_face2D.cpp</in>
            <in>thermal_face2D.h</in>
            <in>thermal_face3D.cpp</in>
            <in>thermal_face3D.h</in>
          </df>
          <df name="custom_elements">
            <in>conv_diff_2d.cpp</in>
            <in>conv_diff_2d.h</in>
            <in>conv_diff_3d.cpp</in>
            <in>conv_diff_3d.h</in>
            <in>conv_diff_change_of_phase_2d.cpp</in>
            <in>conv_diff_change_of_phase_2d.h</in>
            <in>eulerian_conv_diff.cpp</in>
            <in>eulerian_conv_diff.h</in>
            <in>eulerian_diff.h</in>
            <in>laplacian_element.cpp</in>
            <in>laplacian_element.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>kratos_convection_diffusion_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="strategies">
              <in>residualbased_convdiff_strategy.h</in>
              <in>residualbased_convdiff_strategy_nonlinear.h</in>
              <in>residualbased_eulerian_convdiff_strategy.h</in>
              <in>residualbased_semi_eulerian_convdiff_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>bfecc_convection.h</in>
            <in>convection_particle.h</in>
            <in>face_heat_utilities.h</in>
            <in>move_particle_utility.h</in>
            <in>pure_convection_CrankN_tools.h</in>
            <in>pure_convection_tools.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="bfecc_test">
            </df>
            <df name="face_heat.gid">
            </df>
            <df name="PecletTest">
            </df>
            <df name="square.gid">
            </df>
            <df name="square_edgebased.gid">
            </df>
            <df name="testPureConvection.gid">
            </df>
          </df>
          <in>convection_diffusion_application.cpp</in>
          <in>convection_diffusion_application.h</in>
        </df>
        <df name="DamApplication">
          <df name="custom_conditions">
          </df>
          <df name="custom_constitutive">
            <in>thermal_linear_elastic_2D_plane_strain.cpp</in>
            <in>thermal_linear_elastic_2D_plane_strain.hpp</in>
            <in>thermal_linear_elastic_2D_plane_stress.cpp</in>
            <in>thermal_linear_elastic_2D_plane_stress.hpp</in>
            <in>thermal_linear_elastic_3D_law.cpp</in>
            <in>thermal_linear_elastic_3D_law.hpp</in>
          </df>
          <df name="custom_elements">
            <in>small_displacement_interface_element.cpp</in>
            <in>small_displacement_interface_element.hpp</in>
            <in>small_displacement_thermo_mechanic_element.cpp</in>
            <in>small_displacement_thermo_mechanic_element.hpp</in>
          </df>
          <df name="custom_problemtype">
            <df name="Dam_Application.gid">
            </df>
          </df>
          <df name="custom_processes">
            <in>displa_table_interpolation_process.hpp</in>
            <in>exact_bofang_evolution_conditions_temperature_process.hpp</in>
            <in>exact_water_evolution_conditions_load_process.hpp</in>
            <in>interpolation_bofang_evolution_conditions_temperature_process.hpp</in>
            <in>interpolation_water_evolution_conditions_load_process.hpp</in>
            <in>line_load_table_interpolation_process.hpp</in>
            <in>normal_load_table_interpolation_process.hpp</in>
            <in>point_load_table_interpolation_process.hpp</in>
            <in>surface_load_table_interpolation_process.hpp</in>
            <in>temperature_table_interpolation_process.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>dam_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="custom_builders_and_solvers">
            </df>
            <df name="custom_convergence_criteria">
            </df>
            <df name="custom_schemes">
            </df>
          </df>
          <df name="custom_utilities">
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="joint_opening_2d.gid">
            </df>
            <df name="thermomechanical_dam_2d.gid">
            </df>
            <df name="thermomechanical_dam_3d.gid">
            </df>
            <df name="upliftpressure_3D.gid">
            </df>
          </df>
          <in>dam_application.cpp</in>
          <in>dam_application.h</in>
          <in>dam_application_variables.cpp</in>
          <in>dam_application_variables.h</in>
        </df>
        <df name="DEM_application">
          <df name="custom_conditions">
            <in>RigidEdge.cpp</in>
            <in>RigidEdge.h</in>
            <in>RigidFace.cpp</in>
            <in>RigidFace.h</in>
            <in>SolidFace.cpp</in>
            <in>SolidFace.h</in>
            <in>dem_wall.cpp</in>
            <in>dem_wall.h</in>
            <in>mapping_condition.cpp</in>
            <in>mapping_condition.h</in>
          </df>
          <df name="custom_constitutive">
            <in>DEM_D_Bentonite_Colloid_CL.cpp</in>
            <in>DEM_D_Bentonite_Colloid_CL.h</in>
            <in>DEM_D_DMT_cohesive_law.cpp</in>
            <in>DEM_D_DMT_cohesive_law.h</in>
            <in>DEM_D_Hertz_viscous_Coulomb_2D_CL.cpp</in>
            <in>DEM_D_Hertz_viscous_Coulomb_2D_CL.h</in>
            <in>DEM_D_Hertz_viscous_Coulomb_CL.cpp</in>
            <in>DEM_D_Hertz_viscous_Coulomb_CL.h</in>
            <in>DEM_D_JKR_cohesive_law.cpp</in>
            <in>DEM_D_JKR_cohesive_law.h</in>
            <in>DEM_D_Linear_viscous_Coulomb_2D_CL.cpp</in>
            <in>DEM_D_Linear_viscous_Coulomb_2D_CL.h</in>
            <in>DEM_D_Linear_viscous_Coulomb_CL.cpp</in>
            <in>DEM_D_Linear_viscous_Coulomb_CL.h</in>
            <in>DEM_Dempack_2D_CL.cpp</in>
            <in>DEM_Dempack_2D_CL.h</in>
            <in>DEM_Dempack_CL.cpp</in>
            <in>DEM_Dempack_CL.h</in>
            <in>DEM_Dempack_torque_CL.cpp</in>
            <in>DEM_Dempack_torque_CL.h</in>
            <in>DEM_ExponentialHC_CL.cpp</in>
            <in>DEM_ExponentialHC_CL.h</in>
            <in>DEM_KDEM_CL.cpp</in>
            <in>DEM_KDEM_CL.h</in>
            <in>DEM_KDEM_fabric_CL.cpp</in>
            <in>DEM_KDEM_fabric_CL.h</in>
            <in>DEM_compound_constitutive_law.h</in>
            <in>DEM_continuum_constitutive_law.cpp</in>
            <in>DEM_continuum_constitutive_law.h</in>
            <in>DEM_discontinuum_constitutive_law.cpp</in>
            <in>DEM_discontinuum_constitutive_law.h</in>
            <in>DEM_sintering_continuum_CL.cpp</in>
            <in>DEM_sintering_continuum_CL.h</in>
            <in>dem_d_linear_custom_constants_cl.cpp</in>
            <in>dem_d_linear_custom_constants_cl.h</in>
            <in>dem_kdem_2d_cl.cpp</in>
            <in>dem_kdem_2d_cl.h</in>
            <in>dem_kdem_fabric_2d_cl.cpp</in>
            <in>dem_kdem_fabric_2d_cl.h</in>
          </df>
          <df name="custom_elements">
            <df name="custom_clusters">
              <in>beadcluster3D.cpp</in>
              <in>beadcluster3D.h</in>
              <in>capsulecluster3D.cpp</in>
              <in>capsulecluster3D.h</in>
              <in>cubecluster3D.cpp</in>
              <in>cubecluster3D.h</in>
              <in>cuboidcluster3D.cpp</in>
              <in>cuboidcluster3D.h</in>
              <in>ellipsoidcluster3D.cpp</in>
              <in>ellipsoidcluster3D.h</in>
              <in>pillcluster3D.cpp</in>
              <in>pillcluster3D.h</in>
              <in>singlespherecluster3D.cpp</in>
              <in>singlespherecluster3D.h</in>
            </df>
            <in>Particle_Contact_Element.cpp</in>
            <in>Particle_Contact_Element.h</in>
            <in>cluster3D.cpp</in>
            <in>cluster3D.h</in>
            <in>cylinder_continuum_particle.cpp</in>
            <in>cylinder_continuum_particle.h</in>
            <in>cylinder_particle.cpp</in>
            <in>cylinder_particle.h</in>
            <in>discrete_element.h</in>
            <in>nanoparticle.cpp</in>
            <in>nanoparticle.h</in>
            <in>sintering_spheric_continuum_particle.cpp</in>
            <in>sintering_spheric_continuum_particle.h</in>
            <in>spheric_continuum_particle.cpp</in>
            <in>spheric_continuum_particle.h</in>
            <in>spheric_particle.cpp</in>
            <in>spheric_particle.h</in>
            <in>thermal_spheric_particle.cpp</in>
            <in>thermal_spheric_particle.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="DEM_explicit_solver.gid">
            </df>
            <df name="problemtype_generator">
              <df name="DEM_explicit_script">
              </df>
              <df name="DEM_explicit_solver.gid">
              </df>
            </df>
          </df>
          <df name="custom_python">
            <in>DEM_python_application.cpp</in>
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
          </df>
          <df name="custom_strategies">
            <df name="schemes">
              <in>constant_average_acceleration_scheme.h</in>
              <in>dem_integration_scheme.cpp</in>
              <in>dem_integration_scheme.h</in>
              <in>forward_euler_scheme.cpp</in>
              <in>forward_euler_scheme.h</in>
              <in>mid_point_scheme.h</in>
              <in>newmark_beta_scheme.cpp</in>
              <in>newmark_beta_scheme.h</in>
              <in>symplectic_euler_scheme.cpp</in>
              <in>symplectic_euler_scheme.h</in>
              <in>taylor_scheme.h</in>
              <in>verlet_velocity_scheme.cpp</in>
              <in>verlet_velocity_scheme.h</in>
            </df>
            <df name="strategies">
              <in>explicit_solver_continuum.cpp</in>
              <in>explicit_solver_continuum.h</in>
              <in>explicit_solver_strategy.cpp</in>
              <in>explicit_solver_strategy.h</in>
              <in>iterative_solver_strategy.h</in>
              <in>verlet_solver_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>AuxiliaryFunctions.h</in>
            <in>GeometryFunctions.h</in>
            <in>benchmark_utilities.h</in>
            <in>calculate_global_physical_properties.h</in>
            <in>cluster_information.h</in>
            <in>create_and_destroy.cpp</in>
            <in>create_and_destroy.h</in>
            <in>dem_fem_search.h</in>
            <in>dem_fem_utilities.cpp</in>
            <in>dem_fem_utilities.h</in>
            <in>discrete_particle_configure.h</in>
            <in>geometrical_object_configure.h</in>
            <in>inlet.cpp</in>
            <in>inlet.h</in>
            <in>node_configure.h</in>
            <in>omp_dem_search.h</in>
            <in>particle_data.h</in>
            <in>post_utilities.h</in>
            <in>pre_utilities.h</in>
            <in>properties_proxies.cpp</in>
            <in>properties_proxies.h</in>
            <in>rigid_face_geometrical_object_configure.h</in>
            <in>search_utilities.h</in>
          </df>
          <df name="python_scripts">
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="basic_benchmarks">
              <df name="__pycache__">
              </df>
              <df name="benchmark1_Graphs">
              </df>
              <df name="benchmark1_MPI_results">
              </df>
              <df name="benchmark1_Post_Files">
              </df>
              <df name="benchmark1_Results_and_Data">
              </df>
              <df name="benchmark2_Post_Files">
              </df>
              <df name="paper_data">
              </df>
            </df>
            <df name="D-Dempack_validation.gid">
            </df>
          </df>
          <in>DEM_application.cpp</in>
          <in>DEM_application.h</in>
          <in>DEM_application_variables.h</in>
          <in>DEM_definitions.h</in>
        </df>
        <df name="DEM_FEM_Application">
          <df name="custom_elements">
          </df>
          <df name="custom_problemtype">
          </df>
          <df name="custom_python">
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>dem_fem__python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>DEM_FEM_Explicit_Solver.h</in>
            <in>FEM_Explicit_Forward_Solver.h</in>
          </df>
          <df name="custom_utilities">
            <in>custom_gid_io.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <in>dem_fem__application.cpp</in>
          <in>dem_fem__application.h</in>
        </df>
        <df name="empire_application">
          <df name="custom_external_libraries">
            <df name="empire">
              <df name="benchmark">
                <df name="SignalExamples">
                  <df name="LinearTwoSpringDynamicIterative">
                    <df name="subSystem1">
                    </df>
                    <df name="subSystem2">
                    </df>
                  </df>
                </df>
              </df>
              <df name="bin">
              </df>
              <df name="lib">
                <in>libEMPIRE_API.so</in>
                <in>libimf.so</in>
                <in>libiomp5.so</in>
                <in>libirng.so</in>
                <in>libsvml.so</in>
              </df>
            </df>
            <df name="mpich2">
              <df name="bin">
              </df>
              <df name="etc">
              </df>
              <df name="include">
                <df name="primitives">
                  <in>opa_by_lock.h</in>
                  <in>opa_emulated.h</in>
                  <in>opa_gcc_ia64.h</in>
                  <in>opa_gcc_intel_32_64.h</in>
                  <in>opa_gcc_intel_32_64_barrier.h</in>
                  <in>opa_gcc_intel_32_64_ops.h</in>
                  <in>opa_gcc_intel_32_64_p3.h</in>
                  <in>opa_gcc_intel_32_64_p3barrier.h</in>
                  <in>opa_gcc_intrinsics.h</in>
                  <in>opa_gcc_ppc.h</in>
                  <in>opa_gcc_sicortex.h</in>
                  <in>opa_nt_intrinsics.h</in>
                  <in>opa_sun_atomic_ops.h</in>
                  <in>opa_unsafe.h</in>
                </df>
                <in>clog_commset.h</in>
                <in>clog_const.h</in>
                <in>clog_inttypes.h</in>
                <in>clog_uuid.h</in>
                <in>mpe.h</in>
                <in>mpe_callstack.h</in>
                <in>mpe_graphics.h</in>
                <in>mpe_graphicsf.h</in>
                <in>mpe_log.h</in>
                <in>mpe_log_thread.h</in>
                <in>mpe_logf.h</in>
                <in>mpe_misc.h</in>
                <in>mpi.h</in>
                <in>mpi.mod</in>
                <in>mpi_base.mod</in>
                <in>mpi_constants.mod</in>
                <in>mpi_sizeofs.mod</in>
                <in>mpicxx.h</in>
                <in>mpif.h</in>
                <in>mpio.h</in>
                <in>mpiof.h</in>
                <in>opa_config.h</in>
                <in>opa_primitives.h</in>
                <in>opa_queue.h</in>
                <in>opa_util.h</in>
              </df>
              <df name="lib">
                <df name="pkgconfig">
                </df>
                <in>libfmpich.so</in>
                <in>libmpich.so</in>
                <in>libmpichcxx.so</in>
                <in>libmpichf90.so</in>
                <in>libmpl.so</in>
                <in>libopa.so</in>
              </df>
              <df name="sbin">
              </df>
              <df name="share">
                <df name="doc">
                  <df name="jumpshot-4">
                    <df name="html">
                    </df>
                  </df>
                  <df name="mpich2">
                  </df>
                  <df name="www4">
                  </df>
                </df>
                <df name="examples">
                  <df name="collchk">
                    <in>composite.c</in>
                    <in>scatterv.c</in>
                    <in>time_allreduce.c</in>
                    <in>time_alltoallv.c</in>
                    <in>time_alltoallv0.c</in>
                    <in>time_bcast.c</in>
                    <in>wrong_composite.c</in>
                    <in>wrong_int_byte.c</in>
                    <in>wrong_reals.f</in>
                    <in>wrong_root.c</in>
                    <in>wrong_scatterv.c</in>
                  </df>
                  <df name="graphics">
                    <in>cpi.c</in>
                    <in>cxgraphics.c</in>
                    <in>fxgraphics.f</in>
                  </df>
                  <df name="logfiles">
                  </df>
                  <df name="logging">
                    <in>comm1_isr.c</in>
                    <in>comm1_isr_loop.c</in>
                    <in>comm2_connect_accept.c</in>
                    <in>comm2_spawn_child.c</in>
                    <in>comm2_spawn_parent.c</in>
                    <in>cpi.c</in>
                    <in>cpilog.c</in>
                    <in>cpilog_pack.c</in>
                    <in>fcomm1_isr.f</in>
                    <in>fpilog.f</in>
                    <in>fpilog_pack.F</in>
                    <in>iotest.c</in>
                    <in>log_cost.c</in>
                    <in>openmp_mpilog.F</in>
                    <in>openmp_sendrecv.c</in>
                    <in>pthread_allreduce.c</in>
                    <in>pthread_sendrecv.c</in>
                    <in>pthread_sendrecv_user.c</in>
                    <in>srtest.c</in>
                  </df>
                </df>
                <df name="man">
                  <df name="man1">
                  </df>
                  <df name="man3">
                  </df>
                  <df name="man4">
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="custom_processes">
            <in>wrapper_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>empire_python_application.cpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="DummyCSM_Kratos">
              <df name="mesh">
              </df>
            </df>
          </df>
          <in>empire_application.cpp</in>
          <in>empire_application.h</in>
        </df>
        <df name="ExternalSolversApplication">
          <df name="custom_external_libraries">
            <df name="amgcl">
              <df name="adapter">
                <in>block_matrix.hpp</in>
                <in>complex.hpp</in>
                <in>crs_builder.hpp</in>
                <in>crs_tuple.hpp</in>
                <in>epetra.hpp</in>
                <in>ublas.hpp</in>
                <in>zero_copy.hpp</in>
              </df>
              <df name="backend">
                <df name="detail">
                  <in>default_direct_solver.hpp</in>
                  <in>matrix_ops.hpp</in>
                </df>
                <in>blaze.hpp</in>
                <in>block_crs.hpp</in>
                <in>builtin.hpp</in>
                <in>cuda.hpp</in>
                <in>eigen.hpp</in>
                <in>hpx.hpp</in>
                <in>interface.hpp</in>
                <in>vexcl.hpp</in>
                <in>viennacl.hpp</in>
              </df>
              <df name="coarsening">
                <df name="detail">
                  <in>galerkin.hpp</in>
                  <in>scaled_galerkin.hpp</in>
                </df>
                <in>aggregation.hpp</in>
                <in>plain_aggregates.hpp</in>
                <in>pointwise_aggregates.hpp</in>
                <in>ruge_stuben.hpp</in>
                <in>smoothed_aggr_emin.hpp</in>
                <in>smoothed_aggregation.hpp</in>
                <in>tentative_prolongation.hpp</in>
              </df>
              <df name="detail">
                <in>inverse.hpp</in>
                <in>qr.hpp</in>
                <in>sort_row.hpp</in>
                <in>spgemm.hpp</in>
              </df>
              <df name="io">
                <in>binary.hpp</in>
                <in>mm.hpp</in>
              </df>
              <df name="mpi">
                <in>pastix.hpp</in>
                <in>runtime.hpp</in>
                <in>skyline_lu.hpp</in>
                <in>subdomain_deflation.hpp</in>
                <in>util.hpp</in>
              </df>
              <df name="perf_counter">
                <in>clock.hpp</in>
                <in>cray_energy.hpp</in>
                <in>mpi_aggregator.hpp</in>
              </df>
              <df name="preconditioner">
                <in>cpr.hpp</in>
                <in>schur_complement.hpp</in>
                <in>simple.hpp</in>
              </df>
              <df name="relaxation">
                <df name="detail">
                  <in>ilu_solve.hpp</in>
                </df>
                <in>as_preconditioner.hpp</in>
                <in>chebyshev.hpp</in>
                <in>cusparse_ilu0.hpp</in>
                <in>damped_jacobi.hpp</in>
                <in>gauss_seidel.hpp</in>
                <in>ilu0.hpp</in>
                <in>ilut.hpp</in>
                <in>multicolor_gauss_seidel.hpp</in>
                <in>parallel_ilu0.hpp</in>
                <in>runtime.hpp</in>
                <in>spai0.hpp</in>
                <in>spai1.hpp</in>
              </df>
              <df name="solver">
                <df name="detail">
                  <in>default_inner_product.hpp</in>
                </df>
                <in>bicgstab.hpp</in>
                <in>bicgstabl.hpp</in>
                <in>cg.hpp</in>
                <in>eigen.hpp</in>
                <in>gmres.hpp</in>
                <in>skyline_lu.hpp</in>
              </df>
              <df name="value_type">
                <in>complex.hpp</in>
                <in>eigen.hpp</in>
                <in>interface.hpp</in>
                <in>static_matrix.hpp</in>
              </df>
              <in>amg.hpp</in>
              <in>clock.hpp</in>
              <in>make_solver.hpp</in>
              <in>profiler.hpp</in>
              <in>runtime.hpp</in>
              <in>util.hpp</in>
            </df>
            <df name="ITSOL_2">
              <df name="INC">
                <in>defs.h</in>
                <in>globheads.h</in>
                <in>ios.h</in>
                <in>protos.h</in>
              </df>
              <df name="LIB">
              </df>
              <df name="OBJ">
              </df>
              <df name="SRC">
                <in>MatOps.c</in>
                <in>PQ.c</in>
                <in>arms2.c</in>
                <in>auxill.c</in>
                <in>fgmr.c</in>
                <in>iluk.c</in>
                <in>ilut.c</in>
                <in>ilutc.c</in>
                <in>ilutpC.c</in>
                <in>indsetC.c</in>
                <in>misc.c</in>
                <in>piluNEW.c</in>
                <in>setblks.c</in>
                <in>sets.c</in>
                <in>svdInvC.c</in>
                <in>systimer.c</in>
                <in>tools.f</in>
                <in>vbiluk.c</in>
                <in>vbilut.c</in>
              </df>
              <df name="TESTS">
                <df name="MATRICES">
                </df>
                <df name="OUT">
                </df>
                <in>mainARMS.c</in>
                <in>mainILUC.c</in>
                <in>mainILUK.c</in>
                <in>mainILUT.c</in>
                <in>mainVBILUK.c</in>
                <in>mainVBILUT.c</in>
              </df>
              <in>solveARMS.c</in>
            </df>
            <df name="SuperLU_4.3">
              <df name="CBLAS">
                <in>caxpy.c</in>
                <in>ccopy.c</in>
                <in>cdotc.c</in>
                <in>cgemv.c</in>
                <in>cgerc.c</in>
                <in>chemv.c</in>
                <in>cher2.c</in>
                <in>cscal.c</in>
                <in>cswap.c</in>
                <in>ctrsv.c</in>
                <in>dasum.c</in>
                <in>daxpy.c</in>
                <in>dcabs1.c</in>
                <in>dcopy.c</in>
                <in>ddot.c</in>
                <in>dgemv.c</in>
                <in>dger.c</in>
                <in>dnrm2.c</in>
                <in>drot.c</in>
                <in>dscal.c</in>
                <in>dswap.c</in>
                <in>dsymv.c</in>
                <in>dsyr2.c</in>
                <in>dtrsv.c</in>
                <in>dzasum.c</in>
                <in>dznrm2.c</in>
                <in>f2c.h</in>
                <in>icamax.c</in>
                <in>idamax.c</in>
                <in>isamax.c</in>
                <in>izamax.c</in>
                <in>sasum.c</in>
                <in>saxpy.c</in>
                <in>scasum.c</in>
                <in>scnrm2.c</in>
                <in>scopy.c</in>
                <in>sdot.c</in>
                <in>sgemv.c</in>
                <in>sger.c</in>
                <in>slu_Cnames.h</in>
                <in>snrm2.c</in>
                <in>srot.c</in>
                <in>sscal.c</in>
                <in>sswap.c</in>
                <in>ssymv.c</in>
                <in>ssyr2.c</in>
                <in>strsv.c</in>
                <in>superlu_f2c.h</in>
                <in>zaxpy.c</in>
                <in>zcopy.c</in>
                <in>zdotc.c</in>
                <in>zgemv.c</in>
                <in>zgerc.c</in>
                <in>zhemv.c</in>
                <in>zher2.c</in>
                <in>zscal.c</in>
                <in>zswap.c</in>
                <in>ztrsv.c</in>
              </df>
              <df name="DOC">
                <df name="html">
                </df>
              </df>
              <df name="EXAMPLE">
                <in>cfgmr.c</in>
                <in>citersol.c</in>
                <in>citersol1.c</in>
                <in>clinsol.c</in>
                <in>clinsol1.c</in>
                <in>clinsolx.c</in>
                <in>clinsolx1.c</in>
                <in>clinsolx2.c</in>
                <in>dfgmr.c</in>
                <in>ditersol.c</in>
                <in>ditersol1.c</in>
                <in>dlinsol.c</in>
                <in>dlinsol1.c</in>
                <in>dlinsolx.c</in>
                <in>dlinsolx1.c</in>
                <in>dlinsolx2.c</in>
                <in>fgmr.c</in>
                <in>sfgmr.c</in>
                <in>sitersol.c</in>
                <in>sitersol1.c</in>
                <in>slinsol.c</in>
                <in>slinsol1.c</in>
                <in>slinsolx.c</in>
                <in>slinsolx1.c</in>
                <in>slinsolx2.c</in>
                <in>sp_ienv.c</in>
                <in>superlu.c</in>
                <in>zfgmr.c</in>
                <in>zitersol.c</in>
                <in>zitersol1.c</in>
                <in>zlinsol.c</in>
                <in>zlinsol1.c</in>
                <in>zlinsolx.c</in>
                <in>zlinsolx1.c</in>
                <in>zlinsolx2.c</in>
              </df>
              <df name="FORTRAN">
                <in>c_fortran_cgssv.c</in>
                <in>c_fortran_dgssv.c</in>
                <in>c_fortran_sgssv.c</in>
                <in>c_fortran_zgssv.c</in>
                <in>f77_main.f</in>
                <in>hbcode1.f</in>
                <in>z_f77_main.f</in>
                <in>zhbcode1.f</in>
              </df>
              <df name="INSTALL">
                <in>dlamch.c</in>
                <in>dlamchtst.c</in>
                <in>lsame.c</in>
                <in>slamch.c</in>
                <in>slamchtst.c</in>
                <in>superlu_timer.c</in>
                <in>timertst.c</in>
              </df>
              <df name="lib">
              </df>
              <df name="MAKE_INC">
              </df>
              <df name="MATLAB">
                <in>babble.m</in>
                <in>burble.m</in>
                <in>copyright.m</in>
                <in>hbo.m</in>
                <in>isperm.m</in>
                <in>lusolve.m</in>
                <in>mexlusolve.c</in>
                <in>mexlusolve.m</in>
                <in>mexsuperlu.c</in>
                <in>mexsuperlu.m</in>
                <in>permutation.m</in>
                <in>resetrandoms.m</in>
                <in>spart2.m</in>
                <in>spypart.m</in>
                <in>superlu.m</in>
                <in>time.m</in>
                <in>try2.m</in>
                <in>try3.m</in>
                <in>try4.m</in>
                <in>trylusolve.m</in>
                <in>trysuperlu.m</in>
                <in>trytime.m</in>
                <in>verbose.m</in>
              </df>
              <df name="SRC">
                <in>ccolumn_bmod.c</in>
                <in>ccolumn_dfs.c</in>
                <in>ccopy_to_ucol.c</in>
                <in>cdiagonal.c</in>
                <in>cgscon.c</in>
                <in>cgsequ.c</in>
                <in>cgsisx.c</in>
                <in>cgsitrf.c</in>
                <in>cgsrfs.c</in>
                <in>cgssv.c</in>
                <in>cgssvx.c</in>
                <in>cgstrf.c</in>
                <in>cgstrs.c</in>
                <in>clacon.c</in>
                <in>clangs.c</in>
                <in>claqgs.c</in>
                <in>cldperm.c</in>
                <in>cmemory.c</in>
                <in>cmyblas2.c</in>
                <in>colamd.c</in>
                <in>colamd.h</in>
                <in>cpanel_bmod.c</in>
                <in>cpanel_dfs.c</in>
                <in>cpivotL.c</in>
                <in>cpivotgrowth.c</in>
                <in>cpruneL.c</in>
                <in>creadhb.c</in>
                <in>creadrb.c</in>
                <in>creadtriple.c</in>
                <in>csnode_bmod.c</in>
                <in>csnode_dfs.c</in>
                <in>csp_blas2.c</in>
                <in>csp_blas3.c</in>
                <in>cutil.c</in>
                <in>dcolumn_bmod.c</in>
                <in>dcolumn_dfs.c</in>
                <in>dcomplex.c</in>
                <in>dcopy_to_ucol.c</in>
                <in>ddiagonal.c</in>
                <in>dgscon.c</in>
                <in>dgsequ.c</in>
                <in>dgsisx.c</in>
                <in>dgsitrf.c</in>
                <in>dgsrfs.c</in>
                <in>dgssv.c</in>
                <in>dgssvx.c</in>
                <in>dgstrf.c</in>
                <in>dgstrs.c</in>
                <in>dlacon.c</in>
                <in>dlamch.c</in>
                <in>dlangs.c</in>
                <in>dlaqgs.c</in>
                <in>dldperm.c</in>
                <in>dmemory.c</in>
                <in>dmyblas2.c</in>
                <in>dpanel_bmod.c</in>
                <in>dpanel_dfs.c</in>
                <in>dpivotL.c</in>
                <in>dpivotgrowth.c</in>
                <in>dpruneL.c</in>
                <in>dreadhb.c</in>
                <in>dreadrb.c</in>
                <in>dreadtriple.c</in>
                <in>dsnode_bmod.c</in>
                <in>dsnode_dfs.c</in>
                <in>dsp_blas2.c</in>
                <in>dsp_blas3.c</in>
                <in>dutil.c</in>
                <in>dzsum1.c</in>
                <in>get_perm_c.c</in>
                <in>heap_relax_snode.c</in>
                <in>html_mainpage.h</in>
                <in>icmax1.c</in>
                <in>ilu_ccolumn_dfs.c</in>
                <in>ilu_ccopy_to_ucol.c</in>
                <in>ilu_cdrop_row.c</in>
                <in>ilu_cpanel_dfs.c</in>
                <in>ilu_cpivotL.c</in>
                <in>ilu_csnode_dfs.c</in>
                <in>ilu_dcolumn_dfs.c</in>
                <in>ilu_dcopy_to_ucol.c</in>
                <in>ilu_ddrop_row.c</in>
                <in>ilu_dpanel_dfs.c</in>
                <in>ilu_dpivotL.c</in>
                <in>ilu_dsnode_dfs.c</in>
                <in>ilu_heap_relax_snode.c</in>
                <in>ilu_relax_snode.c</in>
                <in>ilu_scolumn_dfs.c</in>
                <in>ilu_scopy_to_ucol.c</in>
                <in>ilu_sdrop_row.c</in>
                <in>ilu_spanel_dfs.c</in>
                <in>ilu_spivotL.c</in>
                <in>ilu_ssnode_dfs.c</in>
                <in>ilu_zcolumn_dfs.c</in>
                <in>ilu_zcopy_to_ucol.c</in>
                <in>ilu_zdrop_row.c</in>
                <in>ilu_zpanel_dfs.c</in>
                <in>ilu_zpivotL.c</in>
                <in>ilu_zsnode_dfs.c</in>
                <in>izmax1.c</in>
                <in>lsame.c</in>
                <in>mark_relax.c</in>
                <in>mc64ad.c</in>
                <in>memory.c</in>
                <in>mmd.c</in>
                <in>qselect.c</in>
                <in>relax_snode.c</in>
                <in>scolumn_bmod.c</in>
                <in>scolumn_dfs.c</in>
                <in>scomplex.c</in>
                <in>scopy_to_ucol.c</in>
                <in>scsum1.c</in>
                <in>sdiagonal.c</in>
                <in>sgscon.c</in>
                <in>sgsequ.c</in>
                <in>sgsisx.c</in>
                <in>sgsitrf.c</in>
                <in>sgsrfs.c</in>
                <in>sgssv.c</in>
                <in>sgssvx.c</in>
                <in>sgstrf.c</in>
                <in>sgstrs.c</in>
                <in>slacon.c</in>
                <in>slamch.c</in>
                <in>slangs.c</in>
                <in>slaqgs.c</in>
                <in>sldperm.c</in>
                <in>slu_Cnames.h</in>
                <in>slu_cdefs.h</in>
                <in>slu_dcomplex.h</in>
                <in>slu_ddefs.h</in>
                <in>slu_scomplex.h</in>
                <in>slu_sdefs.h</in>
                <in>slu_util.h</in>
                <in>slu_zdefs.h</in>
                <in>smemory.c</in>
                <in>smyblas2.c</in>
                <in>sp_coletree.c</in>
                <in>sp_ienv.c</in>
                <in>sp_preorder.c</in>
                <in>spanel_bmod.c</in>
                <in>spanel_dfs.c</in>
                <in>spivotL.c</in>
                <in>spivotgrowth.c</in>
                <in>spruneL.c</in>
                <in>sreadhb.c</in>
                <in>sreadrb.c</in>
                <in>sreadtriple.c</in>
                <in>ssnode_bmod.c</in>
                <in>ssnode_dfs.c</in>
                <in>ssp_blas2.c</in>
                <in>ssp_blas3.c</in>
                <in>superlu_enum_consts.h</in>
                <in>superlu_timer.c</in>
                <in>supermatrix.h</in>
                <in>sutil.c</in>
                <in>util.c</in>
                <in>xerbla.c</in>
                <in>zcolumn_bmod.c</in>
                <in>zcolumn_dfs.c</in>
                <in>zcopy_to_ucol.c</in>
                <in>zdiagonal.c</in>
                <in>zgscon.c</in>
                <in>zgsequ.c</in>
                <in>zgsisx.c</in>
                <in>zgsitrf.c</in>
                <in>zgsrfs.c</in>
                <in>zgssv.c</in>
                <in>zgssvx.c</in>
                <in>zgstrf.c</in>
                <in>zgstrs.c</in>
                <in>zlacon.c</in>
                <in>zlangs.c</in>
                <in>zlaqgs.c</in>
                <in>zldperm.c</in>
                <in>zmemory.c</in>
                <in>zmyblas2.c</in>
                <in>zpanel_bmod.c</in>
                <in>zpanel_dfs.c</in>
                <in>zpivotL.c</in>
                <in>zpivotgrowth.c</in>
                <in>zpruneL.c</in>
                <in>zreadhb.c</in>
                <in>zreadrb.c</in>
                <in>zreadtriple.c</in>
                <in>zsnode_bmod.c</in>
                <in>zsnode_dfs.c</in>
                <in>zsp_blas2.c</in>
                <in>zsp_blas3.c</in>
                <in>zutil.c</in>
              </df>
              <df name="TESTING">
                <df name="MATGEN">
                  <in>cdotc.c</in>
                  <in>clacgv.c</in>
                  <in>clagge.c</in>
                  <in>claghe.c</in>
                  <in>clagsy.c</in>
                  <in>clarge.c</in>
                  <in>clarnd.c</in>
                  <in>clarnv.c</in>
                  <in>claror.c</in>
                  <in>clarot.c</in>
                  <in>clartg.c</in>
                  <in>claset.c</in>
                  <in>clatb4.c</in>
                  <in>clatm2.c</in>
                  <in>clatm3.c</in>
                  <in>clatme.c</in>
                  <in>clatmr.c</in>
                  <in>clatms.c</in>
                  <in>csymv.c</in>
                  <in>d_lg10.c</in>
                  <in>d_sign.c</in>
                  <in>dlabad.c</in>
                  <in>dlagge.c</in>
                  <in>dlagsy.c</in>
                  <in>dlaran.c</in>
                  <in>dlarge.c</in>
                  <in>dlarnd.c</in>
                  <in>dlarnv.c</in>
                  <in>dlaror.c</in>
                  <in>dlarot.c</in>
                  <in>dlartg.c</in>
                  <in>dlaruv.c</in>
                  <in>dlaset.c</in>
                  <in>dlatb4.c</in>
                  <in>dlatm1.c</in>
                  <in>dlatm2.c</in>
                  <in>dlatm3.c</in>
                  <in>dlatme.c</in>
                  <in>dlatmr.c</in>
                  <in>dlatms.c</in>
                  <in>f2c.h</in>
                  <in>lsamen.c</in>
                  <in>pow_dd.c</in>
                  <in>r_lg10.c</in>
                  <in>r_sign.c</in>
                  <in>slabad.c</in>
                  <in>slagge.c</in>
                  <in>slagsy.c</in>
                  <in>slaran.c</in>
                  <in>slarge.c</in>
                  <in>slarnd.c</in>
                  <in>slarnv.c</in>
                  <in>slaror.c</in>
                  <in>slarot.c</in>
                  <in>slartg.c</in>
                  <in>slaruv.c</in>
                  <in>slaset.c</in>
                  <in>slatb4.c</in>
                  <in>slatm1.c</in>
                  <in>slatm2.c</in>
                  <in>slatm3.c</in>
                  <in>slatme.c</in>
                  <in>slatmr.c</in>
                  <in>slatms.c</in>
                  <in>slu_Cnames.h</in>
                  <in>zdotc.c</in>
                  <in>zlacgv.c</in>
                  <in>zlagge.c</in>
                  <in>zlaghe.c</in>
                  <in>zlagsy.c</in>
                  <in>zlarge.c</in>
                  <in>zlarnd.c</in>
                  <in>zlarnv.c</in>
                  <in>zlaror.c</in>
                  <in>zlarot.c</in>
                  <in>zlartg.c</in>
                  <in>zlaset.c</in>
                  <in>zlatb4.c</in>
                  <in>zlatm2.c</in>
                  <in>zlatm3.c</in>
                  <in>zlatme.c</in>
                  <in>zlatmr.c</in>
                  <in>zlatms.c</in>
                  <in>zsymv.c</in>
                </df>
                <in>cdrive.c</in>
                <in>cgst01.c</in>
                <in>cgst02.c</in>
                <in>cgst04.c</in>
                <in>cgst07.c</in>
                <in>ddrive.c</in>
                <in>dgst01.c</in>
                <in>dgst02.c</in>
                <in>dgst04.c</in>
                <in>dgst07.c</in>
                <in>sdrive.c</in>
                <in>sgst01.c</in>
                <in>sgst02.c</in>
                <in>sgst04.c</in>
                <in>sgst07.c</in>
                <in>sp_cconvert.c</in>
                <in>sp_dconvert.c</in>
                <in>sp_ienv.c</in>
                <in>sp_sconvert.c</in>
                <in>sp_zconvert.c</in>
                <in>zdrive.c</in>
                <in>zgst01.c</in>
                <in>zgst02.c</in>
                <in>zgst04.c</in>
                <in>zgst07.c</in>
              </df>
            </df>
            <in>solvePASTIX.c</in>
          </df>
          <df name="custom_python">
            <in>add_linear_solvers_to_python.cpp</in>
            <in>add_linear_solvers_to_python.h</in>
            <in>externalsolvers_python_application.cpp</in>
          </df>
          <df name="external_includes">
            <in>amgcl_ns_solver.h</in>
            <in>amgcl_solver.h</in>
            <in>gmres_solver.h</in>
            <in>itsol_arms_solver.h</in>
            <in>parallel_superlu_solver.h</in>
            <in>pastix_solver.h</in>
            <in>superlu_iterative_solver.h</in>
            <in>superlu_solver.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <in>externalsolvers_application.cpp</in>
          <in>externalsolvers_application.h</in>
        </df>
        <df name="FDApplication">
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>fd_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>bfeccStrategy.h</in>
          </df>
          <df name="custom_utilities">
            <in>bfecc.cpp</in>
            <in>bfecc.h</in>
            <in>bfecc_utils.h</in>
            <in>fractional_step_explicit_solver.cpp</in>
            <in>fractional_step_explicit_solver.h</in>
            <in>grid_printer.cpp</in>
            <in>grid_printer.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <df name="tests">
          </df>
          <in>fd_application.cpp</in>
          <in>fd_application.h</in>
        </df>
        <df name="FluidDynamicsApplication">
          <df name="custom_conditions">
            <in>fs_generalized_wall_condition.cpp</in>
            <in>fs_generalized_wall_condition.h</in>
            <in>fs_periodic_condition.cpp</in>
            <in>fs_periodic_condition.h</in>
            <in>fs_werner_wengle_wall_condition.cpp</in>
            <in>fs_werner_wengle_wall_condition.h</in>
            <in>monolithic_wall_condition.cpp</in>
            <in>monolithic_wall_condition.h</in>
            <in>stokes_wall_condition.cpp</in>
            <in>stokes_wall_condition.h</in>
            <in>wall_condition.cpp</in>
            <in>wall_condition.h</in>
            <in>wall_condition_discontinuous.cpp</in>
            <in>wall_condition_discontinuous.h</in>
          </df>
          <df name="custom_constitutive">
            <in>bingham_3d_law.cpp</in>
            <in>bingham_3d_law.h</in>
            <in>herschel_bulkey_3d_law.cpp</in>
            <in>herschel_bulkey_3d_law.h</in>
            <in>newtonian_3d_law.cpp</in>
            <in>newtonian_3d_law.h</in>
          </df>
          <df name="custom_elements">
            <in>bingham_fluid.h</in>
            <in>dpg_vms.h</in>
            <in>dynamic_vms.cpp</in>
            <in>dynamic_vms.h</in>
            <in>fractional_step.cpp</in>
            <in>fractional_step.h</in>
            <in>fractional_step_discontinuous.cpp</in>
            <in>fractional_step_discontinuous.h</in>
            <in>herschel_bulkley_fluid.h</in>
            <in>spalart_allmaras.cpp</in>
            <in>spalart_allmaras.h</in>
            <in>stationary_stokes.cpp</in>
            <in>stationary_stokes.h</in>
            <in>stokes_3D.cpp</in>
            <in>stokes_3D.h</in>
            <in>stokes_3D_twofluid.cpp</in>
            <in>stokes_3D_twofluid.h</in>
            <in>two_fluid_vms.h</in>
            <in>vms.cpp</in>
            <in>vms.h</in>
          </df>
          <df name="custom_processes">
            <in>Boundary_Windkessel_model.h</in>
            <in>spalart_allmaras_turbulence_model.h</in>
            <in>stokes_initialization_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>fluid_dynamics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>residualbased_block_builder_and_solver_periodic.h</in>
            </df>
            <df name="convergence_criteria">
              <in>vel_pr_criteria.h</in>
            </df>
            <df name="strategies">
              <in>fs_strategy.h</in>
              <in>gear_scheme.h</in>
              <in>residualbased_predictorcorrector_velocity_bdf_scheme_turbulent.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme_turbulent.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>dynamic_smagorinsky_utilities.h</in>
            <in>fractional_step_settings.h</in>
            <in>fractional_step_settings_periodic.h</in>
            <in>integration_point_to_node_transformation_utility.h</in>
            <in>periodic_condition_utilities.h</in>
            <in>solver_settings.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="cyl_bench">
            </df>
            <df name="fs_cavity">
            </df>
            <df name="oss_trapezoid">
            </df>
            <df name="slip_test">
            </df>
            <df name="vms2d_test">
            </df>
          </df>
          <in>fluid_dynamics_application.cpp</in>
          <in>fluid_dynamics_application.h</in>
          <in>fluid_dynamics_application_variables.cpp</in>
          <in>fluid_dynamics_application_variables.h</in>
        </df>
        <df name="freezing_soil_application">
          <df name="constitutive_laws">
            <in>casm.cpp</in>
            <in>casm.h</in>
            <in>clay_and_sand_model.cpp</in>
            <in>clay_and_sand_model.h</in>
            <in>freezing_soil_elastoplastic_model.cpp</in>
            <in>freezing_soil_elastoplastic_model.h</in>
            <in>modified_barcelona_basic_model.cpp</in>
            <in>modified_barcelona_basic_model.h</in>
            <in>viscoplastic_3d.cpp</in>
            <in>viscoplastic_3d.h</in>
          </df>
          <df name="custom_conditions">
            <in>face_heat_convection.cpp</in>
            <in>face_heat_convection.h</in>
            <in>face_heat_flux.cpp</in>
            <in>face_heat_flux.h</in>
            <in>face_heat_radiation.cpp</in>
            <in>face_heat_radiation.h</in>
            <in>face_load_pressure.cpp</in>
            <in>face_load_pressure.h</in>
            <in>face_water_flux.cpp</in>
            <in>face_water_flux.h</in>
          </df>
          <df name="custom_elements">
            <in>freezing_soil.cpp</in>
            <in>freezing_soil.h</in>
            <in>soil_2phase_rigid.cpp</in>
            <in>soil_2phase_rigid.h</in>
            <in>soil_3phase.cpp</in>
            <in>soil_3phase.h</in>
            <in>solid.cpp</in>
            <in>solid.h</in>
            <in>unfrozen_soil.cpp</in>
            <in>unfrozen_soil.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="soil.gid">
              <df name="images">
              </df>
              <df name="symbols">
              </df>
            </df>
          </df>
          <df name="custom_problemtypes">
            <df name="soil.gid">
              <df name="images">
              </df>
              <df name="symbols">
              </df>
            </df>
          </df>
          <df name="custom_python">
            <in>add_constitutive_laws_to_python.cpp</in>
            <in>add_constitutive_laws_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>freezing_soil_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="convergencecriterias">
              <in>mengmeng_criteria.h</in>
            </df>
            <df name="schemes">
              <in>generalized_alpha_mengmeng.h</in>
              <in>generalized_alpha_mengmeng_with_accelaration.h</in>
            </df>
          </df>
          <df name="problemtypes">
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="freezing1D.gid">
            </df>
          </df>
          <in>freezing_soil_application.cpp</in>
          <in>freezing_soil_application.h</in>
        </df>
        <df name="FSIapplication">
          <df name="custom_elements">
            <in>coupling_face2D.cpp</in>
            <in>coupling_face2D.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="problemtype_generator">
              <df name="fsi_python">
              </df>
            </df>
          </df>
          <df name="custom_processes">
            <in>check_fsi_convergence_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_mappers_to_python.cpp</in>
            <in>add_mappers_to_python.h</in>
            <in>fsi_python_application.cpp</in>
          </df>
          <df name="custom_utilities">
            <in>AdvancedNMPointsMapper.cpp</in>
            <in>AdvancedNMPointsMapper.hpp</in>
            <in>FSI_utils.h</in>
            <in>InterfacePreprocess.h</in>
            <in>aitken_utils.h</in>
            <in>shared_points_mapper.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="flag_test.gid">
            </df>
            <df name="meshtest2D.gid">
            </df>
            <df name="meshtest3D.gid">
            </df>
          </df>
          <in>fsi_application.cpp</in>
          <in>fsi_application.h</in>
        </df>
        <df name="gpu_solvers_application">
          <df name="custom_external_libraries">
            <in>AMGpreconditioner.h</in>
            <in>Diagonalpreconditioner.cpp</in>
            <in>Diagonalpreconditioner.h</in>
            <in>GPUPreconditioner.h</in>
            <in>cwrapper.cpp</in>
            <in>cwrapper.h</in>
            <in>gpu_sparse.h</in>
            <in>gpu_sparse_kernels.h</in>
            <in>gpu_sparse_utils.h</in>
            <in>linear_solvers.h</in>
            <in>mat8.mm</in>
            <in>mmio.cpp</in>
            <in>mmio.h</in>
            <in>spai_preconditioner.h</in>
            <in>test_c_api.c</in>
            <in>vecb8.mm</in>
          </df>
          <df name="custom_linear_solvers">
            <in>Kratos_AMGpreconditioner.h</in>
            <in>Kratos_GPUPreconditioner.h</in>
            <in>amg_solver.h</in>
            <in>gpu_bicgstab_solver.h</in>
            <in>gpu_cg_solver.h</in>
          </df>
          <df name="custom_python">
            <in>add_linear_solvers_to_python.cpp</in>
            <in>add_linear_solvers_to_python.h</in>
            <in>gpu_solvers_python_application.cpp</in>
          </df>
          <df name="test_examples">
            <df name="cavity2d.gid">
            </df>
            <df name="LinearSolversTesting">
              <in>mat8.mm</in>
              <in>vecb8.mm</in>
            </df>
          </df>
          <in>gpu_solvers_application.cpp</in>
          <in>gpu_solvers_application.h</in>
        </df>
        <df name="henry_application">
          <df name="CMakeFiles">
            <df name="KratosHenryApplication.dir">
              <df name="custom_conditions">
              </df>
              <df name="custom_elements">
              </df>
              <df name="custom_python">
              </df>
            </df>
          </df>
          <df name="custom_conditions">
            <in>massflow.cpp</in>
            <in>massflow.h</in>
            <in>sinksourcepressure.cpp</in>
            <in>sinksourcepressure.h</in>
          </df>
          <df name="custom_elements">
            <in>flowpressuretrans_2d.cpp</in>
            <in>flowpressuretrans_2d.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>henry_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="000">
              <in>fractional_iterative_configuration.h</in>
              <in>fractional_iterative_strategy.h</in>
            </df>
            <in>fractional_iterative_configuration.h</in>
            <in>fractional_iterative_strategy.h</in>
            <in>solver_strategy_configuration.h</in>
          </df>
          <df name="custom_utilities">
            <in>unitary_test_utilities.h</in>
          </df>
          <df name="python_scripts">
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="henrySimple.gid">
            </df>
            <df name="paper_test">
            </df>
          </df>
          <in>henry_application.cpp</in>
          <in>henry_application.h</in>
        </df>
        <df name="incompressible_fluid_application">
          <df name="custom_conditions">
            <in>fluid3d_neumann.cpp</in>
            <in>fluid3d_neumann.h</in>
            <in>monolithic2d_neumann.cpp</in>
            <in>monolithic2d_neumann.h</in>
            <in>monolithic3d_neumann.cpp</in>
            <in>monolithic3d_neumann.h</in>
            <in>no_slip_condition_2d.cpp</in>
            <in>no_slip_condition_2d.h</in>
            <in>proj_dirichlet_cond.cpp</in>
            <in>proj_dirichlet_cond.h</in>
            <in>proj_dirichlet_cond3D.cpp</in>
            <in>proj_dirichlet_cond3D.h</in>
          </df>
          <df name="custom_elements">
            <in>NDfluid_2d.cpp</in>
            <in>NDfluid_2d.h</in>
            <in>NDfluid_2d_CrankNicolson.cpp</in>
            <in>NDfluid_2d_CrankNicolson.h</in>
            <in>NDfluid_3d.cpp</in>
            <in>NDfluid_3d.h</in>
            <in>asgs_2d.cpp</in>
            <in>asgs_2d.h</in>
            <in>asgs_3d.cpp</in>
            <in>asgs_3d.h</in>
            <in>asgs_3d_comp_enriched.cpp</in>
            <in>asgs_3d_comp_enriched.h</in>
            <in>asgs_3d_enriched.cpp</in>
            <in>asgs_3d_enriched.h</in>
            <in>asgs_comp_pr_dc_2d.cpp</in>
            <in>asgs_comp_pr_dc_2d.h</in>
            <in>asgs_comp_pr_dc_3d.cpp</in>
            <in>asgs_comp_pr_dc_3d.h</in>
            <in>asgs_compressible_2d.cpp</in>
            <in>asgs_compressible_2d.h</in>
            <in>asgs_compressible_3d.cpp</in>
            <in>asgs_compressible_3d.h</in>
            <in>asgs_pr_dc.cpp</in>
            <in>asgs_pr_dc.h</in>
            <in>asgs_pr_dc_2d.cpp</in>
            <in>asgs_pr_dc_2d.h</in>
            <in>bingham_nonnewtonian_asgs_2d.cpp</in>
            <in>bingham_nonnewtonian_asgs_2d.h</in>
            <in>bingham_nonnewtonian_asgs_3d.cpp</in>
            <in>bingham_nonnewtonian_asgs_3d.h</in>
            <in>explicit_asgs_comp_pr_dc_2d.cpp</in>
            <in>explicit_asgs_comp_pr_dc_2d.h</in>
            <in>explicit_asgs_comp_pr_dc_3d.cpp</in>
            <in>explicit_asgs_comp_pr_dc_3d.h</in>
            <in>explicit_asgs_compressible_2d.cpp</in>
            <in>explicit_asgs_compressible_2d.h</in>
            <in>explicit_asgs_compressible_3d.cpp</in>
            <in>explicit_asgs_compressible_3d.h</in>
            <in>fluid_2d.cpp</in>
            <in>fluid_2d.h</in>
            <in>fluid_2dGLS.cpp</in>
            <in>fluid_2dGLS.h</in>
            <in>fluid_2dGLS_expl.cpp</in>
            <in>fluid_2dGLS_expl.h</in>
            <in>fluid_2dGLS_expl_comp.cpp</in>
            <in>fluid_2dGLS_expl_comp.h</in>
            <in>fluid_2d_split.cpp</in>
            <in>fluid_2d_split.h</in>
            <in>fluid_2dcoupled.cpp</in>
            <in>fluid_2dcoupled.h</in>
            <in>fluid_3d.cpp</in>
            <in>fluid_3d.h</in>
            <in>fluid_3dGLS_expl.cpp</in>
            <in>fluid_3dGLS_expl.h</in>
            <in>fluid_3dGLS_expl_comp.cpp</in>
            <in>fluid_3dGLS_expl_comp.h</in>
            <in>fluid_3dcoupled.cpp</in>
            <in>fluid_3dcoupled.h</in>
            <in>nonewtonian_asgs_2d.cpp</in>
            <in>nonewtonian_asgs_2d.h</in>
            <in>nonewtonian_asgs_3d.cpp</in>
            <in>nonewtonian_asgs_3d.h</in>
            <in>v-p-precond_2d.cpp</in>
            <in>v-p-precond_2d.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="problemtype_generator">
              <df name="edgebased_script">
              </df>
              <df name="elembased_script">
              </df>
              <df name="fluid_only_scripts">
              </df>
            </df>
          </df>
          <df name="custom_processes">
            <in>CFL_timestep_estimate_process.h</in>
            <in>apply_proj_dirichlet_process.h</in>
            <in>assign_h_by_distance_process.h</in>
            <in>choose_element_process.h</in>
            <in>copy_to_vulcan_post_variables_process.h</in>
            <in>explicit_dt.h</in>
            <in>find_interface_process.h</in>
            <in>find_intersections_process.h</in>
            <in>generate_slip_condition_process.h</in>
            <in>merge_in_one_model_parts_process.h</in>
            <in>merge_model_parts_process.h</in>
            <in>pseudo_lag_part_process.h</in>
            <in>save_conditions_process.h</in>
            <in>save_element_by_flag_process.h</in>
            <in>save_element_by_size_process.h</in>
            <in>save_external_surface_embedded.h</in>
            <in>save_flag_model_part_process.h</in>
            <in>save_lagrangian_surface_process.h</in>
            <in>save_shell_model_part_process.h</in>
            <in>save_structure_conditions_process.h</in>
            <in>save_structure_model_part_process.h</in>
            <in>subdomain_disable_process.h</in>
            <in>subscale_error_estimate_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_edgebased_levelset_solver_to_python.cpp</in>
            <in>add_custom_edgebased_levelset_solver_to_python.h</in>
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>kratos_incompressible_fluid_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>explicit_residualbased_builder.h</in>
              <in>pressure_splitting_builder_and_solver.h</in>
              <in>residualbased_elimination_ND_discretelaplacian_builder_and_solver.h</in>
              <in>residualbased_elimination_discretelaplacian_builder_and_solver.h</in>
              <in>residualbased_elimination_discretelaplacian_builder_and_solver_flexiblefsi.h</in>
            </df>
            <df name="convergencecriterias">
              <in>UP_criteria.h</in>
            </df>
            <df name="strategies">
              <in>explicit_residualbased_newton_raphson_strategy.h</in>
              <in>explicit_residualbased_predictorcorrector_velocity_bossak_scheme.h</in>
              <in>explicit_residualbased_predictorcorrector_velocity_bossak_scheme_compressible.h</in>
              <in>fracstep_GLS_strategy.h</in>
              <in>fractional_step_strategy.h</in>
              <in>fractionalstep_configuration.h</in>
              <in>hydro_mid_point_predictorcorrector.h</in>
              <in>mid_point_predictorcorrector.h</in>
              <in>newton_raphson_oss_strategy.h</in>
              <in>newton_raphson_strategy.h</in>
              <in>residualbased_ND_fluid_strategy.h</in>
              <in>residualbased_lagrangian_monolithic_scheme.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme_2step.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme_compressible.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme_compressible_pavel.h</in>
              <in>residualbased_predictorcorrector_velocity_bossak_scheme_dpg_enriched.h</in>
              <in>residualbased_predictorcorrector_velocity_crni_scheme_compressible.h</in>
              <in>runge_kutta_fracstep_GLS_comp_strategy.h</in>
              <in>runge_kutta_fracstep_GLS_strategy.h</in>
              <in>solver_configuration.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>Turbolence_Smagorinsky.h</in>
            <in>assign_no_slip_condition.h</in>
            <in>calculate_forces_utilities.h</in>
            <in>combustion_utilities.h</in>
            <in>coupled_eulerian_ulf_utilities.h</in>
            <in>custom_interpolator.h</in>
            <in>edge_data.h</in>
            <in>edge_data_c2c.h</in>
            <in>edgebased_gid_io.h</in>
            <in>edgebased_levelset.h</in>
            <in>edgebased_levelset_substep.h</in>
            <in>elembased_BC_utilities.h</in>
            <in>elembased_distance_utilities.h</in>
            <in>elembased_extrapolation_utilities.h</in>
            <in>embedded_utilities.h</in>
            <in>estimate_dt_utilities.h</in>
            <in>fluid_interpolator.h</in>
            <in>fluid_solver.h</in>
            <in>fluid_thermal_solver_utilities.h</in>
            <in>lagrangian_particle_utilities.h</in>
            <in>lagrangian_pfem2_utilities.h</in>
            <in>level_set_utilities.h</in>
            <in>level_set_utilities_implicitextrapolation.h</in>
            <in>levelset_fluid_solver.h</in>
            <in>mark_for_refinement.h</in>
            <in>move_particle_utility.h</in>
            <in>parallel_extrapolation_utilities.h</in>
            <in>particle_utilities.h</in>
            <in>pure_convection_edgebased.h</in>
            <in>wave_generator.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="cavity2D.gid">
            </df>
            <df name="cavity3D.gid">
            </df>
            <df name="CavityMonolithic.gid">
            </df>
            <df name="CavityMonolithic3D.gid">
            </df>
            <df name="cilinderGLS.gid">
            </df>
            <df name="column.gid">
            </df>
            <df name="cylinder.gid">
            </df>
            <df name="edgebased_fixed_press.gid">
            </df>
            <df name="mass_conservation.gid">
            </df>
            <df name="mixing_comp.gid">
            </df>
            <df name="naca3d.gid">
            </df>
            <df name="StillWater_Edgebased.gid">
            </df>
            <df name="StillWater_Edgebased_halfPorous.gid">
            </df>
          </df>
          <in>incompressible_fluid_application.cpp</in>
          <in>incompressible_fluid_application.h</in>
        </df>
        <df name="kElectrostatic">
          <df name="custom_conditions">
            <in>efield2D.cpp</in>
            <in>efield2D.h</in>
            <in>efield3D.cpp</in>
            <in>efield3D.h</in>
            <in>pointcharge2D.cpp</in>
            <in>pointcharge2D.h</in>
            <in>pointcharge3D.h</in>
            <in>pointcharge3d.cpp</in>
          </df>
          <df name="custom_elements">
            <in>electrostatic_2d.cpp</in>
            <in>electrostatic_2d.h</in>
            <in>electrostatic_3d.cpp</in>
            <in>electrostatic_3d.h</in>
            <in>poisson_2d.cpp</in>
            <in>poisson_2d.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="images">
            </df>
            <df name="kElectrostatic.gid">
            </df>
            <df name="kElectrostatic3D.gid">
            </df>
          </df>
          <df name="custom_python">
            <in>kElectrostatic_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="strategies">
              <in>residualbased_convdiff_strategy.h</in>
              <in>residualbased_convdiff_strategy_nonlinear.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>face_heat_utilities.h</in>
            <in>pure_convection_CrankN_tools.h</in>
            <in>pure_convection_tools.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="validation">
              <df name="Basic2DkElectrostatic.gid">
              </df>
              <df name="Basic3DkElectrostatic.gid">
              </df>
            </df>
          </df>
          <in>kElectrostatic.cpp</in>
          <in>kElectrostatic.h</in>
        </df>
        <df name="kMagnetostatic">
          <df name="custom_conditions">
            <in>mfield2D.cpp</in>
            <in>mfield2D.h</in>
            <in>pointcurrent2D.h</in>
            <in>pointcurrent2d.cpp</in>
          </df>
          <df name="custom_elements">
            <in>magnetostatic_2d.cpp</in>
            <in>magnetostatic_2d.h</in>
            <in>magnetostatic_3d.cpp</in>
            <in>magnetostatic_3d.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="images">
            </df>
            <df name="kMagnetostatic.gid">
            </df>
            <df name="kMagnetostatic3D.gid">
            </df>
          </df>
          <df name="custom_python">
            <in>kMagnetostatic_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="strategies">
              <in>residualbased_convdiff_strategy.h</in>
              <in>residualbased_convdiff_strategy_nonlinear.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>face_heat_utilities.h</in>
            <in>pure_convection_CrankN_tools.h</in>
            <in>pure_convection_tools.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="exhibition">
              <df name="basic-motor.gid">
              </df>
              <df name="basic-motor3D.gid">
              </df>
            </df>
            <df name="validation">
              <df name="cable.gid">
              </df>
              <df name="Cubito.gid">
              </df>
              <df name="Cubitos.gid">
              </df>
              <df name="Iman.gid">
              </df>
              <df name="ImanHy.gid">
              </df>
            </df>
          </df>
          <in>kMagnetostatic.cpp</in>
          <in>kMagnetostatic.h</in>
        </df>
        <df name="kPoisson">
          <df name="custom_elements">
            <in>poisson_2d.cpp</in>
            <in>poisson_2d.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="images">
            </df>
            <df name="kPoisson.gid">
            </df>
          </df>
          <df name="custom_python">
            <in>kPoisson_python_application.cpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="our_example.gid">
            </df>
          </df>
          <in>kPoisson.cpp</in>
          <in>kPoisson.h</in>
        </df>
        <df name="kratos_matrix_method_application">
        </df>
        <df name="manager_application">
          <df name="CMakeFiles">
            <df name="KratosManagerApplication.dir">
              <df name="custom_python">
              </df>
            </df>
          </df>
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>manager_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
          </df>
          <df name="python_scripts">
            <df name="000">
            </df>
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="basic_benchmarks">
              <df name="benchmark2_Post_Files">
              </df>
              <df name="paper_data">
              </df>
            </df>
            <df name="henry_test">
            </df>
            <df name="pure_diffusion_test">
            </df>
          </df>
          <df name="tests">
            <df name="__pycache__">
            </df>
            <df name="henry">
            </df>
            <df name="henryTest">
            </df>
          </df>
          <in>manager_application.cpp</in>
          <in>manager_application.h</in>
        </df>
        <df name="MeshingApplication">
          <df name="custom_external_libraries">
            <df name="embedded">
            </df>
            <df name="tetgen">
              <df name="tetgen1.4.0">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
              <df name="tetgen1.4.2">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
              <df name="tetgen1.4.3">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
            </df>
            <df name="tetMeshOpt">
              <in>Math3D.cpp</in>
              <in>Math3D.h</in>
              <in>MeshOptimizer.cpp</in>
              <in>u_MeshLoaders.cpp</in>
              <in>u_MeshLoaders.h</in>
              <in>u_MeshSmooth.cpp</in>
              <in>u_MeshSmooth.h</in>
              <in>u_ParallelFunctions.cpp</in>
              <in>u_ParallelFunctions.h</in>
              <in>u_ProcessTime.cpp</in>
              <in>u_ProcessTime.h</in>
              <in>u_Render.h</in>
              <in>u_ShowMetrics.cpp</in>
              <in>u_ShowMetrics.h</in>
              <in>u_TetGenInterface.cpp</in>
              <in>u_TetGenInterface.h</in>
              <in>u_TetraFunctions.cpp</in>
              <in>u_TetraFunctions.h</in>
              <in>u_Types.cpp</in>
              <in>u_Types.h</in>
              <in>u_colorScale.cpp</in>
              <in>u_colorScale.h</in>
              <in>u_delphiClasses.cpp</in>
              <in>u_delphiClasses.h</in>
              <in>u_elementCluster.cpp</in>
              <in>u_elementCluster.h</in>
              <in>u_qualityMetrics.cpp</in>
              <in>u_qualityMetrics.h</in>
              <in>u_tools.cpp</in>
              <in>u_tools.h</in>
            </df>
            <df name="triangle">
              <in>showme.c</in>
              <in>triangle.c</in>
              <in>triangle.h</in>
              <in>tricall.c</in>
            </df>
          </df>
          <df name="custom_io">
            <in>pfem_gid_io.h</in>
          </df>
          <df name="custom_processes">
            <in>embedded_mesh_locator_process.h</in>
            <in>find_nodal_h_process.h</in>
            <in>set_h_map_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_meshers_to_python.cpp</in>
            <in>add_meshers_to_python.h</in>
            <in>add_processes_to_python.cpp</in>
            <in>add_processes_to_python.h</in>
            <in>kratos_meshing_python_application.cpp</in>
          </df>
          <df name="custom_utilities">
            <in>binbased_projection.h</in>
            <in>cutting_iso_app.h</in>
            <in>local_refine_geometry_mesh.cpp</in>
            <in>local_refine_geometry_mesh.hpp</in>
            <in>local_refine_prism_mesh.hpp</in>
            <in>local_refine_sprism_mesh.hpp</in>
            <in>local_refine_tetrahedra_mesh.hpp</in>
            <in>local_refine_triangle_mesh.hpp</in>
            <in>projection.h</in>
            <in>tetgen_volume_mesher.h</in>
            <in>tetrahedra_reconnect_utility.h</in>
          </df>
          <df name="external_includes">
            <in>gid_mesh_library.h</in>
            <in>mesh_suites.cpp</in>
            <in>msuite_pfem_refine.h</in>
            <in>pragmatic_adapt_3d.h</in>
            <in>tetgen_cdt.h</in>
            <in>tetgen_pfem_contact.h</in>
            <in>tetgen_pfem_refine.h</in>
            <in>tetgen_pfem_refine_face.h</in>
            <in>tetgen_pfem_refine_vms.h</in>
            <in>trigen_cdt.h</in>
            <in>trigen_mesh_suite_refine.h</in>
            <in>trigen_pfem_refine.h</in>
            <in>trigen_pfem_refine_segment.h</in>
            <in>trigen_pfem_refine_vms.h</in>
          </df>
          <df name="test_examples">
            <df name="adaptive_mesher2d.gid">
            </df>
            <df name="adaptive_mesher3d.gid">
            </df>
            <df name="dam3d_remesh.gid">
            </df>
            <df name="Mapping_2d.gid">
            </df>
            <df name="Mapping_2d_BinBased.gid">
            </df>
            <df name="Mapping_3d.gid">
            </df>
            <df name="Mapping_3d_BinBased.gid">
            </df>
            <df name="meshConnectivityOptimization">
            </df>
            <df name="refine.gid">
            </df>
            <df name="test_connectivity_preserve_modeler">
            </df>
          </df>
          <in>meshing_application.cpp</in>
          <in>meshing_application.h</in>
        </df>
        <df name="meshless_application">
          <df name="custom_elements">
            <in>SPHparticle.h</in>
          </df>
          <df name="custom_problemtype">
          </df>
          <df name="custom_processes">
            <in>node_and_element_erase_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>meshless_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>sph_time_integrator.h</in>
          </df>
          <df name="custom_utilities">
            <in>CreateSPHParticle.h</in>
            <in>SPH_particle_configure.h</in>
            <in>SPH_particle_configure1.h</in>
            <in>neighbours_calculator_SPH.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="StillWaterCoarse.gid">
            </df>
          </df>
          <in>meshless_application.cpp</in>
          <in>meshless_application.h</in>
          <in>meshless_application_variables.cpp</in>
          <in>meshless_application_variables.h</in>
        </df>
        <df name="metis_application">
          <df name="custom_processes">
            <in>metis_contact_partitioning_process.h</in>
            <in>metis_divide_heterogeneous_input_process.h</in>
            <in>metis_divide_input_to_partitions_process.h</in>
            <in>metis_graph_partitioning_process.h</in>
            <in>metis_parallel_partitioning_process.h</in>
            <in>metis_partitioning_process.h</in>
            <in>metis_partitioning_process_quadratic.h</in>
            <in>metis_scalar_reorder_process.h</in>
            <in>metis_separate_partition_with_interface_process.h</in>
            <in>morton_divide_input_to_partitions_process.h</in>
            <in>morton_partitioning_process.h</in>
            <in>set_mpi_communicator_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_processes_to_python.cpp</in>
            <in>add_processes_to_python.h</in>
            <in>kratos_metis_python_application.cpp</in>
          </df>
          <df name="test_exemples">
            <df name="square_domain">
            </df>
          </df>
          <in>metis_application.cpp</in>
          <in>metis_application.h</in>
        </df>
        <df name="MixedElementApplication">
          <df name="custom_elements">
            <in>irriducible_element.cpp</in>
            <in>irriducible_element.h</in>
            <in>sigma_u_element.cpp</in>
            <in>sigma_u_element.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>mixedelement_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="convergencecriterias">
              <in>mixed_element_criteria.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>check_constitutive_law.h</in>
            <in>erase_dead_elements.h</in>
            <in>plot_damage.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>mixedelement_application.cpp</in>
          <in>mixedelement_application.h</in>
        </df>
        <df name="mkl_solvers_application">
          <df name="custom_python">
            <in>add_linear_solvers_to_python.cpp</in>
            <in>add_linear_solvers_to_python.h</in>
            <in>mkl_solvers_python_application.cpp</in>
          </df>
          <df name="external_includes">
            <df name="boost">
              <df name="numeric">
                <df name="bindings">
                  <df name="amos">
                    <in>amos.h</in>
                    <in>amos.hpp</in>
                    <in>amos_names.h</in>
                    <in>amos_overloads.hpp</in>
                  </df>
                  <df name="atlas">
                    <in>cblas.hpp</in>
                    <in>cblas1.hpp</in>
                    <in>cblas1_overloads.hpp</in>
                    <in>cblas2.hpp</in>
                    <in>cblas2_overloads.hpp</in>
                    <in>cblas3.hpp</in>
                    <in>cblas3_overloads.hpp</in>
                    <in>cblas_enum.hpp</in>
                    <in>cblas_inc.hpp</in>
                    <in>clapack.hpp</in>
                    <in>clapack_inc.hpp</in>
                    <in>clapack_overloads.hpp</in>
                  </df>
                  <df name="blas">
                    <in>blas.h</in>
                    <in>blas.hpp</in>
                    <in>blas1.hpp</in>
                    <in>blas1_overloads.hpp</in>
                    <in>blas2.hpp</in>
                    <in>blas2_overloads.hpp</in>
                    <in>blas3.hpp</in>
                    <in>blas3_overloads.hpp</in>
                    <in>blas_names.h</in>
                  </df>
                  <df name="lapack">
                    <in>gees.hpp</in>
                    <in>geev.hpp</in>
                    <in>geqrf.hpp</in>
                    <in>gesdd.hpp</in>
                    <in>gesv.hpp</in>
                    <in>gesvd.hpp</in>
                    <in>hbev.hpp</in>
                    <in>heev.hpp</in>
                    <in>hesv.hpp</in>
                    <in>hpsv.hpp</in>
                    <in>ilaenv.hpp</in>
                    <in>lapack.h</in>
                    <in>lapack.hpp</in>
                    <in>lapack_names.h</in>
                    <in>ormqr.hpp</in>
                    <in>posv.hpp</in>
                    <in>ppsv.hpp</in>
                    <in>spsv.hpp</in>
                    <in>syev.hpp</in>
                    <in>sysv.hpp</in>
                    <in>trevc.hpp</in>
                    <in>trexc.hpp</in>
                    <in>workspace.hpp</in>
                  </df>
                  <df name="superlu">
                    <in>superlu.hpp</in>
                    <in>superlu_decl.hpp</in>
                    <in>superlu_inc.hpp</in>
                    <in>superlu_overloads.hpp</in>
                  </df>
                  <df name="traits">
                    <df name="detail">
                      <in>array.hpp</in>
                      <in>array_impl.hpp</in>
                      <in>generate_const.hpp</in>
                      <in>symm_herm_traits.hpp</in>
                      <in>ublas_ordering.hpp</in>
                      <in>ublas_uplo.hpp</in>
                      <in>utils.hpp</in>
                    </df>
                    <in>algorithm.hpp</in>
                    <in>boost_array.hpp</in>
                    <in>c_array.hpp</in>
                    <in>config.hpp</in>
                    <in>fortran.h</in>
                    <in>matrix_raw.hpp</in>
                    <in>matrix_traits.hpp</in>
                    <in>sparse_traits.hpp</in>
                    <in>std_valarray.hpp</in>
                    <in>std_vector.hpp</in>
                    <in>symm_herm_raw.hpp</in>
                    <in>tnt.hpp</in>
                    <in>traits.hpp</in>
                    <in>transpose.hpp</in>
                    <in>type.h</in>
                    <in>type.hpp</in>
                    <in>type_traits.hpp</in>
                    <in>ublas_banded.hpp</in>
                    <in>ublas_hermitian.hpp</in>
                    <in>ublas_matrix.hpp</in>
                    <in>ublas_sparse.hpp</in>
                    <in>ublas_symmetric.hpp</in>
                    <in>ublas_vector.hpp</in>
                    <in>ublas_vector2.hpp</in>
                    <in>vector_raw.hpp</in>
                    <in>vector_traits.hpp</in>
                  </df>
                  <df name="umfpack">
                    <in>umfpack.hpp</in>
                    <in>umfpack_inc.hpp</in>
                    <in>umfpack_overloads.hpp</in>
                  </df>
                </df>
                <df name="ublas">
                  <df name="detail">
                    <in>concepts.hpp</in>
                    <in>config.hpp</in>
                    <in>definitions.hpp</in>
                    <in>documentation.hpp</in>
                    <in>duff.hpp</in>
                    <in>iterator.hpp</in>
                    <in>matrix_assign.hpp</in>
                    <in>raw.hpp</in>
                    <in>returntype_deduction.hpp</in>
                    <in>temporary.hpp</in>
                    <in>vector_assign.hpp</in>
                  </df>
                  <in>banded.hpp</in>
                  <in>blas.hpp</in>
                  <in>exception.hpp</in>
                  <in>expression_types.hpp</in>
                  <in>functional.hpp</in>
                  <in>fwd.hpp</in>
                  <in>hermitian.hpp</in>
                  <in>io.hpp</in>
                  <in>lu.hpp</in>
                  <in>matrix.hpp</in>
                  <in>matrix_expression.hpp</in>
                  <in>matrix_proxy.hpp</in>
                  <in>matrix_sparse.hpp</in>
                  <in>operation.hpp</in>
                  <in>operation_blocked.hpp</in>
                  <in>operation_sparse.hpp</in>
                  <in>storage.hpp</in>
                  <in>storage_sparse.hpp</in>
                  <in>symmetric.hpp</in>
                  <in>traits.hpp</in>
                  <in>triangular.hpp</in>
                  <in>vector.hpp</in>
                  <in>vector_expression.hpp</in>
                  <in>vector_of_vector.hpp</in>
                  <in>vector_proxy.hpp</in>
                  <in>vector_sparse.hpp</in>
                </df>
              </df>
            </df>
            <in>mkl_gmres_solver.h</in>
            <in>mkl_pardiso_solver.h</in>
          </df>
          <in>mkl_solvers_application.cpp</in>
          <in>mkl_solvers_application.h</in>
        </df>
        <df name="mpi_search_application">
          <df name="custom_conditions">
          </df>
          <df name="custom_elements">
          </df>
          <df name="custom_problemtype">
          </df>
          <df name="custom_processes">
          </df>
          <df name="custom_python">
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>kratos_mpi_search_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>bins_dynamic_mpi.h</in>
            <in>bins_dynamic_object_configuration.h</in>
            <in>bins_dynamic_objects_mpi.h</in>
            <in>bins_dynamic_particle_configuration.h</in>
            <in>geometric_operations.h</in>
            <in>lloyd_parallel_partitioner.h</in>
            <in>mpi_dem_search.h</in>
            <in>mpi_discrete_particle_configure.h</in>
            <in>mpi_utilities.h</in>
            <in>octree_binary.h</in>
            <in>octree_binary_cell.h</in>
            <in>octree_driver.cc</in>
            <in>octree_driver.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="cavity2D.gid">
            </df>
          </df>
          <in>main.cc</in>
          <in>mpi_search_application.cpp</in>
          <in>mpi_search_application.h</in>
        </df>
        <df name="multibody_application">
          <df name="custom_processes">
            <in>body_recognition_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>kratos_multibody_python_application.cpp</in>
          </df>
          <in>kratos_multibody_application.cpp</in>
          <in>kratos_multibody_application.h</in>
        </df>
        <df name="MultiScaleApplication">
          <df name="constitutive_laws">
            <in>constitutive_law_adapter.h</in>
            <in>conv_diff_anisotropic_2d_law.cpp</in>
            <in>conv_diff_anisotropic_2d_law.h</in>
            <in>conv_diff_anisotropic_3d_law.cpp</in>
            <in>conv_diff_anisotropic_3d_law.h</in>
            <in>conv_diff_constitutive_law_3d.cpp</in>
            <in>conv_diff_constitutive_law_3d.h</in>
            <in>conv_diff_interface_2d_law.cpp</in>
            <in>conv_diff_interface_2d_law.h</in>
            <in>conv_diff_interface_3d_law.cpp</in>
            <in>conv_diff_interface_3d_law.h</in>
            <in>conv_diff_plane_stress_2d_law.cpp</in>
            <in>conv_diff_plane_stress_2d_law.h</in>
            <in>damage_iso_plane_stress_2d_law.cpp</in>
            <in>damage_iso_plane_stress_2d_law.h</in>
            <in>damage_tc_3d_law.cpp</in>
            <in>damage_tc_3d_law.h</in>
            <in>damage_tc_plane_stress_2d_law.cpp</in>
            <in>damage_tc_plane_stress_2d_law.h</in>
            <in>dummy_constitutive_law.cpp</in>
            <in>dummy_constitutive_law.h</in>
            <in>j2_constitutive_law_3d.cpp</in>
            <in>j2_constitutive_law_3d.h</in>
            <in>planestrain_from_3d_constitutive_law_adapter.h</in>
            <in>planestress_from_3d_constitutive_law_adapter.h</in>
            <in>plastic_damage_interface_2d_law.cpp</in>
            <in>plastic_damage_interface_2d_law.h</in>
            <in>rve_constitutive_law.h</in>
            <in>scalar_damage_interface_2d_law.cpp</in>
            <in>scalar_damage_interface_2d_law.h</in>
            <in>scalar_damage_interface_3d_law.cpp</in>
            <in>scalar_damage_interface_3d_law.h</in>
            <in>shell_from_3d_constitutive_law_adapter.h</in>
          </df>
          <df name="custom_conditions">
            <in>periodic_condition_lm_2D2N.cpp</in>
            <in>periodic_condition_lm_2D2N.h</in>
            <in>rve_weak_periodic_condition_2D2N.cpp</in>
            <in>rve_weak_periodic_condition_2D2N.h</in>
          </df>
          <df name="custom_elements">
            <in>agq4_element.cpp</in>
            <in>agq4_element.hpp</in>
            <in>convdiff_element.cpp</in>
            <in>convdiff_element.hpp</in>
            <in>convdiff_interface_element.cpp</in>
            <in>convdiff_interface_element.hpp</in>
            <in>eas_quad_element_v2.cpp</in>
            <in>eas_quad_element_v2.hpp</in>
            <in>ebst_element_2d3n.cpp</in>
            <in>ebst_element_2d3n.h</in>
            <in>opt_triangle_element.cpp</in>
            <in>opt_triangle_element.hpp</in>
            <in>q4ristab_element.cpp</in>
            <in>q4ristab_element.hpp</in>
            <in>small_displacement_interface_element.cpp</in>
            <in>small_displacement_interface_element.hpp</in>
          </df>
          <df name="custom_linear_solvers">
            <in>eigenlib_lu_linear_solver.h</in>
            <in>mumps_linear_solver.h</in>
            <in>skyline_lu_linear_solver_v2.h</in>
          </df>
          <df name="custom_python">
            <in>add_conditions_to_python.cpp</in>
            <in>add_conditions_to_python.h</in>
            <in>add_constitutive_laws_to_python.cpp</in>
            <in>add_constitutive_laws_to_python.h</in>
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_linear_solvers_to_python.cpp</in>
            <in>add_linear_solvers_to_python.h</in>
            <in>add_strategies_to_python.cpp</in>
            <in>add_strategies_to_python.h</in>
            <in>add_utilities_to_python.cpp</in>
            <in>add_utilities_to_python.h</in>
            <in>multiscale_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>static_general_builder_and_solver.h</in>
            </df>
            <df name="convergencecriterias">
              <in>displacement_norm_criteria.h</in>
              <in>energy_norm_criteria.h</in>
              <in>residual_norm_criteria.h</in>
            </df>
            <df name="schemes">
              <in>rve_static_scheme.h</in>
              <in>static_general_scheme.h</in>
            </df>
            <df name="strategies">
              <in>arc_length_diss_nrg_strategy.h</in>
              <in>arc_length_riks_strategy.h</in>
              <in>arc_length_strategy.h</in>
              <in>displacement_control_strategy.h</in>
              <in>static_general_strategy.h</in>
              <in>static_general_strategy_krylov_newton.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>imperfection_utilities.h</in>
            <in>krylov_subspace_accelerator_eigenlib_utilities.h</in>
            <in>krylov_subspace_accelerator_lapack_utilities.h</in>
            <in>load_function.h</in>
            <in>math_helpers.h</in>
            <in>properties_extensions.h</in>
            <in>rve_adapter_settings.h</in>
            <in>rve_adapter_v2.h</in>
            <in>rve_constraint_handler.h</in>
            <in>rve_constraint_handler_pbf_sd.h</in>
            <in>rve_constraint_handler_pbf_sd_thermal.h</in>
            <in>rve_constraint_handler_wpbf_sd.h</in>
            <in>rve_constraint_handler_wpbf_sd_thermal.h</in>
            <in>rve_constraint_handler_zbf_sd.h</in>
            <in>rve_constraint_handler_zbf_sd_thermal.h</in>
            <in>rve_geometry_descriptor.cpp</in>
            <in>rve_geometry_descriptor.h</in>
            <in>rve_homogenizer.h</in>
            <in>rve_homogenizer_thermal.h</in>
            <in>rve_linear_system_of_equations.h</in>
            <in>rve_macroscale_data.h</in>
            <in>rve_macroscale_temperature_data.h</in>
            <in>rve_predictor_calculator.cpp</in>
            <in>rve_predictor_calculator.h</in>
            <in>rve_utilities.h</in>
            <in>rve_utilities_element_info.h</in>
            <in>rve_utilities_model_part.h</in>
            <in>time_line.h</in>
          </df>
          <df name="external_includes">
            <df name="superlu_mt">
              <df name="include">
                <in>colamd.h</in>
                <in>pthread.h</in>
                <in>pxgstrf_synch.h</in>
                <in>sched.h</in>
                <in>slu_dcomplex.h</in>
                <in>slu_mt_Cnames.h</in>
                <in>slu_mt_cdefs.h</in>
                <in>slu_mt_ddefs.h</in>
                <in>slu_mt_machines.h</in>
                <in>slu_mt_sdefs.h</in>
                <in>slu_mt_util.h</in>
                <in>slu_mt_zdefs.h</in>
                <in>slu_scomplex.h</in>
                <in>supermatrix.h</in>
              </df>
            </df>
          </df>
          <df name="python_scripts">
          </df>
          <in>multiscale_application.cpp</in>
          <in>multiscale_application.h</in>
        </df>
        <df name="nurbs_application">
          <df name="custom_elements">
            <in>nurbs_poisson_2d.cpp</in>
            <in>nurbs_poisson_2d.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>nurbs_testcase_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>NurbsModeler.cpp</in>
            <in>NurbsModeler.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="half_sphere">
            </df>
            <df name="temperature_example">
            </df>
          </df>
          <in>nurbs_testcase_application.cpp</in>
          <in>nurbs_testcase_application.h</in>
        </df>
        <df name="OpenCLapplication">
          <df name="custom_elements">
          </df>
          <df name="custom_external_libraries">
            <df name="amgcl">
              <in>aggr_connect.hpp</in>
              <in>aggr_plain.hpp</in>
              <in>amgcl.hpp</in>
              <in>bicgstab.hpp</in>
              <in>cg.hpp</in>
              <in>chebyshev.hpp</in>
              <in>common.hpp</in>
              <in>gmres.hpp</in>
              <in>interp_aggr.hpp</in>
              <in>interp_classic.hpp</in>
              <in>interp_sa_emin.hpp</in>
              <in>interp_smoothed_aggr.hpp</in>
              <in>level_cpu.hpp</in>
              <in>level_cuda.hpp</in>
              <in>level_params.hpp</in>
              <in>level_vexcl.hpp</in>
              <in>level_viennacl.hpp</in>
              <in>operations_cuda.hpp</in>
              <in>operations_eigen.hpp</in>
              <in>operations_ublas.hpp</in>
              <in>operations_vexcl.hpp</in>
              <in>operations_viennacl.hpp</in>
              <in>profiler.hpp</in>
              <in>spai.hpp</in>
              <in>spmat.hpp</in>
              <in>tictoc.hpp</in>
            </df>
            <df name="pugixml">
              <df name="src">
                <in>pugiconfig.hpp</in>
                <in>pugixml.cpp</in>
                <in>pugixml.hpp</in>
              </df>
            </df>
            <df name="viennacl">
              <df name="backend">
                <in>cpu_ram.hpp</in>
                <in>cuda.hpp</in>
                <in>mem_handle.hpp</in>
                <in>memory.hpp</in>
                <in>opencl.hpp</in>
                <in>util.hpp</in>
              </df>
              <df name="generator">
                <df name="make_code">
                  <in>expression.hpp</in>
                  <in>inner_product.hpp</in>
                  <in>make_code.hpp</in>
                  <in>matrix-vector_product.hpp</in>
                  <in>regular_compound_node.hpp</in>
                </df>
                <df name="meta_tools">
                  <in>typelist.hpp</in>
                  <in>utils.hpp</in>
                </df>
                <df name="symbolic_types">
                  <in>convenience_typedef.hpp</in>
                  <in>symbolic_matrix.hpp</in>
                  <in>symbolic_scalars.hpp</in>
                  <in>symbolic_vector.hpp</in>
                </df>
                <df name="traits">
                  <in>general_purpose_traits.hpp</in>
                  <in>result_of.hpp</in>
                </df>
                <in>autotune.hpp</in>
                <in>compound_node.hpp</in>
                <in>custom_operation.hpp</in>
                <in>elementwise_modifier.hpp</in>
                <in>forwards.h</in>
                <in>generate.hpp</in>
                <in>get_kernels_infos.hpp</in>
                <in>helpers.hpp</in>
                <in>map_functor.hpp</in>
                <in>mapped_objects.hpp</in>
                <in>matrix_product.hpp</in>
                <in>operation_types.hpp</in>
                <in>profile_base.hpp</in>
                <in>profiles.hpp</in>
                <in>saxpy.hpp</in>
                <in>scalar_reduction.hpp</in>
                <in>set_arguments_functor.hpp</in>
                <in>statement_representation_functor.hpp</in>
                <in>tokens_management.hpp</in>
                <in>tree_operations.hpp</in>
                <in>utils.hpp</in>
                <in>vector_reduction.hpp</in>
              </df>
              <df name="io">
                <in>kernel_parameters.hpp</in>
                <in>matrix_market.hpp</in>
              </df>
              <df name="linalg">
                <df name="cuda">
                  <in>common.hpp</in>
                  <in>direct_solve.hpp</in>
                  <in>matrix_operations.hpp</in>
                  <in>matrix_operations_col.hpp</in>
                  <in>matrix_operations_prod.hpp</in>
                  <in>matrix_operations_row.hpp</in>
                  <in>misc_operations.hpp</in>
                  <in>scalar_operations.hpp</in>
                  <in>sparse_matrix_operations.hpp</in>
                  <in>sparse_matrix_operations_solve.hpp</in>
                  <in>vector_operations.hpp</in>
                </df>
                <df name="detail">
                  <df name="amg">
                    <in>amg_base.hpp</in>
                    <in>amg_coarse.hpp</in>
                    <in>amg_debug.hpp</in>
                    <in>amg_interpol.hpp</in>
                  </df>
                  <df name="ilu">
                    <in>block_ilu.hpp</in>
                    <in>common.hpp</in>
                    <in>host_block_ilu.hpp</in>
                    <in>ilu0.hpp</in>
                    <in>ilut.hpp</in>
                    <in>opencl_block_ilu.hpp</in>
                  </df>
                  <df name="spai">
                    <in>block_matrix.hpp</in>
                    <in>block_vector.hpp</in>
                    <in>fspai.hpp</in>
                    <in>qr.hpp</in>
                    <in>small_matrix.hpp</in>
                    <in>spai-dynamic.hpp</in>
                    <in>spai-static.hpp</in>
                    <in>spai.hpp</in>
                    <in>spai_tag.hpp</in>
                    <in>sparse_vector.hpp</in>
                  </df>
                  <in>op_applier.hpp</in>
                  <in>op_executor.hpp</in>
                </df>
                <df name="host_based">
                  <in>common.hpp</in>
                  <in>direct_solve.hpp</in>
                  <in>matrix_operations.hpp</in>
                  <in>misc_operations.hpp</in>
                  <in>scalar_operations.hpp</in>
                  <in>sparse_matrix_operations.hpp</in>
                  <in>sse_blas.hpp</in>
                  <in>sse_kernels.hpp</in>
                  <in>vector_operations.hpp</in>
                </df>
                <df name="kernels">
                  <in>compressed_matrix_kernels.h</in>
                  <in>compressed_matrix_source.h</in>
                  <in>coordinate_matrix_kernels.h</in>
                  <in>coordinate_matrix_source.h</in>
                  <in>ell_matrix_kernels.h</in>
                  <in>ell_matrix_source.h</in>
                  <in>fft_kernels.h</in>
                  <in>fft_source.h</in>
                  <in>hyb_matrix_kernels.h</in>
                  <in>hyb_matrix_source.h</in>
                  <in>ilu_kernels.h</in>
                  <in>ilu_source.h</in>
                  <in>matrix_col_kernels.h</in>
                  <in>matrix_col_source.h</in>
                  <in>matrix_prod_col_col_col_kernels.h</in>
                  <in>matrix_prod_col_col_col_source.h</in>
                  <in>matrix_prod_col_col_row_kernels.h</in>
                  <in>matrix_prod_col_col_row_source.h</in>
                  <in>matrix_prod_col_row_col_kernels.h</in>
                  <in>matrix_prod_col_row_col_source.h</in>
                  <in>matrix_prod_col_row_row_kernels.h</in>
                  <in>matrix_prod_col_row_row_source.h</in>
                  <in>matrix_prod_row_col_col_kernels.h</in>
                  <in>matrix_prod_row_col_col_source.h</in>
                  <in>matrix_prod_row_col_row_kernels.h</in>
                  <in>matrix_prod_row_col_row_source.h</in>
                  <in>matrix_prod_row_row_col_kernels.h</in>
                  <in>matrix_prod_row_row_col_source.h</in>
                  <in>matrix_prod_row_row_row_kernels.h</in>
                  <in>matrix_prod_row_row_row_source.h</in>
                  <in>matrix_row_kernels.h</in>
                  <in>matrix_row_source.h</in>
                  <in>matrix_solve_col_col_kernels.h</in>
                  <in>matrix_solve_col_col_source.h</in>
                  <in>matrix_solve_col_row_kernels.h</in>
                  <in>matrix_solve_col_row_source.h</in>
                  <in>matrix_solve_row_col_kernels.h</in>
                  <in>matrix_solve_row_col_source.h</in>
                  <in>matrix_solve_row_row_kernels.h</in>
                  <in>matrix_solve_row_row_source.h</in>
                  <in>nmf_kernels.h</in>
                  <in>nmf_source.h</in>
                  <in>scalar_kernels.h</in>
                  <in>scalar_source.h</in>
                  <in>spai_kernels.h</in>
                  <in>spai_source.h</in>
                  <in>svd_kernels.h</in>
                  <in>svd_source.h</in>
                  <in>vector_kernels.h</in>
                  <in>vector_source.h</in>
                </df>
                <df name="opencl">
                  <df name="kernels">
                    <in>compressed_compressed_matrix.hpp</in>
                    <in>compressed_matrix.hpp</in>
                    <in>coordinate_matrix.hpp</in>
                    <in>ell_matrix.hpp</in>
                    <in>fft.hpp</in>
                    <in>hyb_matrix.hpp</in>
                    <in>ilu.hpp</in>
                    <in>matrix.hpp</in>
                    <in>matrix_element.hpp</in>
                    <in>matrix_prod.hpp</in>
                    <in>matrix_solve.hpp</in>
                    <in>nmf.hpp</in>
                    <in>scalar.hpp</in>
                    <in>spai.hpp</in>
                    <in>svd.hpp</in>
                    <in>vector.hpp</in>
                    <in>vector_element.hpp</in>
                  </df>
                  <in>common.hpp</in>
                  <in>direct_solve.hpp</in>
                  <in>matrix_operations.hpp</in>
                  <in>misc_operations.hpp</in>
                  <in>scalar_operations.hpp</in>
                  <in>sparse_matrix_operations.hpp</in>
                  <in>vandermonde_matrix_operations.hpp</in>
                  <in>vector_operations.hpp</in>
                </df>
                <in>amg.hpp</in>
                <in>bicgstab.hpp</in>
                <in>bisect.hpp</in>
                <in>cg.hpp</in>
                <in>circulant_matrix_operations.hpp</in>
                <in>compressed_matrix_operations.hpp</in>
                <in>coordinate_matrix_operations.hpp</in>
                <in>direct_solve.hpp</in>
                <in>eig.hpp</in>
                <in>gmres.hpp</in>
                <in>hankel_matrix_operations.hpp</in>
                <in>ichol.hpp</in>
                <in>ilu.hpp</in>
                <in>inner_prod.hpp</in>
                <in>jacobi_precond.hpp</in>
                <in>lanczos.hpp</in>
                <in>lu.hpp</in>
                <in>matrix_operations.hpp</in>
                <in>misc_operations.hpp</in>
                <in>mixed_precision_cg.hpp</in>
                <in>nmf.hpp</in>
                <in>norm_1.hpp</in>
                <in>norm_2.hpp</in>
                <in>norm_frobenius.hpp</in>
                <in>norm_inf.hpp</in>
                <in>power_iter.hpp</in>
                <in>prod.hpp</in>
                <in>qr-method-common.hpp</in>
                <in>qr-method.hpp</in>
                <in>qr.hpp</in>
                <in>row_scaling.hpp</in>
                <in>scalar_operations.hpp</in>
                <in>spai.hpp</in>
                <in>sparse_matrix_operations.hpp</in>
                <in>svd.hpp</in>
                <in>toeplitz_matrix_operations.hpp</in>
                <in>tred2.hpp</in>
                <in>vandermonde_matrix_operations.hpp</in>
                <in>vector_operations.hpp</in>
              </df>
              <df name="meta">
                <in>enable_if.hpp</in>
                <in>predicate.hpp</in>
                <in>result_of.hpp</in>
                <in>tag_of.hpp</in>
              </df>
              <df name="misc">
                <in>bandwidth_reduction.hpp</in>
                <in>cuthill_mckee.hpp</in>
                <in>gibbs_poole_stockmeyer.hpp</in>
              </df>
              <df name="ocl">
                <in>backend.hpp</in>
                <in>command_queue.hpp</in>
                <in>context.hpp</in>
                <in>device.hpp</in>
                <in>device_utils.hpp</in>
                <in>enqueue.hpp</in>
                <in>error.hpp</in>
                <in>forwards.h</in>
                <in>handle.hpp</in>
                <in>infos.hpp</in>
                <in>kernel.hpp</in>
                <in>local_mem.hpp</in>
                <in>platform.hpp</in>
                <in>platform__.hpp</in>
                <in>program.hpp</in>
                <in>utils.hpp</in>
              </df>
              <df name="rand">
                <in>gaussian.hpp</in>
                <in>uniform.hpp</in>
                <in>utils.hpp</in>
              </df>
              <df name="scheduler">
                <in>execute.hpp</in>
                <in>execute_axbx.hpp</in>
                <in>execute_elementwise.hpp</in>
                <in>execute_generic_dispatcher.hpp</in>
                <in>execute_matrix_dispatcher.hpp</in>
                <in>execute_matrix_prod.hpp</in>
                <in>execute_scalar_assign.hpp</in>
                <in>execute_scalar_dispatcher.hpp</in>
                <in>execute_util.hpp</in>
                <in>execute_vector_dispatcher.hpp</in>
                <in>forwards.h</in>
                <in>io.hpp</in>
              </df>
              <df name="tools">
                <in>adapter.hpp</in>
                <in>entry_proxy.hpp</in>
                <in>matrix_kernel_class_deducer.hpp</in>
                <in>matrix_prod_kernel_class_deducer.hpp</in>
                <in>matrix_size_deducer.hpp</in>
                <in>matrix_solve_kernel_class_deducer.hpp</in>
                <in>shared_ptr.hpp</in>
                <in>timer.hpp</in>
                <in>tools.hpp</in>
              </df>
              <df name="traits">
                <in>clear.hpp</in>
                <in>context.hpp</in>
                <in>fill.hpp</in>
                <in>handle.hpp</in>
                <in>size.hpp</in>
                <in>start.hpp</in>
                <in>stride.hpp</in>
              </df>
              <in>circulant_matrix.hpp</in>
              <in>compressed_compressed_matrix.hpp</in>
              <in>compressed_matrix.hpp</in>
              <in>context.hpp</in>
              <in>coordinate_matrix.hpp</in>
              <in>ell_matrix.hpp</in>
              <in>fft.hpp</in>
              <in>forwards.h</in>
              <in>hankel_matrix.hpp</in>
              <in>hyb_matrix.hpp</in>
              <in>matrix.hpp</in>
              <in>matrix_proxy.hpp</in>
              <in>range.hpp</in>
              <in>scalar.hpp</in>
              <in>slice.hpp</in>
              <in>toeplitz_matrix.hpp</in>
              <in>vandermonde_matrix.hpp</in>
              <in>vector.hpp</in>
              <in>vector_proxy.hpp</in>
            </df>
          </df>
          <df name="custom_linear_solvers">
            <in>gpu_cg_solver.h</in>
            <in>viennaCL_solver.h</in>
          </df>
          <df name="custom_python">
            <in>add_linear_solvers_to_python.cpp</in>
            <in>add_linear_solvers_to_python.h</in>
            <in>add_spatial_containers_to_python.cpp</in>
            <in>add_spatial_containers_to_python.h</in>
            <in>add_utilities_to_python.cpp</in>
            <in>add_utilities_to_python.h</in>
            <in>opencl_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <df name="opencl_inner_prod">
              <in>B_0.mm</in>
              <in>main.cpp</in>
              <in>mmio.c</in>
              <in>rhs65025.mm</in>
            </df>
            <df name="opencl_linear_solver">
              <in>A_0.mm</in>
              <in>B_0.mm</in>
              <in>main.cpp</in>
              <in>mat65k.mm</in>
              <in>mmio.c</in>
              <in>rhs65025.mm</in>
            </df>
            <df name="opencl_spmv">
              <in>A_0.mm</in>
              <in>B_0.mm</in>
              <in>main.cpp</in>
              <in>mat65k.mm</in>
              <in>mmio.c</in>
              <in>rhs65025.mm</in>
            </df>
            <df name="vcl_solver">
              <in>A_0.mm</in>
              <in>B_0.mm</in>
              <in>main.cpp</in>
              <in>mat65k.mm</in>
              <in>mmio.c</in>
              <in>rhs65025.mm</in>
            </df>
            <in>opencl_benchmark_device.h</in>
            <in>opencl_edge_data.h</in>
            <in>opencl_fluid_solver.h</in>
            <in>opencl_interface.h</in>
            <in>opencl_linear_solver.h</in>
            <in>opencl_pure_convection_edgebased.h</in>
            <in>renumber_by_neighbour_count_util.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="spatial_containers">
            <in>bins_object_static_OCL.h</in>
            <in>bins_static_OCL.h</in>
            <in>main_cpp_3d-2-Triangle.cpp</in>
            <in>main_cpp_3d-2-openCL.cpp</in>
            <in>spatial_containersOCL.h</in>
            <in>timer.h</in>
          </df>
          <df name="test_examples">
            <df name="cavity3d_edgebased.gid">
            </df>
            <df name="cube_edgebased_conv.gid">
            </df>
            <df name="opencl_benchmark_device">
            </df>
            <df name="square_edgebased.gid">
            </df>
          </df>
          <in>OpenCLapplication.cpp</in>
          <in>OpenCLapplication.h</in>
        </df>
        <df name="ParticleMechanicsApplication">
          <df name="constitutive_laws">
          </df>
          <df name="custom_elements">
            <in>updated_lagrangian.cpp</in>
            <in>updated_lagrangian.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>particle_mechanics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="schemes">
              <in>MPM_residual_based_bossak_scheme.hpp</in>
            </df>
            <df name="strategies">
              <in>MPM_residual_based_newton_raphson_strategy.hpp</in>
              <in>MPM_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
          </df>
          <df name="python_scripts">
          </df>
          <in>particle_mechanics_application.cpp</in>
          <in>particle_mechanics_application.h</in>
        </df>
        <df name="pfem_2_application">
          <df name="custom_conditions">
            <in>autoslip_inlet.cpp</in>
            <in>autoslip_inlet.h</in>
            <in>autoslip_inlet_3d.cpp</in>
            <in>autoslip_inlet_3d.h</in>
            <in>fixed_pressure_2d.cpp</in>
            <in>fixed_pressure_2d.h</in>
            <in>fixed_pressure_3d.cpp</in>
            <in>fixed_pressure_3d.h</in>
            <in>fixed_velocity_2d.cpp</in>
            <in>fixed_velocity_2d.h</in>
            <in>fixed_velocity_3d.cpp</in>
            <in>fixed_velocity_3d.h</in>
            <in>water_fixed_velocity_2d.cpp</in>
            <in>water_fixed_velocity_2d.h</in>
          </df>
          <df name="custom_elements">
            <in>2fluid_2d.cpp</in>
            <in>2fluid_2d.h</in>
            <in>2fluid_3d.cpp</in>
            <in>2fluid_3d.h</in>
            <in>fluid_phase_2d.cpp</in>
            <in>fluid_phase_2d.h</in>
            <in>fractional_step_pfem_2_2d.cpp</in>
            <in>fractional_step_pfem_2_2d.h</in>
            <in>fractional_step_pfem_2_3d.cpp</in>
            <in>fractional_step_pfem_2_3d.h</in>
            <in>fsi_2d.cpp</in>
            <in>fsi_2d.h</in>
            <in>fsi_3d.cpp</in>
            <in>fsi_3d.h</in>
            <in>monolithic_2fluid_2d.cpp</in>
            <in>monolithic_2fluid_2d.h</in>
            <in>monolithic_2fluid_2d_partintegration.cpp</in>
            <in>monolithic_2fluid_2d_partintegration.h</in>
            <in>monolithic_2fluid_3d.cpp</in>
            <in>monolithic_2fluid_3d.h</in>
            <in>monolithic_2fluid_3d_partintegration.cpp</in>
            <in>monolithic_2fluid_3d_partintegration.h</in>
            <in>monolithic_3fluid_2d.cpp</in>
            <in>monolithic_3fluid_2d.h</in>
            <in>monolithic_3fluid_3d.cpp</in>
            <in>monolithic_3fluid_3d.h</in>
            <in>no_particles_solid_only_2d.cpp</in>
            <in>no_particles_solid_only_2d.h</in>
            <in>nonewtonian_2fluid_2d.cpp</in>
            <in>nonewtonian_2fluid_2d.h</in>
            <in>nonewtonian_2fluid_3d.cpp</in>
            <in>nonewtonian_2fluid_3d.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pfem_2_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>explicit_strategy.h</in>
            <in>pfem_2_monolithic_slip_scheme.h</in>
            <in>pfem_2_monolithic_slip_strategy.h</in>
          </df>
          <df name="custom_utilities">
            <in>add_fixed_velocity_condition.h</in>
            <in>calculate_water_fraction.h</in>
            <in>edge_data.h</in>
            <in>fluid_solver.h</in>
            <in>move_particle_utility.h</in>
            <in>move_particle_utility_diff.h</in>
            <in>move_particle_utility_diff_fluidonly.h</in>
            <in>move_particle_utility_pfem2.h</in>
            <in>pfem_particle.h</in>
            <in>pfem_particle_fire.h</in>
            <in>pfem_particle_fluid.h</in>
            <in>pfem_particle_fluidonly.h</in>
            <in>pfem_particle_sigma.h</in>
            <in>transfer_utility.h</in>
            <in>visualization.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="dam_break">
            </df>
            <df name="no_newtonian_2d">
            </df>
            <df name="nonewtonian_3d.gid">
            </df>
            <df name="rayleigh">
            </df>
          </df>
          <in>pfem_2_application.cpp</in>
          <in>pfem_2_application.h</in>
        </df>
        <df name="pfem_fluid_dynamic_application">
          <df name="custom_conditions">
          </df>
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pfem_fluid_dynamic_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>pfem_fluid_utilities.h</in>
            <in>pfem_utilities.h</in>
          </df>
          <df name="external_includes">
            <in>tetgen_pfem_fluid_refine_vms.h</in>
            <in>tetgen_pfem_refine_vms.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>pfem_fluid_dynamic_application.cpp</in>
          <in>pfem_fluid_dynamic_application.h</in>
          <in>pfem_fluid_dynamic_application_variables.cpp</in>
          <in>pfem_fluid_dynamic_application_variables.h</in>
        </df>
        <df name="PFEMapplication">
          <df name="custom_conditions">
            <in>free_surface_cond2d.cpp</in>
            <in>free_surface_cond2d.h</in>
            <in>pressure_cond.cpp</in>
            <in>pressure_cond.h</in>
            <in>pressure_cond3d.cpp</in>
            <in>pressure_cond3d.h</in>
          </df>
          <df name="custom_elements">
            <in>updated_lagrangian_fluid.cpp</in>
            <in>updated_lagrangian_fluid.h</in>
          </df>
          <df name="custom_external_libraries">
          </df>
          <df name="custom_problemtype">
            <df name="problemtype_generator">
              <df name="pfem_erosion_scripts">
              </df>
              <df name="pfem_nonewtonian_coupled_scripts">
              </df>
              <df name="pfem_nonewtonian_scripts">
              </df>
              <df name="pfem_scripts">
              </df>
            </df>
          </df>
          <df name="custom_processes">
            <in>act_on_walls_nodal_process.h</in>
            <in>assign_pressure_force_process.h</in>
            <in>coordinate_laplacian_smoother_process.h</in>
            <in>find_nodal_h_process.h</in>
            <in>find_nodal_h_respecting_distance_process.h</in>
            <in>lagrangian_inlet_process.h</in>
            <in>mark_bad_elements_process.h</in>
            <in>move_mesh_process.h</in>
            <in>pressure_contribution_process.h</in>
            <in>ulf_apply_bc_process.h</in>
            <in>ulf_time_step_dec_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_meshers_to_python.cpp</in>
            <in>add_meshers_to_python.h</in>
            <in>add_processes_to_python.cpp</in>
            <in>add_processes_to_python.h</in>
            <in>kratos_pfem_python_application.cpp</in>
          </df>
          <df name="custom_utilities">
            <in>binbased_DEM_ULF_coupled_mapping.h</in>
            <in>binbased_seepage_coupled_mapping.h</in>
            <in>drag_utilities.h</in>
            <in>erosion_utilities.h</in>
            <in>exact_dt_estimate_utilities.h</in>
            <in>lagrangian_euler_solver.h</in>
            <in>lagrangian_fluid_utilities.h</in>
            <in>lagrangian_utilities.h</in>
            <in>nist_utilities.h</in>
            <in>normal_to_wall_calculation_utils.h</in>
            <in>pfem_utilities.h</in>
            <in>twofluid_gid_io.h</in>
            <in>volume_correction_utils.h</in>
          </df>
          <df name="external_includes">
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="CouetteNonNewtonian2d.gid">
            </df>
            <df name="Coupled_slope2dNonNewt.gid">
            </df>
            <df name="dam2d.gid">
            </df>
            <df name="dam2dNonNewt_Y1500.gid">
            </df>
            <df name="dam3d.gid">
            </df>
            <df name="sloshing_experimental.gid">
            </df>
          </df>
          <in>PFEM_application.cpp</in>
          <in>PFEM_application.h</in>
        </df>
        <df name="PfemBaseApplication">
          <df name="custom_bounding">
            <in>spatial_bounding_box.hpp</in>
          </df>
          <df name="custom_conditions">
            <in>composite_condition.cpp</in>
            <in>composite_condition.hpp</in>
          </df>
          <df name="custom_external_libraries">
            <df name="embedded">
            </df>
            <df name="msuite">
              <df name="src">
                <df name="edt">
                  <in>alpha.cpp</in>
                  <in>custom.h</in>
                  <in>edt.cpp</in>
                  <in>esfera.cpp</in>
                  <in>esfera.h</in>
                  <in>hydir.cpp</in>
                  <in>s_squeeze.cpp</in>
                  <in>slivers.cpp</in>
                  <in>vadebug.h</in>
                  <in>vor_out.cpp</in>
                  <in>voronoi.cpp</in>
                  <in>voronoi.h</in>
                </df>
                <df name="malla">
                  <in>corte.cpp</in>
                  <in>delaunay.cpp</in>
                  <in>elemento.cpp</in>
                  <in>elemento.h</in>
                  <in>fforma.cpp</in>
                  <in>grabamalla.cpp</in>
                  <in>leemalla.cpp</in>
                  <in>malla.cpp</in>
                  <in>malla.h</in>
                  <in>mensajes.h</in>
                  <in>meshelm.cpp</in>
                  <in>no_remalla.cpp</in>
                  <in>nodo.h</in>
                  <in>orienta.cpp</in>
                  <in>refina.cpp</in>
                  <in>smooth.cpp</in>
                  <in>surface.cpp</in>
                  <in>vecinos_y_frontera.cpp</in>
                </df>
                <df name="util">
                  <in>array1.h</in>
                  <in>case.cpp</in>
                  <in>case.h</in>
                  <in>color.h</in>
                  <in>cone.cpp</in>
                  <in>cone.h</in>
                  <in>filename.cpp</in>
                  <in>filename.h</in>
                  <in>flags.h</in>
                  <in>octree.cpp</in>
                  <in>octree.h</in>
                  <in>pline.cpp</in>
                  <in>pline.h</in>
                  <in>punto.cpp</in>
                  <in>punto.h</in>
                  <in>tiempo.cpp</in>
                  <in>tiempo.h</in>
                  <in>utiles.h</in>
                </df>
              </df>
            </df>
            <df name="tetgen">
              <df name="tetgen1.4.0">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
              <df name="tetgen1.4.2">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
              <df name="tetgen1.4.3">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
              <df name="tetgen1.5.0">
                <in>predicates.cxx</in>
                <in>tetgen.cxx</in>
                <in>tetgen.h</in>
              </df>
            </df>
            <df name="tetMeshOpt">
              <in>Math3D.cpp</in>
              <in>Math3D.h</in>
              <in>MeshOptimizer.cpp</in>
              <in>u_MeshLoaders.cpp</in>
              <in>u_MeshLoaders.h</in>
              <in>u_MeshSmooth.cpp</in>
              <in>u_MeshSmooth.h</in>
              <in>u_ParallelFunctions.cpp</in>
              <in>u_ParallelFunctions.h</in>
              <in>u_ProcessTime.cpp</in>
              <in>u_ProcessTime.h</in>
              <in>u_Render.h</in>
              <in>u_ShowMetrics.cpp</in>
              <in>u_ShowMetrics.h</in>
              <in>u_TetGenInterface.cpp</in>
              <in>u_TetGenInterface.h</in>
              <in>u_TetraFunctions.cpp</in>
              <in>u_TetraFunctions.h</in>
              <in>u_Types.cpp</in>
              <in>u_Types.h</in>
              <in>u_colorScale.cpp</in>
              <in>u_colorScale.h</in>
              <in>u_delphiClasses.cpp</in>
              <in>u_delphiClasses.h</in>
              <in>u_elementCluster.cpp</in>
              <in>u_elementCluster.h</in>
              <in>u_qualityMetrics.cpp</in>
              <in>u_qualityMetrics.h</in>
              <in>u_tools.cpp</in>
              <in>u_tools.h</in>
            </df>
            <df name="triangle">
              <in>showme.c</in>
              <in>triangle.c</in>
              <in>triangle.h</in>
              <in>tricall.c</in>
            </df>
          </df>
          <df name="custom_modelers">
            <in>laplacian_smoothing.hpp</in>
            <in>mesh_modeler.cpp</in>
            <in>mesh_modeler.hpp</in>
            <in>tetrahedral_mesh_3D_modeler.cpp</in>
            <in>tetrahedral_mesh_3D_modeler.hpp</in>
            <in>triangular_mesh_2D_modeler.cpp</in>
            <in>triangular_mesh_2D_modeler.hpp</in>
          </df>
          <df name="custom_processes">
            <in>build_mesh_boundary_process.hpp</in>
            <in>elemental_neighbours_search_process.hpp</in>
            <in>model_start_end_meshing_process.hpp</in>
            <in>model_volume_calculation_process.hpp</in>
            <in>nodal_neighbours_search_process.hpp</in>
            <in>reconstruct_mesh_boundary_process.hpp</in>
            <in>refine_mesh_boundary_process.hpp</in>
            <in>refine_mesh_elements_on_threshold_process.hpp</in>
            <in>remove_mesh_nodes_process.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_custom_bounding_to_python.cpp</in>
            <in>add_custom_bounding_to_python.h</in>
            <in>add_custom_conditions_to_python.cpp</in>
            <in>add_custom_conditions_to_python.h</in>
            <in>add_custom_modelers_to_python.cpp</in>
            <in>add_custom_modelers_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pfem_base_python_application.cpp</in>
          </df>
          <df name="custom_utilities">
            <in>boundary_normals_calculation_utilities.hpp</in>
            <in>change_tip_elements_utilities.hpp</in>
            <in>mesh_data_transfer_utilities.cpp</in>
            <in>mesh_data_transfer_utilities.hpp</in>
            <in>mesh_error_calculation_utilities.hpp</in>
            <in>modeler_utilities.cpp</in>
            <in>modeler_utilities.hpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>pfem_base_application.cpp</in>
          <in>pfem_base_application.h</in>
          <in>pfem_base_application_variables.cpp</in>
          <in>pfem_base_application_variables.h</in>
        </df>
        <df name="PfemFluidDynamicsApplication">
          <df name="custom_bounding">
          </df>
          <df name="custom_conditions">
            <in>monolithic_wall_condition.cpp</in>
            <in>monolithic_wall_condition.h</in>
            <in>two_step_generalized_wall_condition.cpp</in>
            <in>two_step_generalized_wall_condition.h</in>
            <in>two_step_periodic_condition.cpp</in>
            <in>two_step_periodic_condition.h</in>
            <in>two_step_werner_wengle_wall_condition.cpp</in>
            <in>two_step_werner_wengle_wall_condition.h</in>
            <in>wall_condition.cpp</in>
            <in>wall_condition.h</in>
            <in>wall_condition_discontinuous.cpp</in>
            <in>wall_condition_discontinuous.h</in>
          </df>
          <df name="custom_constitutive">
            <df name="custom_flow_rules">
            </df>
            <df name="custom_hardening_laws">
            </df>
            <df name="custom_yield_criteria">
            </df>
            <in>hypoelastic_3D_law.cpp</in>
            <in>hypoelastic_3D_law.hpp</in>
            <in>hypoelastic_plane_strain_2D_law.cpp</in>
            <in>hypoelastic_plane_strain_2D_law.hpp</in>
            <in>hypoelastic_plastic_3D_law.cpp</in>
            <in>hypoelastic_plastic_3D_law.hpp</in>
          </df>
          <df name="custom_elements">
            <in>two_step_updated_lagrangian_V_P_element.cpp</in>
            <in>two_step_updated_lagrangian_V_P_element.h</in>
            <in>two_step_updated_lagrangian_V_P_fluid_element.cpp</in>
            <in>two_step_updated_lagrangian_V_P_fluid_element.h</in>
            <in>two_step_updated_lagrangian_V_P_solid_element.cpp</in>
            <in>two_step_updated_lagrangian_V_P_solid_element.h</in>
          </df>
          <df name="custom_modelers">
          </df>
          <df name="custom_problemtype">
            <df name="Kratos_Pfem_Fluid_Dynamics_Application.gid">
            </df>
            <df name="pfem_fluid.gid">
            </df>
          </df>
          <df name="custom_processes">
            <in>build_mesh_boundary_process_for_fluids.hpp</in>
            <in>model_start_end_meshing_process_for_fluids.hpp</in>
            <in>reconstruct_mesh_boundary_process_for_fluids.hpp</in>
            <in>refine_mesh_boundary_process_for_fluids.hpp</in>
            <in>remove_mesh_nodes_process_for_fluids.hpp</in>
            <in>spalart_allmaras_turbulence_model.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_bounding_to_python.cpp</in>
            <in>add_custom_bounding_to_python.h</in>
            <in>add_custom_conditions_to_python.cpp</in>
            <in>add_custom_conditions_to_python.h</in>
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_modelers_to_python.cpp</in>
            <in>add_custom_modelers_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pfem_fluid_dynamics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builders_and_solvers">
              <in>residualbased_block_builder_and_solver_periodic.h</in>
            </df>
            <df name="convergence_criteria">
            </df>
            <df name="schemes">
              <in>fluid_residual_based_U_wP_static_scheme.hpp</in>
            </df>
            <df name="strategies">
              <in>fluid_residual_based_newton_raphson_line_search_implex_strategy.hpp</in>
              <in>temporary_predictorcorrector_velocity_bdf_scheme_turbulent.h</in>
              <in>two_step_v_p_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>solver_settings.h</in>
            <in>two_step_v_p_settings.h</in>
            <in>two_step_v_p_settings_periodic.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>pfem_fluid_dynamics_application.cpp</in>
          <in>pfem_fluid_dynamics_application.h</in>
          <in>pfem_fluid_dynamics_application_variables.cpp</in>
          <in>pfem_fluid_dynamics_application_variables.h</in>
        </df>
        <df name="PfemSolidMechanicsApplication">
          <df name="custom_bounding">
            <in>rigid_circle_wall_bounding_box.hpp</in>
            <in>rigid_nose_wall_bounding_box.hpp</in>
            <in>rigid_plane_wall_bounding_box.hpp</in>
          </df>
          <df name="custom_conditions">
            <df name="custom_friction_laws">
              <in>coulomb_adhesion_friction_law.cpp</in>
              <in>coulomb_adhesion_friction_law.hpp</in>
              <in>friction_law.cpp</in>
              <in>friction_law.hpp</in>
              <in>hardening_coulomb_friction_law.cpp</in>
              <in>hardening_coulomb_friction_law.hpp</in>
            </df>
            <in>axisym_contact_domain_LM_2D_condition.cpp</in>
            <in>axisym_contact_domain_LM_2D_condition.hpp</in>
            <in>axisym_contact_domain_penalty_2D_condition.cpp</in>
            <in>axisym_contact_domain_penalty_2D_condition.hpp</in>
            <in>axisym_point_rigid_contact_penalty_2D_condition.cpp</in>
            <in>axisym_point_rigid_contact_penalty_2D_condition.hpp</in>
            <in>axisym_point_rigid_contact_penalty_water_2D_condition.cpp</in>
            <in>axisym_point_rigid_contact_penalty_water_2D_condition.hpp</in>
            <in>beam_point_pressure_condition.cpp</in>
            <in>beam_point_pressure_condition.hpp</in>
            <in>beam_point_rigid_contact_LM_3D_condition.cpp</in>
            <in>beam_point_rigid_contact_LM_3D_condition.hpp</in>
            <in>beam_point_rigid_contact_condition.cpp</in>
            <in>beam_point_rigid_contact_condition.hpp</in>
            <in>beam_point_rigid_contact_penalty_3D_condition.cpp</in>
            <in>beam_point_rigid_contact_penalty_3D_condition.hpp</in>
            <in>contact_domain_LM_2D_condition.cpp</in>
            <in>contact_domain_LM_2D_condition.hpp</in>
            <in>contact_domain_condition.cpp</in>
            <in>contact_domain_condition.hpp</in>
            <in>contact_domain_penalty_2D_condition.cpp</in>
            <in>contact_domain_penalty_2D_condition.hpp</in>
            <in>point_rigid_contact_condition.cpp</in>
            <in>point_rigid_contact_condition.hpp</in>
            <in>point_rigid_contact_penalty_2D_condition.cpp</in>
            <in>point_rigid_contact_penalty_2D_condition.hpp</in>
            <in>point_rigid_contact_penalty_3D_condition.cpp</in>
            <in>point_rigid_contact_penalty_3D_condition.hpp</in>
            <in>rigid_body_point_rigid_contact_condition.cpp</in>
            <in>rigid_body_point_rigid_contact_condition.hpp</in>
            <in>wall_condition.cpp</in>
            <in>wall_condition.hpp</in>
          </df>
          <df name="custom_constitutive">
            <df name="custom_flow_rules">
              <in>J2_explicit_plastic_flow_rule.cpp</in>
              <in>J2_explicit_plastic_flow_rule.hpp</in>
              <in>borja_cam_clay_explicit_plastic_flow_rule.cpp</in>
              <in>borja_cam_clay_explicit_plastic_flow_rule.hpp</in>
              <in>cam_clay_explicit_plastic_flow_rule.cpp</in>
              <in>cam_clay_explicit_plastic_flow_rule.hpp</in>
              <in>linear_cam_clay_explicit_plastic_flow_rule.cpp</in>
              <in>linear_cam_clay_explicit_plastic_flow_rule.hpp</in>
              <in>matsuoka_nakai_flow_rule.cpp</in>
              <in>matsuoka_nakai_flow_rule.hpp</in>
              <in>mohr_coulomb_explicit_plastic_flow_rule.cpp</in>
              <in>mohr_coulomb_explicit_plastic_flow_rule.hpp</in>
              <in>non_associative_explicit_flow_rule.cpp</in>
              <in>non_associative_explicit_flow_rule.hpp</in>
              <in>non_associative_plastic_flow_rule.cpp</in>
              <in>non_associative_plastic_flow_rule.hpp</in>
              <in>tresca_explicit_plastic_flow_rule.cpp</in>
              <in>tresca_explicit_plastic_flow_rule.hpp</in>
            </df>
            <df name="custom_hardening_laws">
              <in>cam_clay_hardening_law.cpp</in>
              <in>cam_clay_hardening_law.hpp</in>
            </df>
            <df name="custom_yield_criteria">
              <in>J2_yield_criterion.cpp</in>
              <in>J2_yield_criterion.hpp</in>
              <in>cam_clay_yield_criterion.cpp</in>
              <in>cam_clay_yield_criterion.hpp</in>
              <in>matsuoka_nakai_yield_criterion.cpp</in>
              <in>matsuoka_nakai_yield_criterion.hpp</in>
              <in>mohr_coulomb_yield_criterion.cpp</in>
              <in>mohr_coulomb_yield_criterion.hpp</in>
              <in>tresca_yield_criterion.cpp</in>
              <in>tresca_yield_criterion.hpp</in>
            </df>
            <in>borja_hencky_cam_clay_axisym_2D_law.cpp</in>
            <in>borja_hencky_cam_clay_axisym_2D_law.hpp</in>
            <in>borja_hencky_cam_clay_plane_strain_2D_law.cpp</in>
            <in>borja_hencky_cam_clay_plane_strain_2D_law.hpp</in>
            <in>hencky_J2_axisym_2D_law.cpp</in>
            <in>hencky_J2_axisym_2D_law.hpp</in>
            <in>hencky_J2_plane_strain_2D_law.cpp</in>
            <in>hencky_J2_plane_strain_2D_law.hpp</in>
            <in>hencky_U_P_J2_axisym_2D_law.cpp</in>
            <in>hencky_U_P_J2_axisym_2D_law.hpp</in>
            <in>hencky_U_P_J2_plane_strain_2D_law.cpp</in>
            <in>hencky_U_P_J2_plane_strain_2D_law.hpp</in>
            <in>hencky_U_P_Tresca_axisym_2D_law.cpp</in>
            <in>hencky_U_P_Tresca_axisym_2D_law.hpp</in>
            <in>hencky_U_P_Tresca_plane_strain_2D_law.cpp</in>
            <in>hencky_U_P_Tresca_plane_strain_2D_law.hpp</in>
            <in>hencky_cam_clay_axisym_2D_law.cpp</in>
            <in>hencky_cam_clay_axisym_2D_law.hpp</in>
            <in>hencky_cam_clay_plane_strain_2D_law.cpp</in>
            <in>hencky_cam_clay_plane_strain_2D_law.hpp</in>
            <in>hencky_matsuoka_axisym_2D_law.cpp</in>
            <in>hencky_matsuoka_axisym_2D_law.hpp</in>
            <in>hencky_matsuoka_plane_strain_2D_law.cpp</in>
            <in>hencky_matsuoka_plane_strain_2D_law.hpp</in>
            <in>hencky_mohr_coulomb_axisym_2D_law.cpp</in>
            <in>hencky_mohr_coulomb_axisym_2D_law.hpp</in>
            <in>hencky_mohr_coulomb_plane_strain_2D_law.cpp</in>
            <in>hencky_mohr_coulomb_plane_strain_2D_law.hpp</in>
            <in>hencky_plastic_3d_law.cpp</in>
            <in>hencky_plastic_3d_law.hpp</in>
            <in>hencky_plastic_axisym_2d_law.cpp</in>
            <in>hencky_plastic_axisym_2d_law.hpp</in>
            <in>hencky_plastic_plane_strain_2d_law.cpp</in>
            <in>hencky_plastic_plane_strain_2d_law.hpp</in>
            <in>hencky_tresca_axisym_2D_law.cpp</in>
            <in>hencky_tresca_axisym_2D_law.hpp</in>
            <in>hencky_tresca_plane_strain_2D_law.cpp</in>
            <in>hencky_tresca_plane_strain_2D_law.hpp</in>
            <in>linear_hencky_cam_clay_axisym_2D_law.cpp</in>
            <in>linear_hencky_cam_clay_axisym_2D_law.hpp</in>
            <in>linear_hencky_cam_clay_plane_strain_2D_law.cpp</in>
            <in>linear_hencky_cam_clay_plane_strain_2D_law.hpp</in>
            <in>non_linear_hencky_plastic_3D_law.cpp</in>
            <in>non_linear_hencky_plastic_3D_law.hpp</in>
            <in>non_linear_hencky_plastic_U_P_3D_law.cpp</in>
            <in>non_linear_hencky_plastic_U_P_3D_law.hpp</in>
            <in>non_linear_hencky_plastic_U_P_axisym_2D_law.cpp</in>
            <in>non_linear_hencky_plastic_U_P_axisym_2D_law.hpp</in>
            <in>non_linear_hencky_plastic_U_P_plane_strain_2D_law.cpp</in>
            <in>non_linear_hencky_plastic_U_P_plane_strain_2D_law.hpp</in>
            <in>non_linear_hencky_plastic_axisym_2D_law.cpp</in>
            <in>non_linear_hencky_plastic_axisym_2D_law.hpp</in>
            <in>non_linear_hencky_plastic_plane_strain_2D_law.cpp</in>
            <in>non_linear_hencky_plastic_plane_strain_2D_law.hpp</in>
          </df>
          <df name="custom_elements">
            <in>axisym_updated_lagrangian_U_J_element.cpp</in>
            <in>axisym_updated_lagrangian_U_J_element.hpp</in>
            <in>axisym_updated_lagrangian_U_J_wP_element.cpp</in>
            <in>axisym_updated_lagrangian_U_J_wP_element.hpp</in>
            <in>axisym_updated_lagrangian_U_P_wP_element.cpp</in>
            <in>axisym_updated_lagrangian_U_P_wP_element.hpp</in>
            <in>axisym_updated_lagrangian_U_Pressure_element.cpp</in>
            <in>axisym_updated_lagrangian_U_Pressure_element.hpp</in>
            <in>axisym_updated_lagrangian_U_wP_Stab_element.cpp</in>
            <in>axisym_updated_lagrangian_U_wP_Stab_element.hpp</in>
            <in>axisym_updated_lagrangian_U_wP_element.cpp</in>
            <in>axisym_updated_lagrangian_U_wP_element.hpp</in>
            <in>total_updated_lagrangian_U_P_element.cpp</in>
            <in>total_updated_lagrangian_U_P_element.hpp</in>
            <in>total_updated_lagrangian_element.cpp</in>
            <in>total_updated_lagrangian_element.hpp</in>
            <in>updated_lagrangian_U_J_P_element.cpp</in>
            <in>updated_lagrangian_U_J_P_element.hpp</in>
            <in>updated_lagrangian_U_J_element.cpp</in>
            <in>updated_lagrangian_U_J_element.hpp</in>
            <in>updated_lagrangian_U_J_wP_element.cpp</in>
            <in>updated_lagrangian_U_J_wP_element.hpp</in>
            <in>updated_lagrangian_U_P_Second_element.cpp</in>
            <in>updated_lagrangian_U_P_Second_element.hpp</in>
            <in>updated_lagrangian_U_wP_FIC_element.cpp</in>
            <in>updated_lagrangian_U_wP_FIC_element.hpp</in>
            <in>updated_lagrangian_U_wP_Stab_Lag_element.cpp</in>
            <in>updated_lagrangian_U_wP_Stab_Lag_element.hpp</in>
            <in>updated_lagrangian_U_wP_Stab_element.cpp</in>
            <in>updated_lagrangian_U_wP_Stab_element.hpp</in>
            <in>updated_lagrangian_U_wP_element.cpp</in>
            <in>updated_lagrangian_U_wP_element.hpp</in>
            <in>updated_lagrangian_U_wP_second_element.cpp</in>
            <in>updated_lagrangian_U_wP_second_element.hpp</in>
          </df>
          <df name="custom_kratos">
            <df name="external_libraries">
            </df>
            <df name="install_scripts">
            </df>
            <df name="list_files_creation">
            </df>
          </df>
          <df name="custom_modelers">
            <in>contact_domain_2D_modeler.cpp</in>
            <in>contact_domain_2D_modeler.hpp</in>
          </df>
          <df name="custom_problemtype">
            <df name="Kratos_Pfem_Solid_Mechanics_Application.gid">
            </df>
          </df>
          <df name="custom_processes">
            <in>contact_refine_mesh_boundary_process.hpp</in>
            <in>rigid_wall_contact_search_process.hpp</in>
            <in>set_mechanical_initial_state_process.cpp</in>
            <in>set_mechanical_initial_state_process.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_custom_bounding_to_python.cpp</in>
            <in>add_custom_bounding_to_python.h</in>
            <in>add_custom_conditions_to_python.cpp</in>
            <in>add_custom_conditions_to_python.h</in>
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_modelers_to_python.cpp</in>
            <in>add_custom_modelers_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pfem_solid_mechanics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builders_and_solvers">
            </df>
            <df name="convergence_criteria">
            </df>
            <df name="schemes">
              <in>residual_based_U_wP_static_scheme.hpp</in>
            </df>
            <df name="strategies">
              <in>residual_based_newton_raphson_line_search_implex_strategy.hpp</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>advanced_mesh_data_transfer_utilities.cpp</in>
            <in>contact_domain_utilities.cpp</in>
            <in>contact_domain_utilities.hpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="axisym_test_rigid_2D_cpt.gid">
            </df>
            <df name="contact_patch_test_2D.gid">
            </df>
            <df name="cooks_membrane_test_2D.gid">
            </df>
            <df name="cutting_test_rigid_2D.gid">
            </df>
            <df name="necking_test_2D.gid">
            </df>
            <df name="oedometer_test_planeStrain_2D.gid">
            </df>
          </df>
          <in>pfem_solid_mechanics_application.cpp</in>
          <in>pfem_solid_mechanics_application.h</in>
          <in>pfem_solid_mechanics_application_variables.cpp</in>
          <in>pfem_solid_mechanics_application_variables.h</in>
        </df>
        <df name="phase_field_application">
          <df name="custom_elements">
            <in>phase_field_fracture.cpp</in>
            <in>phase_field_fracture.h</in>
            <in>phase_field_fracture_hybrid.cpp</in>
            <in>phase_field_fracture_hybrid.h</in>
            <in>phase_field_kinematic_linear.cpp</in>
            <in>phase_field_kinematic_linear.h</in>
          </df>
          <df name="custom_python">
            <in>phase_field_python_application.cpp</in>
          </df>
          <df name="custom_utilities">
            <df name="eig">
              <in>eig3.cpp</in>
              <in>eig3.h</in>
              <in>test.cpp</in>
            </df>
            <in>isotropic_tensor_utility.h</in>
            <in>isotropic_tensor_utility_tester.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>phase_field_application.cpp</in>
          <in>phase_field_application.h</in>
        </df>
        <df name="PODApplication">
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>pod_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>residualbased_elimination_builder_and_solver_pod.h</in>
            <in>residualbased_elimination_builder_and_solver_pod_WithPressure.h</in>
            <in>residualbased_elimination_builder_and_solver_standard.h</in>
            <in>residualbased_elimination_builder_and_solver_standard_biggerlocalM.h</in>
            <in>residualbased_elimination_builder_and_solver_standard_biggerlocalM_NoP.h</in>
          </df>
          <df name="custom_utilities">
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="cylinder.gid">
              <df name="100sec_400shots_10pods_4thintial_step">
              </df>
              <df name="100sec_400shots_10pods_averg.intial">
              </df>
              <df name="20sec_200shots_4podmodes-4thstepintial">
              </df>
              <df name="20sec_200shots_4podmodes_average.intial">
              </df>
              <df name="temp_store">
              </df>
            </df>
          </df>
          <in>pod_application.cpp</in>
          <in>pod_application.h</in>
        </df>
        <df name="PoromechanicsApplication">
          <df name="custom_conditions">
            <in>U_Pw_condition.cpp</in>
            <in>U_Pw_condition.hpp</in>
            <in>U_Pw_face_load_condition.cpp</in>
            <in>U_Pw_face_load_condition.hpp</in>
            <in>U_Pw_face_load_interface_condition.cpp</in>
            <in>U_Pw_face_load_interface_condition.hpp</in>
            <in>U_Pw_force_condition.cpp</in>
            <in>U_Pw_force_condition.hpp</in>
            <in>U_Pw_normal_face_load_condition.cpp</in>
            <in>U_Pw_normal_face_load_condition.hpp</in>
            <in>U_Pw_normal_flux_FIC_condition.cpp</in>
            <in>U_Pw_normal_flux_FIC_condition.hpp</in>
            <in>U_Pw_normal_flux_condition.cpp</in>
            <in>U_Pw_normal_flux_condition.hpp</in>
            <in>U_Pw_normal_flux_interface_condition.cpp</in>
            <in>U_Pw_normal_flux_interface_condition.hpp</in>
            <in>general_U_Pw_diff_order_condition.cpp</in>
            <in>general_U_Pw_diff_order_condition.hpp</in>
            <in>line_load_2D_diff_order_condition.cpp</in>
            <in>line_load_2D_diff_order_condition.hpp</in>
            <in>line_normal_fluid_flux_2D_diff_order_condition.cpp</in>
            <in>line_normal_fluid_flux_2D_diff_order_condition.hpp</in>
            <in>line_normal_load_2D_diff_order_condition.cpp</in>
            <in>line_normal_load_2D_diff_order_condition.hpp</in>
            <in>surface_load_3D_diff_order_condition.cpp</in>
            <in>surface_load_3D_diff_order_condition.hpp</in>
            <in>surface_normal_fluid_flux_3D_diff_order_condition.cpp</in>
            <in>surface_normal_fluid_flux_3D_diff_order_condition.hpp</in>
            <in>surface_normal_load_3D_diff_order_condition.cpp</in>
            <in>surface_normal_load_3D_diff_order_condition.hpp</in>
          </df>
          <df name="custom_constitutive">
            <in>bilinear_cohesive_2D_law.cpp</in>
            <in>bilinear_cohesive_2D_law.hpp</in>
            <in>bilinear_cohesive_3D_law.cpp</in>
            <in>bilinear_cohesive_3D_law.hpp</in>
          </df>
          <df name="custom_elements">
            <in>U_Pw_element.cpp</in>
            <in>U_Pw_element.hpp</in>
            <in>U_Pw_small_strain_FIC_element.cpp</in>
            <in>U_Pw_small_strain_FIC_element.hpp</in>
            <in>U_Pw_small_strain_element.cpp</in>
            <in>U_Pw_small_strain_element.hpp</in>
            <in>U_Pw_small_strain_interface_element.cpp</in>
            <in>U_Pw_small_strain_interface_element.hpp</in>
            <in>U_Pw_small_strain_link_interface_element.cpp</in>
            <in>U_Pw_small_strain_link_interface_element.hpp</in>
            <in>small_strain_U_Pw_diff_order_element.cpp</in>
            <in>small_strain_U_Pw_diff_order_element.hpp</in>
          </df>
          <df name="custom_problemtype">
            <df name="Poromechanics_Application.gid">
            </df>
          </df>
          <df name="custom_processes">
            <in>displacement_table_interpolation_process.hpp</in>
            <in>face_load_table_interpolation_process.hpp</in>
            <in>force_table_interpolation_process.hpp</in>
            <in>normal_flux_table_interpolation_process.hpp</in>
            <in>normal_load_table_interpolation_process.hpp</in>
            <in>pressure_table_interpolation_process.hpp</in>
            <in>tangential_load_table_interpolation_process.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>poromechanics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="custom_builders_and_solvers">
            </df>
            <df name="custom_convergence_criteria">
            </df>
            <df name="custom_schemes">
              <in>newmark_dynamic_U_Pw_scheme.hpp</in>
              <in>newmark_quasistatic_U_Pw_scheme.hpp</in>
            </df>
            <in>newton_raphson_strategy.hpp</in>
            <in>ramm_arc_length_strategy.hpp</in>
          </df>
          <df name="custom_utilities">
            <in>condition_utilities.hpp</in>
            <in>element_utilities.hpp</in>
            <in>interface_element_utilities.hpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="consolidation_interface_3D.gid">
            </df>
            <df name="consolidation_problem_2D.gid">
            </df>
            <df name="undrained_soil_column_2D.gid">
            </df>
          </df>
          <in>poromechanics_application.cpp</in>
          <in>poromechanics_application.h</in>
          <in>poromechanics_application_variables.cpp</in>
          <in>poromechanics_application_variables.h</in>
        </df>
        <df name="ShapeOptimizationApplication">
          <df name="custom_conditions">
            <in>shape_optimization_condition.cpp</in>
            <in>shape_optimization_condition.h</in>
          </df>
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>shape_optimization_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>vertex_morphing_utilities.h</in>
          </df>
          <df name="python_scripts">
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="01_Sample_Scripts">
            </df>
            <df name="multiple_local_minima">
            </df>
            <df name="multiple_local_minima_2D">
            </df>
            <df name="vertex_morphing_tent">
            </df>
            <df name="vertex_morphing_tent_2D">
            </df>
          </df>
          <in>shape_optimization_application.cpp</in>
          <in>shape_optimization_application.h</in>
        </df>
        <df name="SolidMechanicsApplication">
          <df name="custom_conditions">
            <in>force_load_condition.cpp</in>
            <in>force_load_condition.hpp</in>
            <in>line_load_2D_condition.cpp</in>
            <in>line_load_2D_condition.hpp</in>
            <in>line_load_3D_condition.cpp</in>
            <in>line_load_3D_condition.hpp</in>
            <in>line_load_axisym_2D_condition.cpp</in>
            <in>line_load_axisym_2D_condition.hpp</in>
            <in>point_load_2D_condition.cpp</in>
            <in>point_load_2D_condition.hpp</in>
            <in>point_load_3D_condition.cpp</in>
            <in>point_load_3D_condition.hpp</in>
            <in>point_load_axisym_2D_condition.cpp</in>
            <in>point_load_axisym_2D_condition.hpp</in>
            <in>surface_load_3D_condition.cpp</in>
            <in>surface_load_3D_condition.hpp</in>
          </df>
          <df name="custom_constitutive">
            <df name="custom_flow_rules">
              <in>flow_rule.cpp</in>
              <in>flow_rule.hpp</in>
              <in>isotropic_damage_flow_rule.cpp</in>
              <in>isotropic_damage_flow_rule.hpp</in>
              <in>linear_associative_plastic_flow_rule.cpp</in>
              <in>linear_associative_plastic_flow_rule.hpp</in>
              <in>non_linear_associative_plastic_flow_rule.cpp</in>
              <in>non_linear_associative_plastic_flow_rule.hpp</in>
            </df>
            <df name="custom_hardening_laws">
              <in>exponential_damage_hardening_law.cpp</in>
              <in>exponential_damage_hardening_law.hpp</in>
              <in>hardening_law.hpp</in>
              <in>linear_isotropic_kinematic_hardening_law.cpp</in>
              <in>linear_isotropic_kinematic_hardening_law.hpp</in>
              <in>non_linear_isotropic_kinematic_hardening_law.cpp</in>
              <in>non_linear_isotropic_kinematic_hardening_law.hpp</in>
            </df>
            <df name="custom_yield_criteria">
              <in>mises_huber_yield_criterion.cpp</in>
              <in>mises_huber_yield_criterion.hpp</in>
              <in>simo_ju_yield_criterion.cpp</in>
              <in>simo_ju_yield_criterion.hpp</in>
              <in>yield_criterion.hpp</in>
            </df>
            <in>hyperelastic_3D_law.cpp</in>
            <in>hyperelastic_3D_law.hpp</in>
            <in>hyperelastic_U_P_3D_law.cpp</in>
            <in>hyperelastic_U_P_3D_law.hpp</in>
            <in>hyperelastic_U_P_axisym_2D_law.cpp</in>
            <in>hyperelastic_U_P_axisym_2D_law.hpp</in>
            <in>hyperelastic_U_P_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_U_P_plane_strain_2D_law.hpp</in>
            <in>hyperelastic_axisym_2D_law.cpp</in>
            <in>hyperelastic_axisym_2D_law.hpp</in>
            <in>hyperelastic_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_plane_strain_2D_law.hpp</in>
            <in>hyperelastic_plastic_3D_law.cpp</in>
            <in>hyperelastic_plastic_3D_law.hpp</in>
            <in>hyperelastic_plastic_J2_3D_law.cpp</in>
            <in>hyperelastic_plastic_J2_3D_law.hpp</in>
            <in>hyperelastic_plastic_J2_axisym_2D_law.cpp</in>
            <in>hyperelastic_plastic_J2_axisym_2D_law.hpp</in>
            <in>hyperelastic_plastic_J2_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_plastic_J2_plane_strain_2D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_3D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_3D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_J2_3D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_J2_3D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_J2_axisym_2D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_J2_axisym_2D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_J2_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_J2_plane_strain_2D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_axisym_2D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_axisym_2D_law.hpp</in>
            <in>hyperelastic_plastic_U_P_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_plastic_U_P_plane_strain_2D_law.hpp</in>
            <in>hyperelastic_plastic_axisym_2D_law.cpp</in>
            <in>hyperelastic_plastic_axisym_2D_law.hpp</in>
            <in>hyperelastic_plastic_plane_strain_2D_law.cpp</in>
            <in>hyperelastic_plastic_plane_strain_2D_law.hpp</in>
            <in>isotropic_damage_simo_ju_3D_law.cpp</in>
            <in>isotropic_damage_simo_ju_3D_law.hpp</in>
            <in>isotropic_damage_simo_ju_plane_strain_2D_law.cpp</in>
            <in>isotropic_damage_simo_ju_plane_strain_2D_law.hpp</in>
            <in>isotropic_damage_simo_ju_plane_stress_2D_law.cpp</in>
            <in>isotropic_damage_simo_ju_plane_stress_2D_law.hpp</in>
            <in>linear_elastic_3D_law.cpp</in>
            <in>linear_elastic_3D_law.hpp</in>
            <in>linear_elastic_axisym_2D_law.cpp</in>
            <in>linear_elastic_axisym_2D_law.hpp</in>
            <in>linear_elastic_orthotropic_3D_law.cpp</in>
            <in>linear_elastic_orthotropic_3D_law.hpp</in>
            <in>linear_elastic_plane_strain_2D_law.cpp</in>
            <in>linear_elastic_plane_strain_2D_law.hpp</in>
            <in>linear_elastic_plane_stress_2D_law.cpp</in>
            <in>linear_elastic_plane_stress_2D_law.hpp</in>
            <in>linear_elastic_plastic_3D_law.cpp</in>
            <in>linear_elastic_plastic_3D_law.hpp</in>
            <in>linear_elastic_plastic_plane_strain_2D_law.cpp</in>
            <in>linear_elastic_plastic_plane_strain_2D_law.hpp</in>
            <in>linear_elastic_plastic_plane_stress_2D_law.cpp</in>
            <in>linear_elastic_plastic_plane_stress_2D_law.hpp</in>
          </df>
          <df name="custom_elements">
            <in>axisym_small_displacement_element.cpp</in>
            <in>axisym_small_displacement_element.hpp</in>
            <in>axisym_updated_lagrangian_U_P_element.cpp</in>
            <in>axisym_updated_lagrangian_U_P_element.hpp</in>
            <in>axisym_updated_lagrangian_element.cpp</in>
            <in>axisym_updated_lagrangian_element.hpp</in>
            <in>large_displacement_U_P_element.cpp</in>
            <in>large_displacement_U_P_element.hpp</in>
            <in>large_displacement_element.cpp</in>
            <in>large_displacement_element.hpp</in>
            <in>linear_solid_element.cpp</in>
            <in>linear_solid_element.hpp</in>
            <in>small_displacement_element.cpp</in>
            <in>small_displacement_element.hpp</in>
            <in>total_lagrangian_element.cpp</in>
            <in>total_lagrangian_element.hpp</in>
            <in>updated_lagrangian_U_P_element.cpp</in>
            <in>updated_lagrangian_U_P_element.hpp</in>
            <in>updated_lagrangian_element.cpp</in>
            <in>updated_lagrangian_element.hpp</in>
          </df>
          <df name="custom_problemtype">
          </df>
          <df name="custom_python">
            <in>add_custom_conditions_to_python.cpp</in>
            <in>add_custom_conditions_to_python.h</in>
            <in>add_custom_constitutive_laws_to_python.cpp</in>
            <in>add_custom_constitutive_laws_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>solid_mechanics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builders_and_solvers">
              <in>component_wise_builder_and_solver.hpp</in>
              <in>explicit_builder_and_solver.hpp</in>
              <in>residual_based_builder_and_solver.hpp</in>
            </df>
            <df name="convergence_criteria">
              <in>component_wise_residual_convergence_criterion.hpp</in>
              <in>displacement_convergence_criterion.hpp</in>
            </df>
            <df name="schemes">
              <in>component_wise_bossak_scheme.hpp</in>
              <in>explicit_central_differences_scheme.hpp</in>
              <in>residual_based_bossak_scheme.hpp</in>
              <in>residual_based_bossak_scheme_v2.hpp</in>
              <in>residual_based_contact_bossak_scheme.hpp</in>
              <in>residual_based_newmark_scheme.hpp</in>
              <in>residual_based_newmark_scheme_v2.hpp</in>
              <in>residual_based_static_scheme.hpp</in>
              <in>residual_based_static_scheme_v2.hpp</in>
            </df>
            <df name="strategies">
              <in>component_wise_newton_raphson_strategy.hpp</in>
              <in>explicit_strategy.hpp</in>
              <in>residual_based_newton_raphson_line_search_strategy.hpp</in>
              <in>residual_based_newton_raphson_strategy.hpp</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>comparison_utilities.hpp</in>
            <in>energy_utilities.h</in>
            <in>isotropic_damage_utilities.hpp</in>
            <in>line_search_calculation_utilities.hpp</in>
            <in>solid_mechanics_math_utilities.hpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="1_Thin_plate_Axial_load.gid">
            </df>
            <df name="2_Thin_plate_Selfweight.gid">
            </df>
            <df name="4_Flexion_3D_Beam.gid">
            </df>
            <df name="5_Z_cantilever.gid">
            </df>
            <df name="IsotropicDamageSimoJuPlaneStress_FourPointShearTest.gid">
            </df>
          </df>
          <in>solid_mechanics_application.cpp</in>
          <in>solid_mechanics_application.h</in>
          <in>solid_mechanics_application_variables.cpp</in>
          <in>solid_mechanics_application_variables.h</in>
        </df>
        <df name="structural_application">
          <df name="constitutive_laws">
            <in>brittle_material_2d.cpp</in>
            <in>brittle_material_2d.h</in>
            <in>cam_clay_3d.cpp</in>
            <in>cam_clay_3d.h</in>
            <in>casm.cpp</in>
            <in>casm.h</in>
            <in>continuousdamage3d.cpp</in>
            <in>continuousdamage3d.h</in>
            <in>drucker_prager.cpp</in>
            <in>drucker_prager.h</in>
            <in>drucker_prager_law.cpp</in>
            <in>drucker_prager_law.h</in>
            <in>dummy_constitutive_law.cpp</in>
            <in>dummy_constitutive_law.h</in>
            <in>external_isotropic_3d.cpp</in>
            <in>external_isotropic_3d.h</in>
            <in>fluid_2d.cpp</in>
            <in>fluid_2d.h</in>
            <in>grouting_mortar.cpp</in>
            <in>grouting_mortar.h</in>
            <in>hooks_law.cpp</in>
            <in>hooks_law.h</in>
            <in>hyperelastic_2d.cpp</in>
            <in>hyperelastic_2d.h</in>
            <in>hyperelastic_3d.cpp</in>
            <in>hyperelastic_3d.h</in>
            <in>hypoelastic_2d.cpp</in>
            <in>hypoelastic_2d.h</in>
            <in>isotropic_2d.cpp</in>
            <in>isotropic_2d.h</in>
            <in>isotropic_3d.cpp</in>
            <in>isotropic_3d.h</in>
            <in>isotropic_damage_2d.cpp</in>
            <in>isotropic_damage_2d.h</in>
            <in>isotropic_damage_3d.cpp</in>
            <in>isotropic_damage_3d.h</in>
            <in>isotropic_damage_implex.cpp</in>
            <in>isotropic_damage_implex.h</in>
            <in>isotropic_elastic_large_strain.cpp</in>
            <in>isotropic_elastic_large_strain.h</in>
            <in>isotropic_linear_elastic.cpp</in>
            <in>isotropic_linear_elastic.h</in>
            <in>isotropic_planestress_wrinkling.cpp</in>
            <in>isotropic_planestress_wrinkling.h</in>
            <in>isotropic_rankine_damage_2d.cpp</in>
            <in>isotropic_rankine_damage_2d.h</in>
            <in>isotropic_rankine_damage_3d.cpp</in>
            <in>isotropic_rankine_damage_3d.h</in>
            <in>mohr_coulomb_plane_strain.cpp</in>
            <in>mohr_coulomb_plane_strain.h</in>
            <in>neo_hookean_3d.cpp</in>
            <in>neo_hookean_3d.h</in>
            <in>orthotropic_3d.cpp</in>
            <in>orthotropic_3d.h</in>
            <in>plane_strain.cpp</in>
            <in>plane_strain.h</in>
            <in>plane_stress.cpp</in>
            <in>plane_stress.h</in>
            <in>plane_stress_J2.cpp</in>
            <in>plane_stress_J2.h</in>
            <in>plasticity_2d.cpp</in>
            <in>plasticity_2d.h</in>
            <in>tutorial_damage_model.cpp</in>
            <in>tutorial_damage_model.h</in>
            <in>viscoelastic_2d.cpp</in>
            <in>viscoelastic_2d.h</in>
            <in>viscofibers_2d.cpp</in>
            <in>viscofibers_2d.h</in>
            <in>viscofibers_hypermatrix_2d.cpp</in>
            <in>viscofibers_hypermatrix_2d.h</in>
            <in>von_mises_3d.cpp</in>
            <in>von_mises_3d.h</in>
            <in>vonmiseskinemver3d.cpp</in>
            <in>vonmiseskinemver3d.h</in>
          </df>
          <df name="custom_conditions">
            <in>contact_link_3D.cpp</in>
            <in>contact_link_3D.h</in>
            <in>contact_link_3D_explicit.cpp</in>
            <in>contact_link_3D_explicit.h</in>
            <in>contact_link_3D_kinematic_linear.cpp</in>
            <in>contact_link_3D_kinematic_linear.h</in>
            <in>contact_link_3D_lagrange_tying.cpp</in>
            <in>contact_link_3D_lagrange_tying.h</in>
            <in>contact_link_3D_newmark.cpp</in>
            <in>contact_link_3D_newmark.h</in>
            <in>elastic_constraint.cpp</in>
            <in>elastic_constraint.h</in>
            <in>face2D.cpp</in>
            <in>face2D.h</in>
            <in>face3D.cpp</in>
            <in>face3D.h</in>
            <in>face_pressure3D.cpp</in>
            <in>face_pressure3D.h</in>
            <in>face_vel_3D.cpp</in>
            <in>face_vel_3D.h</in>
            <in>faceforce3D.cpp</in>
            <in>faceforce3D.h</in>
            <in>line_force.cpp</in>
            <in>line_force.h</in>
            <in>master_contact_face_2d.cpp</in>
            <in>master_contact_face_2d.h</in>
            <in>master_contact_face_3D.cpp</in>
            <in>master_contact_face_3D.h</in>
            <in>master_contact_face_3D_newmark.cpp</in>
            <in>master_contact_face_3D_newmark.h</in>
            <in>master_contact_point_2d.cpp</in>
            <in>master_contact_point_2d.h</in>
            <in>node_tying_lagrange.cpp</in>
            <in>node_tying_lagrange.h</in>
            <in>node_tying_lagrange_z.cpp</in>
            <in>node_tying_lagrange_z.h</in>
            <in>point_point_contact_link.cpp</in>
            <in>point_point_contact_link.h</in>
            <in>point_point_joint_condition.cpp</in>
            <in>point_point_joint_condition.h</in>
            <in>point_segment_contact_link.cpp</in>
            <in>point_segment_contact_link.h</in>
            <in>pointforce2D.cpp</in>
            <in>pointforce2D.h</in>
            <in>pointforce3D.cpp</in>
            <in>pointforce3D.h</in>
            <in>pointmoment3D.cpp</in>
            <in>pointmoment3D.h</in>
            <in>slave_contact_face_3D.cpp</in>
            <in>slave_contact_face_3D.h</in>
            <in>slave_contact_face_3D_newmark.cpp</in>
            <in>slave_contact_face_3D_newmark.h</in>
            <in>slave_contact_point_2d.cpp</in>
            <in>slave_contact_point_2d.h</in>
            <in>slave_contact_point_3d.cpp</in>
            <in>slave_contact_point_3d.h</in>
            <in>spring.cpp</in>
            <in>spring.h</in>
          </df>
          <df name="custom_elements">
            <in>beam_element.cpp</in>
            <in>beam_element.h</in>
            <in>crisfield_truss_element.cpp</in>
            <in>crisfield_truss_element.h</in>
            <in>eas_element_q4e4.cpp</in>
            <in>eas_element_q4e4.h</in>
            <in>ebst.cpp</in>
            <in>ebst.h</in>
            <in>ebst_vel.cpp</in>
            <in>ebst_vel.h</in>
            <in>kinematic_linear.cpp</in>
            <in>kinematic_linear.h</in>
            <in>membrane_element.cpp</in>
            <in>membrane_element.h</in>
            <in>mixed_lagrangian.cpp</in>
            <in>mixed_lagrangian.h</in>
            <in>rigid_body_3D.cpp</in>
            <in>rigid_body_3D.h</in>
            <in>shell_anisotropic.cpp</in>
            <in>shell_anisotropic.h</in>
            <in>shell_anisotropic_linear.cpp</in>
            <in>shell_anisotropic_linear.h</in>
            <in>shell_isotropic.cpp</in>
            <in>shell_isotropic.h</in>
            <in>timoshenko_beam_element.cpp</in>
            <in>timoshenko_beam_element.h</in>
            <in>total_lagrangian.cpp</in>
            <in>total_lagrangian.h</in>
            <in>truss_element.cpp</in>
            <in>truss_element.h</in>
            <in>unsaturated_soils_element_2phase_small_strain.cpp</in>
            <in>unsaturated_soils_element_2phase_small_strain.h</in>
            <in>unsaturated_soils_element_3phase_small_strain.cpp</in>
            <in>unsaturated_soils_element_3phase_small_strain.h</in>
          </df>
          <df name="custom_external_libraries">
            <df name="tensor-cpp">
              <in>tensor.cpp</in>
              <in>tensor.h</in>
              <in>test_tensor.cpp</in>
            </df>
          </df>
          <df name="custom_problemtype">
            <df name="archiv">
            </df>
            <df name="problemtype_generator">
              <df name="fsi_structure_scripts">
              </df>
              <df name="structural_application_scripts">
              </df>
            </df>
            <df name="sd.gid">
              <df name="images">
              </df>
              <df name="symbols">
              </df>
            </df>
            <df name="structural_application.gid">
            </df>
          </df>
          <df name="custom_processes">
            <in>topology_update_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_conditions_to_python.cpp</in>
            <in>add_conditions_to_python.h</in>
            <in>add_constitutive_laws_to_python.cpp</in>
            <in>add_constitutive_laws_to_python.h</in>
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_parallel_strategies_to_python.cpp</in>
            <in>add_custom_parallel_strategies_to_python.h</in>
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_fluency_criteria_to_python.cpp</in>
            <in>add_fluency_criteria_to_python.h</in>
            <in>structural_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>modal_analysis_builder_and_solver.h</in>
              <in>multiphase_builder_and_solver.h</in>
            </df>
            <df name="convergencecriterias">
              <in>multiphaseflow_criteria.h</in>
              <in>resisualbased_multiphase_criteria.h</in>
            </df>
            <df name="schemes">
              <in>composit_scheme.h</in>
              <in>forward_increment_lagrange_multiplier_scheme.h</in>
              <in>inner_volumetric_dynamic_scheme.h</in>
              <in>inner_volumetric_scheme.h</in>
              <in>residualbased_newmark_scheme.h</in>
              <in>residualbased_predictorcorrector_bossak_scheme.h</in>
              <in>residualbased_predictorcorrector_bossak_scheme_rotation.h</in>
              <in>residualbased_predictorcorrector_relaxation_scheme.h</in>
              <in>volumetric_scheme.h</in>
            </df>
            <df name="strategies">
              <in>residualbased_arc_length_strategy.h</in>
              <in>residualbased_central_differences_strategy.h</in>
              <in>residualbased_newton_raphson_line_search_strategy.h</in>
              <in>residualbased_uzawa_newton_raphson_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>bathe_recover_stress_utility.h</in>
            <in>boundary_condition_utility.h</in>
            <in>boundary_conditions_and_contact_utilities.h</in>
            <in>circle_3d.h</in>
            <in>closed_cylinder_3d.h</in>
            <in>contact_utility.h</in>
            <in>custom_gid_io.h</in>
            <in>cylinder_3d.h</in>
            <in>deactivation_utility.h</in>
            <in>disconnect_utility.h</in>
            <in>dof_utility.h</in>
            <in>inter_fracture_tetrahedra_utility.h</in>
            <in>inter_fracture_triangle_utility.h</in>
            <in>intersect_triangles_cases.h</in>
            <in>intra_fracture_triangle_utility.h</in>
            <in>joint.h</in>
            <in>line_searches_utility.h</in>
            <in>maped_space.h</in>
            <in>node_snapping_utility.h</in>
            <in>output_utility.h</in>
            <in>parallel_variable_transfer_utility.h</in>
            <in>restart_utility.h</in>
            <in>sd_math_utils.h</in>
            <in>segment_2d.h</in>
            <in>smoothing_utility.h</in>
            <in>tensor_utils.h</in>
            <in>variable_transfer_utility.h</in>
            <in>volume_utility.h</in>
          </df>
          <df name="external_includes">
            <in>tensor.h</in>
          </df>
          <df name="fluency_criteria">
            <in>drucker_prager_yield_function.cpp</in>
            <in>drucker_prager_yield_function.h</in>
            <in>energy_yield_function.cpp</in>
            <in>energy_yield_function.h</in>
            <in>fluency_criteria.h</in>
            <in>isotropic_rankine_yield_function.cpp</in>
            <in>isotropic_rankine_yield_function.h</in>
            <in>modified_morh_coulomb_yield_function.cpp</in>
            <in>modified_morh_coulomb_yield_function.h</in>
            <in>morh_coulomb_yield_function.cpp</in>
            <in>morh_coulomb_yield_function.h</in>
            <in>rankine_yield_function.cpp</in>
            <in>rankine_yield_function.h</in>
            <in>standard_morh_coulomb_yield_function.cpp</in>
            <in>standard_morh_coulomb_yield_function.h</in>
            <in>tresca_yield_function.cpp</in>
            <in>tresca_yield_function.h</in>
            <in>von_mises_yield_function.cpp</in>
            <in>von_mises_yield_function.h</in>
            <in>von_misses_yield_function.cpp</in>
            <in>von_misses_yield_function.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="soft_hard_behavior">
            <in>cohesion_softening.cpp</in>
            <in>cohesion_softening.h</in>
            <in>dilatancy_softening.cpp</in>
            <in>dilatancy_softening.h</in>
            <in>exponencial_softening.cpp</in>
            <in>exponencial_softening.h</in>
            <in>friction_softening.cpp</in>
            <in>friction_softening.h</in>
            <in>lineal_softening.cpp</in>
            <in>lineal_softening.h</in>
            <in>linear_softening.cpp</in>
            <in>linear_softening.h</in>
            <in>softening_hardening_criteria.h</in>
          </df>
          <df name="test_examples">
            <df name="activation_test.gid">
            </df>
            <df name="activation_test2.gid">
            </df>
            <df name="arc_length.gid">
            </df>
            <df name="arc_length_des.gid">
            </df>
            <df name="balken.gid">
            </df>
            <df name="balken_trilinos.gid">
            </df>
            <df name="cantilever2d.gid">
            </df>
            <df name="cantilever3d.gid">
            </df>
            <df name="consolidation_test.gid">
            </df>
            <df name="Patch_Test_Total_Lagrangian_3D_8N.gid">
            </df>
            <df name="Patch_Test_Total_Lagrangian_4N.gid">
            </df>
            <df name="Pendulo_Kratos.gid">
            </df>
            <df name="plasticJ2.gid">
            </df>
          </df>
          <df name="z_legacy">
            <df name="custom_elements">
              <in>Hypoelastic_element.cpp</in>
              <in>Hypoelastic_element.h</in>
              <in>linear_elastic_truss.cpp</in>
              <in>linear_elastic_truss.h</in>
              <in>linear_element.cpp</in>
              <in>linear_element.h</in>
              <in>pfem_contact_element3D.cpp</in>
              <in>pfem_contact_element3D.h</in>
              <in>pfem_contact_element3D_vel.cpp</in>
              <in>pfem_contact_element3D_vel.h</in>
              <in>total_lagrangian_vel.cpp</in>
              <in>total_lagrangian_vel.h</in>
              <in>unsaturated_soils_element_1phase_small_strain.cpp</in>
              <in>unsaturated_soils_element_1phase_small_strain.h</in>
              <in>unsaturated_soils_element_2phase.cpp</in>
              <in>unsaturated_soils_element_2phase.h</in>
              <in>unsaturated_soils_element_3phase.cpp</in>
              <in>unsaturated_soils_element_3phase.h</in>
            </df>
          </df>
          <in>structural_application.cpp</in>
          <in>structural_application.h</in>
        </df>
        <df name="StructuralMechanicsApplication">
          <df name="custom_conditions">
            <in>mortar_contact_2D_condition.cpp</in>
            <in>mortar_contact_2D_condition.hpp</in>
            <in>mortar_contact_3D_condition.cpp</in>
            <in>mortar_contact_3D_condition.hpp</in>
            <in>point_moment_3D_condition.cpp</in>
            <in>point_moment_3D_condition.hpp</in>
          </df>
          <df name="custom_elements">
            <in>SprismElement3D6N.cpp</in>
            <in>SprismElement3D6N.hpp</in>
            <in>isotropic_shell_element.cpp</in>
            <in>isotropic_shell_element.hpp</in>
            <in>membrane_element.cpp</in>
            <in>membrane_element.hpp</in>
            <in>nodal_concentrated_element.cpp</in>
            <in>nodal_concentrated_element.hpp</in>
            <in>shell_thick_element_3D4N.cpp</in>
            <in>shell_thick_element_3D4N.hpp</in>
            <in>shell_thin_element_3D3N.cpp</in>
            <in>shell_thin_element_3D3N.hpp</in>
            <in>small_displacement_beam_element_3D2N.cpp</in>
            <in>small_displacement_beam_element_3D2N.hpp</in>
          </df>
          <df name="custom_python">
            <in>add_cross_sections_to_python.cpp</in>
            <in>add_cross_sections_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>structural_mechanics_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="custom_schemes">
              <in>residual_based_relaxation_scheme.hpp</in>
            </df>
            <in>residual_based_arc_length_strategy.hpp</in>
          </df>
          <df name="custom_utilities">
            <in>EICR.hpp</in>
            <in>line_searches_utility.hpp</in>
            <in>properties_extensions.hpp</in>
            <in>shell_cross_section.cpp</in>
            <in>shell_cross_section.hpp</in>
            <in>shellq4_coordinate_transformation.hpp</in>
            <in>shellq4_corotational_coordinate_transformation.hpp</in>
            <in>shellq4_local_coordinate_system.hpp</in>
            <in>shellt3_coordinate_transformation.hpp</in>
            <in>shellt3_corotational_coordinate_transformation.hpp</in>
            <in>shellt3_local_coordinate_system.hpp</in>
            <in>sprism_neighbours.hpp</in>
            <in>structural_mechanics_math_utilities.hpp</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="dynamic_test">
            </df>
            <df name="Shell_Q4_Thick__BendingRollUp.gid">
            </df>
            <df name="Shell_Q4_Thick__DrillingRollUp.gid">
            </df>
            <df name="Shell_T3_Isotropic_Scordelis.gid">
            </df>
            <df name="Shell_T3_Thin__BendingRollUp.gid">
            </df>
            <df name="Shell_T3_Thin__DrillingRollUp.gid">
            </df>
            <df name="SPRISM_test">
              <df name="Scord_test">
                <df name="Sprism3D6N_Scord_16_test.gid">
                </df>
                <df name="Sprism3D6N_Scord_2_test.gid">
                </df>
                <df name="Sprism3D6N_Scord_32_test.gid">
                </df>
                <df name="Sprism3D6N_Scord_4_test.gid">
                </df>
                <df name="Sprism3D6N_Scord_8_test.gid">
                </df>
              </df>
              <df name="Sphere_test">
                <df name="Sprism3D6N_Sphere_16_test.gid">
                </df>
                <df name="Sprism3D6N_Sphere_24_test.gid">
                </df>
                <df name="Sprism3D6N_Sphere_32_test.gid">
                </df>
                <df name="Sprism3D6N_Sphere_4_test.gid">
                </df>
                <df name="Sprism3D6N_Sphere_8_test.gid">
                </df>
              </df>
            </df>
          </df>
          <df name="tests">
            <df name="dynamic_test">
            </df>
            <df name="sprism_test">
            </df>
          </df>
          <in>structural_mechanics_application.cpp</in>
          <in>structural_mechanics_application.h</in>
          <in>structural_mechanics_application_variables.cpp</in>
          <in>structural_mechanics_application_variables.h</in>
        </df>
        <df name="swimming_DEM_application">
          <df name="custom_conditions">
            <in>monolithic_dem_coupled_wall_condition.cpp</in>
            <in>monolithic_dem_coupled_wall_condition.h</in>
          </df>
          <df name="custom_elements">
            <in>monolithic_dem_coupled.cpp</in>
            <in>monolithic_dem_coupled.h</in>
            <in>monolithic_dem_coupled_weak.cpp</in>
            <in>monolithic_dem_coupled_weak.h</in>
            <in>shell_rigid.cpp</in>
            <in>shell_rigid.h</in>
            <in>spheric_swimming_particle.cpp</in>
            <in>spheric_swimming_particle.h</in>
          </df>
          <df name="custom_problemtype">
            <df name="swimming_DEM_explicit_solver.gid">
            </df>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>swimming_DEM_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="schemes">
              <in>terminal_velocity_scheme.cpp</in>
              <in>terminal_velocity_scheme.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>AuxiliaryFunctions.h</in>
            <in>binbased_DEM_fluid_coupled_mapping.h</in>
            <in>codina_manufactured_field.h</in>
            <in>custom_functions.h</in>
            <in>density_function.h</in>
            <in>density_function_normal.h</in>
            <in>density_function_polynomial.h</in>
            <in>derivative_recovery.h</in>
            <in>discrete_particle_configure.h</in>
            <in>embedded_volume_tool.h</in>
            <in>field_utility.h</in>
            <in>mollifier.h</in>
            <in>mpi_discrete_particle_configure.h</in>
            <in>mpi_neighbours_calculator.h</in>
            <in>particle_data.h</in>
            <in>point_configure.h</in>
            <in>point_point_search.h</in>
            <in>porosity_tools.h</in>
            <in>real_field.h</in>
            <in>real_field_linear_time_dependant_coeff.h</in>
            <in>real_functions.h</in>
            <in>space_time_rule.h</in>
            <in>space_time_set.h</in>
            <in>time_dependant_1D_porosity_field.h</in>
            <in>time_dependant_porosity_field.h</in>
            <in>vector_field.h</in>
            <in>volume_averaging_tool.h</in>
          </df>
          <df name="python_scripts">
            <df name="bergougnoux">
            </df>
            <df name="chandelier">
            </df>
            <df name="daitche_quadrature">
            </df>
          </df>
          <df name="test_examples">
            <df name="hydrodynamic_forces">
            </df>
          </df>
          <in>swimming_DEM_application.cpp</in>
          <in>swimming_DEM_application.h</in>
        </df>
        <df name="ThermoMechanicalApplication">
          <df name="custom_elements">
            <in>Poisson_3d.cpp</in>
            <in>Poisson_3d.h</in>
            <in>SUPG_conv_2d.cpp</in>
            <in>SUPG_conv_2d.h</in>
            <in>SUPG_conv_3d.cpp</in>
            <in>SUPG_conv_3d.h</in>
            <in>SUPG_conv_3d_levelset.cpp</in>
            <in>SUPG_conv_3d_levelset.h</in>
            <in>SUPG_conv_diff_2d.cpp</in>
            <in>SUPG_conv_diff_2d.h</in>
            <in>SUPG_conv_diff_3d.cpp</in>
            <in>SUPG_conv_diff_3d.h</in>
            <in>environment_contact.cpp</in>
            <in>environment_contact.h</in>
            <in>heat_contact_2d.cpp</in>
            <in>heat_contact_2d.h</in>
            <in>heat_contact_3d.cpp</in>
            <in>heat_contact_3d.h</in>
            <in>thermal_face2d.cpp</in>
            <in>thermal_face2d.h</in>
            <in>thermal_face3d.cpp</in>
            <in>thermal_face3d.h</in>
          </df>
          <df name="custom_processes">
            <in>DPG_copy_to_vulcan_post_variables_process.h</in>
            <in>activation_deactivation_conditions_process.h</in>
            <in>duplicate_interface_nodes_create_conditions_process.h</in>
            <in>solidification_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_processes_to_python.cpp</in>
            <in>add_custom_processes_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>thermo_mechanical_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <in>general_residualbased_incrementalupdate_variable_property_static_scheme.h</in>
            <in>residualbased_incrementalupdate_variable_property_static_scheme.h</in>
          </df>
          <df name="custom_utilities">
            <in>assign_environment_condition.h</in>
            <in>biphasic_filling_utilities.h</in>
            <in>estimate_time_step.h</in>
            <in>particle_levelset_utilities.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="Activation_test.gid">
            </df>
            <df name="cube_benchmark">
            </df>
            <df name="pure_convection_3d.gid">
            </df>
            <df name="rotating_pulse">
            </df>
            <df name="square_convection.gid">
            </df>
            <df name="square_split.gid">
            </df>
          </df>
          <in>thermo_mechanical_application.cpp</in>
          <in>thermo_mechanical_application.h</in>
        </df>
        <df name="trilinos_application">
          <df name="custom_processes">
            <in>trilinos_spalart_allmaras_turbulence_model.h</in>
            <in>trilinos_stokes_initialization_process.h</in>
            <in>trilinos_variational_distance_calculation_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_first.cpp</in>
            <in>add_first.h</in>
            <in>add_trilinos_communicator_to_python.cpp</in>
            <in>add_trilinos_communicator_to_python.h</in>
            <in>add_trilinos_convergence_criterias_to_python.cpp</in>
            <in>add_trilinos_convergence_criterias_to_python.h</in>
            <in>add_trilinos_linear_solvers_to_python.cpp</in>
            <in>add_trilinos_linear_solvers_to_python.h</in>
            <in>add_trilinos_processes_to_python.cpp</in>
            <in>add_trilinos_processes_to_python.h</in>
            <in>add_trilinos_schemes_to_python.cpp</in>
            <in>add_trilinos_schemes_to_python.h</in>
            <in>add_trilinos_space_to_python.cpp</in>
            <in>add_trilinos_space_to_python.h</in>
            <in>add_trilinos_strategies_to_python.cpp</in>
            <in>add_trilinos_strategies_to_python.h</in>
            <in>add_zoltan_processes_to_python.cpp</in>
            <in>add_zoltan_processes_to_python.h</in>
            <in>trilinos_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>trilinos_block_builder_and_solver.h</in>
              <in>trilinos_block_builder_and_solver_periodic.h</in>
              <in>trilinos_builder_and_solver_ML.h</in>
              <in>trilinos_builder_and_solver_ML_deactivation.h</in>
              <in>trilinos_builder_and_solver_ML_deactivation_vec.h</in>
              <in>trilinos_builder_and_solver_ML_mixed.h</in>
              <in>trilinos_builder_and_solver_ML_periodic.h</in>
              <in>trilinos_builder_and_solver_ML_vec.h</in>
              <in>trilinos_multiphase_builder_and_solver.h</in>
              <in>trilinos_pressure_splitting_builder_and_solver.h</in>
              <in>trilinos_residualbased_elimination_builder_and_solver.h</in>
              <in>trilinos_residualbased_elimination_builder_and_solver_componentwise_slip.h</in>
              <in>trilinos_residualbased_elimination_builder_and_solver_deactivation.h</in>
            </df>
            <df name="convergencecriterias">
              <in>trilinos_displacement_criteria.h</in>
              <in>trilinos_up_criteria.h</in>
            </df>
            <df name="schemes">
              <in>trilinos_gear_scheme.h</in>
              <in>trilinos_predictorcorrector_velocity_bossak_scheme.h</in>
              <in>trilinos_predictorcorrector_velocity_bossak_scheme_turbulent.h</in>
              <in>trilinos_residualbased_incremental_aitken_static_scheme.h</in>
              <in>trilinos_residualbased_incrementalupdate_static_scheme.h</in>
              <in>trilinos_residualbased_incrementalupdate_static_scheme_slip.h</in>
              <in>trilinos_residualbased_incrementalupdate_variable_property_static_scheme.h</in>
              <in>trilinos_residualbased_lagrangian_monolithic_scheme.h</in>
              <in>trilinos_residualbased_newmark_scheme.h</in>
              <in>trilinos_residualbased_predictorcorrector_velocity_bdf_scheme.h</in>
              <in>trilinos_residualbased_predictorcorrector_velocity_bossak_scheme_dpg_enriched.h</in>
            </df>
            <df name="strategies">
              <in>trilinos_adjoint_fluid_strategy.h</in>
              <in>trilinos_convdiff_strategy.h</in>
              <in>trilinos_fractionalstep_configuration.h</in>
              <in>trilinos_laplacian_meshmoving_strategy.h</in>
              <in>trilinos_structural_meshmoving_strategy.h</in>
              <in>trilinos_structural_meshmoving_strategy_nonlinear.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <in>boostpython_trilinos_test.h</in>
            <in>custom_gid_io.h</in>
            <in>custom_gid_mesh_container.h</in>
            <in>gather_modelpart_utility.h</in>
            <in>mpi_normal_calculation_utilities.cpp</in>
            <in>mpi_normal_calculation_utilities.h</in>
            <in>parallel_fill_communicator.h</in>
            <in>trilinos_cutting_app.h</in>
            <in>trilinos_cutting_iso_app.h</in>
            <in>trilinos_deactivation_utility.h</in>
            <in>trilinos_fractional_step_settings.h</in>
            <in>trilinos_fractional_step_settings_periodic.h</in>
            <in>trilinos_refine_mesh.h</in>
            <in>zoltan_partition_utility.h</in>
          </df>
          <df name="external_includes">
            <in>amesos_solver.h</in>
            <in>amgcl_solver.h</in>
            <in>aztec_solver.h</in>
            <in>epetra_default_utility.h</in>
            <in>ml_solver.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
            <df name="cantilever2d.gid">
            </df>
            <df name="cantilever3d.gid">
            </df>
            <df name="gather_modelpart_example">
            </df>
          </df>
          <in>trilinos_application.cpp</in>
          <in>trilinos_application.h</in>
          <in>trilinos_solver.h</in>
          <in>trilinos_space.h</in>
        </df>
        <df name="ULFapplication">
          <df name="custom_conditions">
            <in>Point_Neumann3D.cpp</in>
            <in>Point_Neumann3D.h</in>
          </df>
          <df name="custom_elements">
            <in>ulf_frac2d.cpp</in>
            <in>ulf_frac2d.h</in>
            <in>ulf_frac2d_swimming.cpp</in>
            <in>ulf_frac2d_swimming.h</in>
            <in>ulf_frac3d.cpp</in>
            <in>ulf_frac3d.h</in>
            <in>ulf_frac3d_swimming.cpp</in>
            <in>ulf_frac3d_swimming.h</in>
            <in>updated_lagrangian_fluid.cpp</in>
            <in>updated_lagrangian_fluid.h</in>
            <in>updated_lagrangian_fluid3D.cpp</in>
            <in>updated_lagrangian_fluid3D.h</in>
            <in>updated_lagrangian_fluid3D_inc.cpp</in>
            <in>updated_lagrangian_fluid3D_inc.h</in>
            <in>updated_lagrangian_fluid_inc.cpp</in>
            <in>updated_lagrangian_fluid_inc.h</in>
          </df>
          <df name="custom_problemtypes">
            <df name="fluid_ulf_scripts">
            </df>
          </df>
          <df name="custom_processes">
            <in>find_nodal_h_process.h</in>
            <in>lagrangian_inlet_process.h</in>
            <in>mark_bad_elements_process.h</in>
            <in>mark_close_nodes_process.h</in>
            <in>mark_fluid_process.h</in>
            <in>mark_outer_nodes_process.h</in>
            <in>mass_calculate_process.h</in>
            <in>merge_model_parts_process.h</in>
            <in>pressure_calculate_process.h</in>
            <in>save_fluid_only_process.h</in>
            <in>save_structure_conditions_process.h</in>
            <in>save_structure_model_part_process.h</in>
            <in>ulf_apply_bc_process.h</in>
            <in>ulf_time_step_dec_process.h</in>
          </df>
          <df name="custom_python">
            <in>add_custom_io_to_python.cpp</in>
            <in>add_custom_io_to_python.h</in>
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>add_meshers_to_python.cpp</in>
            <in>add_meshers_to_python.h</in>
            <in>add_processes_to_python.cpp</in>
            <in>add_processes_to_python.h</in>
            <in>kratos_ulf_python_application.cpp</in>
            <in>mark_bad_elements_process.h</in>
            <in>mark_close_nodes_process.h</in>
            <in>mark_fluid_process.h</in>
            <in>mark_outer_nodes_process.h</in>
          </df>
          <df name="custom_strategies">
            <df name="builder_and_solvers">
              <in>residualbased_elimination_quasiincompresible_builder_and_solver.h</in>
            </df>
            <df name="strategies">
              <in>modified_linear_strategy.h</in>
            </df>
          </df>
          <df name="custom_utilities">
            <df name="removed files">
            </df>
            <in>assign_point_neumann_conditions.h</in>
            <in>nist_utilities.h</in>
            <in>pfem_gid_io.h</in>
            <in>ulf_utilities.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_exemples">
            <df name="3d-splash.gid">
            </df>
            <df name="dam_2d.gid">
            </df>
            <df name="dam_2d_FSI.gid">
            </df>
            <df name="slosh.gid">
            </df>
          </df>
          <in>ULF_application.cpp</in>
          <in>ULF_application.h</in>
        </df>
        <df name="unit_benchmark_test_application">
          <df name="custom_elements">
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>unit_benchmark_test_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>AuxiliaryFunctions.h</in>
            <in>GeometryFunctions.h</in>
            <in>benchmark_utilities.h</in>
            <in>calculate_global_physical_properties.h</in>
            <in>cluster_information.h</in>
            <in>create_and_destroy.cpp</in>
            <in>create_and_destroy.h</in>
            <in>dem_fem_search.h</in>
            <in>dem_fem_utilities.cpp</in>
            <in>dem_fem_utilities.h</in>
            <in>discrete_particle_configure.h</in>
            <in>geometrical_object_configure.h</in>
            <in>inlet.cpp</in>
            <in>inlet.h</in>
            <in>node_configure.h</in>
            <in>omp_dem_search.h</in>
            <in>particle_data.h</in>
            <in>post_utilities.h</in>
            <in>pre_utilities.h</in>
            <in>properties_proxies.cpp</in>
            <in>properties_proxies.h</in>
            <in>rigid_face_geometrical_object_configure.h</in>
            <in>search_utilities.h</in>
          </df>
          <df name="python_scripts">
            <df name="__pycache__">
            </df>
          </df>
          <df name="test_examples">
            <df name="basic_benchmarks">
              <df name="benchmark2_Post_Files">
              </df>
              <df name="paper_data">
              </df>
            </df>
          </df>
          <in>unit_benchmark_test_application.cpp</in>
          <in>unit_benchmark_test_application.h</in>
        </df>
        <df name="wind_turbine_application">
          <df name="custom_elements">
          </df>
          <df name="custom_external_libraries">
            <df name="tetgen1.4.3">
              <df name="example_files">
              </df>
              <in>predicates.cxx</in>
              <in>tetgen.cxx</in>
              <in>tetgen.h</in>
            </df>
            <df name="triangle">
              <in>showme.c</in>
              <in>triangle.c</in>
              <in>triangle.h</in>
              <in>tricall.c</in>
            </df>
          </df>
          <df name="custom_python">
            <in>add_custom_strategies_to_python.cpp</in>
            <in>add_custom_strategies_to_python.h</in>
            <in>add_custom_utilities_to_python.cpp</in>
            <in>add_custom_utilities_to_python.h</in>
            <in>wind_turbine_python_application.cpp</in>
          </df>
          <df name="custom_strategies">
          </df>
          <df name="custom_utilities">
            <in>wind_turbine_rotation_utilities.cpp</in>
            <in>wind_turbine_rotation_utilities.h</in>
          </df>
          <df name="python_scripts">
          </df>
          <df name="test_examples">
          </df>
          <in>wind_turbine_application.cpp</in>
          <in>wind_turbine_application.h</in>
        </df>
      </df>
      <df name="benchmarking">
      </df>
      <df name="cmake_build">
        <df name="applications">
          <df name="CMakeFiles">
          </df>
          <df name="henry_application">
            <df name="CMakeFiles">
              <df name="KratosHenryApplication.dir">
                <df name="custom_conditions">
                </df>
                <df name="custom_elements">
                </df>
                <df name="custom_python">
                </df>
              </df>
            </df>
            <in>KratosHenryApplication.so</in>
          </df>
          <df name="manager_application">
            <df name="CMakeFiles">
              <df name="KratosManagerApplication.dir">
                <df name="custom_python">
                </df>
              </df>
            </df>
            <in>KratosManagerApplication.so</in>
          </df>
        </df>
        <df name="CMakeFiles">
          <df name="2.8.12.2">
            <df name="CompilerIdC">
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="3.3.2">
            <df name="CompilerIdC">
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="CheckTypeSize">
            <in>OFF64_T.c</in>
          </df>
          <df name="CMakeTmp">
          </df>
          <in>feature_tests.c</in>
          <in>feature_tests.cxx</in>
        </df>
        <df name="external_libraries">
          <df name="gidpost">
            <df name="CMakeFiles">
              <df name="gidpost.dir">
                <df name="source">
                </df>
              </df>
            </df>
          </df>
          <df name="zlib">
            <df name="CMakeFiles">
              <df name="example.dir">
                <df name="test">
                </df>
              </df>
              <df name="example64.dir">
                <df name="test">
                </df>
              </df>
              <df name="minigzip.dir">
                <df name="test">
                </df>
              </df>
              <df name="minigzip64.dir">
                <df name="test">
                </df>
              </df>
              <df name="zlib.dir">
              </df>
              <df name="zlibstatic.dir">
              </df>
            </df>
            <in>libz.so</in>
            <in>zconf.h</in>
          </df>
        </df>
        <df name="kratos">
          <df name="CMakeFiles">
            <df name="Kratos.dir">
              <df name="python">
              </df>
              <df name="sources">
              </df>
            </df>
            <df name="KratosCore.dir">
              <df name="containers">
              </df>
              <df name="sources">
              </df>
              <df name="utilities">
              </df>
            </df>
          </df>
          <in>Kratos.so</in>
          <in>libKratosCore.so</in>
        </df>
      </df>
      <df name="cmake_modules">
      </df>
      <df name="CMakeFiles">
        <df name="2.8.12.2">
          <df name="CompilerIdC">
            <in>CMakeCCompilerId.c</in>
          </df>
          <df name="CompilerIdCXX">
            <in>CMakeCXXCompilerId.cpp</in>
          </df>
        </df>
        <df name="3.3.2">
          <df name="CompilerIdC">
            <in>CMakeCCompilerId.c</in>
          </df>
          <df name="CompilerIdCXX">
            <in>CMakeCXXCompilerId.cpp</in>
          </df>
        </df>
        <df name="CheckTypeSize">
          <in>OFF64_T.c</in>
        </df>
        <df name="CMakeTmp">
        </df>
        <in>feature_tests.c</in>
        <in>feature_tests.cxx</in>
      </df>
      <df name="db">
        <df name="revprops">
          <df name="0">
          </df>
        </df>
        <df name="revs">
          <df name="0">
          </df>
        </df>
        <df name="transactions">
        </df>
        <df name="txn-protorevs">
        </df>
      </df>
      <df name="documents">
      </df>
      <df name="embedded_python">
        <in>krun_main.cpp</in>
      </df>
      <df name="external_libraries">
        <df name="gidpost">
          <df name="CMakeFiles">
            <df name="gidpost.dir">
              <df name="source">
              </df>
            </df>
          </df>
          <df name="source">
            <in>gidpost.c</in>
            <in>gidpost.h</in>
            <in>gidpostHDF5.c</in>
            <in>gidpostHDF5.h</in>
            <in>gidpostHash.c</in>
            <in>gidpostHash.h</in>
            <in>gidpostInt.c</in>
            <in>gidpostInt.h</in>
            <in>gidpostfor.c</in>
            <in>gidpostfor.h</in>
            <in>gidpostforAPI.c</in>
            <in>hashtab.c</in>
            <in>hashtab.h</in>
            <in>hdf5c.c</in>
            <in>hdf5c.h</in>
            <in>lookupa.c</in>
            <in>lookupa.h</in>
            <in>recycle.c</in>
            <in>recycle.h</in>
            <in>standard.h</in>
          </df>
        </df>
        <df name="mpi_python">
          <in>mpi_python.h</in>
          <in>python_interface.cpp</in>
        </df>
        <df name="rapidjson">
          <df name="error">
            <in>en.h</in>
            <in>error.h</in>
          </df>
          <df name="internal">
            <in>biginteger.h</in>
            <in>diyfp.h</in>
            <in>dtoa.h</in>
            <in>ieee754.h</in>
            <in>itoa.h</in>
            <in>meta.h</in>
            <in>pow10.h</in>
            <in>stack.h</in>
            <in>strfunc.h</in>
            <in>strtod.h</in>
            <in>swap.h</in>
          </df>
          <df name="msinttypes">
            <in>inttypes.h</in>
            <in>stdint.h</in>
          </df>
          <in>allocators.h</in>
          <in>document.h</in>
          <in>encodedstream.h</in>
          <in>encodings.h</in>
          <in>filereadstream.h</in>
          <in>filewritestream.h</in>
          <in>memorybuffer.h</in>
          <in>memorystream.h</in>
          <in>pointer.h</in>
          <in>prettywriter.h</in>
          <in>rapidjson.h</in>
          <in>reader.h</in>
          <in>stringbuffer.h</in>
          <in>writer.h</in>
        </df>
        <df name="tetgen">
          <df name="tetgen1.4.3">
            <in>predicates.cxx</in>
            <in>tetgen.cxx</in>
            <in>tetgen.h</in>
          </df>
        </df>
        <df name="triangle">
          <in>showme.c</in>
          <in>triangle.c</in>
          <in>triangle.h</in>
          <in>tricall.c</in>
        </df>
        <df name="zlib">
          <df name="amiga">
          </df>
          <df name="as400">
          </df>
          <df name="CMakeFiles">
            <df name="example.dir">
              <df name="test">
              </df>
            </df>
            <df name="example64.dir">
              <df name="test">
              </df>
            </df>
            <df name="minigzip.dir">
              <df name="test">
              </df>
            </df>
            <df name="minigzip64.dir">
              <df name="test">
              </df>
            </df>
            <df name="zlib.dir">
            </df>
            <df name="zlibstatic.dir">
            </df>
          </df>
          <df name="contrib">
            <df name="ada">
            </df>
            <df name="amd64">
              <in>amd64-match.S</in>
            </df>
            <df name="asm686">
              <in>match.S</in>
            </df>
            <df name="blast">
              <in>blast.c</in>
              <in>blast.h</in>
            </df>
            <df name="delphi">
            </df>
            <df name="dotzlib">
              <df name="DotZLib">
              </df>
            </df>
            <df name="gcc_gvmat64">
              <in>gvmat64.S</in>
            </df>
            <df name="infback9">
              <in>infback9.c</in>
              <in>infback9.h</in>
              <in>inffix9.h</in>
              <in>inflate9.h</in>
              <in>inftree9.c</in>
              <in>inftree9.h</in>
            </df>
            <df name="inflate86">
              <in>inffas86.c</in>
              <in>inffast.S</in>
            </df>
            <df name="iostream">
              <in>test.cpp</in>
              <in>zfstream.cpp</in>
              <in>zfstream.h</in>
            </df>
            <df name="iostream2">
              <in>zstream.h</in>
              <in>zstream_test.cpp</in>
            </df>
            <df name="iostream3">
              <in>test.cc</in>
              <in>zfstream.cc</in>
              <in>zfstream.h</in>
            </df>
            <df name="masmx64">
              <in>gvmat64.asm</in>
              <in>inffas8664.c</in>
              <in>inffasx64.asm</in>
            </df>
            <df name="masmx86">
              <in>inffas32.asm</in>
              <in>match686.asm</in>
            </df>
            <df name="minizip">
              <in>crypt.h</in>
              <in>ioapi.c</in>
              <in>ioapi.h</in>
              <in>iowin32.c</in>
              <in>iowin32.h</in>
              <in>miniunz.c</in>
              <in>minizip.c</in>
              <in>mztools.c</in>
              <in>mztools.h</in>
              <in>unzip.c</in>
              <in>unzip.h</in>
              <in>zip.c</in>
              <in>zip.h</in>
            </df>
            <df name="pascal">
            </df>
            <df name="puff">
              <in>puff.c</in>
              <in>puff.h</in>
              <in>pufftest.c</in>
            </df>
            <df name="testzlib">
              <in>testzlib.c</in>
            </df>
            <df name="untgz">
              <in>untgz.c</in>
            </df>
            <df name="vstudio">
              <df name="vc10">
              </df>
              <df name="vc11">
              </df>
              <df name="vc9">
              </df>
            </df>
          </df>
          <df name="doc">
          </df>
          <df name="examples">
            <in>enough.c</in>
            <in>fitblk.c</in>
            <in>gun.c</in>
            <in>gzappend.c</in>
            <in>gzjoin.c</in>
            <in>gzlog.c</in>
            <in>gzlog.h</in>
            <in>zpipe.c</in>
            <in>zran.c</in>
          </df>
          <df name="msdos">
          </df>
          <df name="nintendods">
          </df>
          <df name="old">
            <df name="os2">
            </df>
          </df>
          <df name="qnx">
          </df>
          <df name="test">
            <in>example.c</in>
            <in>infcover.c</in>
            <in>minigzip.c</in>
          </df>
          <df name="watcom">
          </df>
          <df name="win32">
          </df>
          <in>adler32.c</in>
          <in>compress.c</in>
          <in>crc32.c</in>
          <in>crc32.h</in>
          <in>deflate.c</in>
          <in>deflate.h</in>
          <in>gzclose.c</in>
          <in>gzguts.h</in>
          <in>gzlib.c</in>
          <in>gzread.c</in>
          <in>gzwrite.c</in>
          <in>infback.c</in>
          <in>inffast.c</in>
          <in>inffast.h</in>
          <in>inffixed.h</in>
          <in>inflate.c</in>
          <in>inflate.h</in>
          <in>inftrees.c</in>
          <in>inftrees.h</in>
          <in>trees.c</in>
          <in>trees.h</in>
          <in>uncompr.c</in>
          <in>zlib.h</in>
          <in>zutil.c</in>
          <in>zutil.h</in>
        </df>
      </df>
      <df name="gid_interface">
        <df name="kratos.gid">
          <df name="images">
            <df name="Classic">
            </df>
            <df name="Dark">
            </df>
          </df>
          <df name="msgs">
          </df>
          <df name="python">
          </df>
          <df name="scripts">
            <df name="kegroups">
            </df>
            <df name="kmprops">
            </df>
            <df name="libs">
              <df name="curves">
              </df>
              <df name="graphics">
              </df>
              <df name="wkcf">
              </df>
              <df name="xml">
              </df>
            </df>
          </df>
          <df name="symbols">
          </df>
        </df>
      </df>
      <df name="interfaces">
        <df name="GiD">
          <df name="kratos.gid">
            <df name="apps">
              <df name="BaseApp">
                <df name="write">
                </df>
                <df name="xml">
                </df>
              </df>
              <df name="Common">
                <df name="xml">
                </df>
              </df>
              <df name="Fluid">
                <df name="python">
                </df>
                <df name="write">
                </df>
                <df name="xml">
                </df>
              </df>
              <df name="Pfem">
                <df name="write">
                </df>
                <df name="xml">
                </df>
              </df>
              <df name="Solid">
                <df name="python">
                </df>
                <df name="write">
                </df>
                <df name="xml">
                </df>
              </df>
              <df name="Structural">
                <df name="python">
                </df>
                <df name="write">
                </df>
                <df name="xml">
                </df>
              </df>
            </df>
            <df name="exec">
              <df name="kratos">
              </df>
              <df name="msgs">
              </df>
            </df>
            <df name="images">
            </df>
            <df name="scripts">
              <df name="Model">
              </df>
            </df>
          </df>
        </df>
      </df>
      <df name="kratos">
        <df name="CMakeFiles">
          <df name="Kratos.dir">
            <df name="python">
            </df>
            <df name="sources">
            </df>
          </df>
          <df name="KratosCore.dir">
            <df name="containers">
            </df>
            <df name="sources">
            </df>
            <df name="utilities">
            </df>
          </df>
        </df>
        <df name="containers">
          <in>array_1d.h</in>
          <in>bucket.h</in>
          <in>buffer.h</in>
          <in>data_value_container.h</in>
          <in>fix_data_value_container.cpp</in>
          <in>fix_data_value_container.h</in>
          <in>flags.h</in>
          <in>partitioned_vector.h</in>
          <in>periodic_variables_container.h</in>
          <in>pointer_hash_map_set.h</in>
          <in>pointer_vector.h</in>
          <in>pointer_vector_map.h</in>
          <in>pointer_vector_map_iterator.h</in>
          <in>pointer_vector_set.h</in>
          <in>set_identity_function.h</in>
          <in>tree.h</in>
          <in>variable.h</in>
          <in>variable_component.h</in>
          <in>variable_data.cpp</in>
          <in>variable_data.h</in>
          <in>variables_list.h</in>
          <in>variables_list_data_value_container.cpp</in>
          <in>variables_list_data_value_container.h</in>
          <in>vector_component_adaptor.h</in>
          <in>vector_map.h</in>
          <in>vector_map_iterator.h</in>
          <in>weak_pointer_vector.h</in>
          <in>weak_pointer_vector_iterator.h</in>
        </df>
        <df name="elements">
          <in>distance_calculation_element_simplex.h</in>
          <in>levelset_convection_element_simplex.h</in>
        </df>
        <df name="equation_systems">
          <in>diagonal_equation_system.h</in>
          <in>equation_system.h</in>
        </df>
        <df name="geometries">
          <in>geometry.h</in>
          <in>geometry_data.h</in>
          <in>hexahedra_3d_20.h</in>
          <in>hexahedra_3d_27.h</in>
          <in>hexahedra_3d_8.h</in>
          <in>hexahedra_interface_3d_8.h</in>
          <in>line_2d.h</in>
          <in>line_2d_2.h</in>
          <in>line_2d_3.h</in>
          <in>line_3d_2.h</in>
          <in>line_3d_3.h</in>
          <in>line_gl_3d_2.h</in>
          <in>nurbs_2d.h</in>
          <in>nurbs_3d.h</in>
          <in>nurbs_base_geometry.h</in>
          <in>plane.h</in>
          <in>point.h</in>
          <in>point_2d.h</in>
          <in>point_3d.h</in>
          <in>prism_3d_15.h</in>
          <in>prism_3d_6.h</in>
          <in>prism_interface_3d_6.h</in>
          <in>quadrilateral_2d_4.h</in>
          <in>quadrilateral_2d_8.h</in>
          <in>quadrilateral_2d_9.h</in>
          <in>quadrilateral_3d_4.h</in>
          <in>quadrilateral_3d_8.h</in>
          <in>quadrilateral_3d_9.h</in>
          <in>quadrilateral_interface_2d_4.h</in>
          <in>quadrilateral_interface_3d_4.h</in>
          <in>sphere_3d_1.h</in>
          <in>tetrahedra_3d_10.h</in>
          <in>tetrahedra_3d_4.h</in>
          <in>triangle_2d_3.h</in>
          <in>triangle_2d_6.h</in>
          <in>triangle_3d_3.h</in>
          <in>triangle_3d_6.h</in>
        </df>
        <df name="includes">
          <in>c2c_variables.h</in>
          <in>cfd_variables.h</in>
          <in>communicator.h</in>
          <in>condition.h</in>
          <in>constant.h</in>
          <in>constitutive_law.h</in>
          <in>convection_diffusion_settings.h</in>
          <in>datafile_io.h</in>
          <in>define.h</in>
          <in>dem_variables.h</in>
          <in>deprecated_variables.h</in>
          <in>dof.h</in>
          <in>element.h</in>
          <in>geometrical_object.h</in>
          <in>gid_gauss_point_container.h</in>
          <in>gid_io.h</in>
          <in>gid_mesh_container.h</in>
          <in>global_variables.h</in>
          <in>io.h</in>
          <in>json_io.h</in>
          <in>kernel.h</in>
          <in>kratos.h</in>
          <in>kratos_application.h</in>
          <in>kratos_components.h</in>
          <in>kratos_config.h</in>
          <in>kratos_exception.h</in>
          <in>kratos_export_api.h</in>
          <in>kratos_flags.h</in>
          <in>kratos_parameters.h</in>
          <in>kratos_version.h</in>
          <in>legacy_structural_app_vars.h</in>
          <in>matrix_market_interface.h</in>
          <in>mesh.h</in>
          <in>mmio.h</in>
          <in>model_part.h</in>
          <in>model_part_io.h</in>
          <in>mpi_communicator.h</in>
          <in>neighbours.h</in>
          <in>node.h</in>
          <in>periodic_condition.h</in>
          <in>piecewize_linear_table.h</in>
          <in>process_info.h</in>
          <in>properties.h</in>
          <in>radiation_settings.h</in>
          <in>reorder_consecutive_model_part_io.h</in>
          <in>serializer.h</in>
          <in>table.h</in>
          <in>ublas_interface.h</in>
          <in>variables.h</in>
        </df>
        <df name="integration">
          <in>hexahedron_gauss_legendre_integration_points.h</in>
          <in>hexahedron_gauss_lobatto_integration_points.h</in>
          <in>integration_point.h</in>
          <in>line_gauss_legendre_integration_points.h</in>
          <in>line_gauss_lobatto_integration_points.h</in>
          <in>prism_gauss_legendre_integration_points.h</in>
          <in>prism_gauss_lobatto_integration_points.h</in>
          <in>quadrature.h</in>
          <in>quadrilateral_gauss_legendre_integration_points.h</in>
          <in>quadrilateral_gauss_lobatto_integration_points.h</in>
          <in>tetrahedron_gauss_legendre_integration_points.h</in>
          <in>triangle_gauss_legendre_integration_points.h</in>
          <in>triangle_gauss_radau_integration_points.h</in>
        </df>
        <df name="linear_solvers">
          <in>bicgstab_solver.h</in>
          <in>cg_solver.h</in>
          <in>cuthill_mckee_reorderer.h</in>
          <in>deflated_cg_solver.h</in>
          <in>deflated_gmres_solver.h</in>
          <in>diagonal_preconditioner.h</in>
          <in>direct_solver.h</in>
          <in>ilu0_preconditioner.h</in>
          <in>ilu_preconditioner.h</in>
          <in>iterative_solver.h</in>
          <in>linear_solver.h</in>
          <in>luc_solver.h</in>
          <in>mixedup_linear_solver.h</in>
          <in>power_iteration_eigenvalue_solver.h</in>
          <in>preconditioner.h</in>
          <in>rayleigh_quotient_iteration_eigenvalue_solver.h</in>
          <in>reorderer.h</in>
          <in>scaling_solver.h</in>
          <in>skyline_lu_factorization_solver.h</in>
          <in>superlu_solver.h</in>
          <in>tfqmr_solver.h</in>
          <in>umfpack_lu_solver.h</in>
        </df>
        <df name="modeler">
          <in>cartesian_mesh_generator_modeler.h</in>
          <in>duplicate_mesh_modeler.h</in>
          <in>edge_swapping_2d_modeler.h</in>
          <in>mesh_suite_modeler.h</in>
          <in>modeler.h</in>
          <in>mpi_connectivity_preserve_modeler.h</in>
          <in>structured_mesh_refinement_modeler.h</in>
        </df>
        <df name="processes">
          <in>add_dofs_nodal_process.h</in>
          <in>apply_constant_scalarvalue_process.h</in>
          <in>apply_constant_vectorvalue_process.h</in>
          <in>build_elemental_process.h</in>
          <in>calculate_nodal_area_process.h</in>
          <in>calculate_octree_signed_distance_to_3d_skin_process.h</in>
          <in>calculate_signed_distance_to_3d_condition_skin_process.h</in>
          <in>calculate_signed_distance_to_3d_skin_process.h</in>
          <in>check_skin_process.h</in>
          <in>compute_bdfcoefficients_process.h</in>
          <in>condition_erase_process.h</in>
          <in>construct_system_matrix_elemental_process.h</in>
          <in>element_erase_process.h</in>
          <in>eliminate_isolated_nodes_process.h</in>
          <in>find_conditions_neighbours_process.h</in>
          <in>find_elements_neighbours_process.h</in>
          <in>find_nodal_h_process.h</in>
          <in>find_nodal_neighbours_process.h</in>
          <in>graph_coloring_process.h</in>
          <in>levelset_convection_process.h</in>
          <in>node_erase_process.h</in>
          <in>process.h</in>
          <in>replace_elements_and_condition_process.h</in>
          <in>rotation_operation.h</in>
          <in>tetrahedral_mesh_orientation_check.h</in>
          <in>translation_operation.h</in>
          <in>variational_distance_calculation_process.h</in>
        </df>
        <df name="python">
          <in>add_banded_matrix_to_python.cpp</in>
          <in>add_c2c_variables_to_python.cpp</in>
          <in>add_c2c_variables_to_python.h</in>
          <in>add_cfd_variables_to_python.cpp</in>
          <in>add_cfd_variables_to_python.h</in>
          <in>add_compressed_matrix_to_python.cpp</in>
          <in>add_constant_matrix_to_python.cpp</in>
          <in>add_constitutive_law_to_python.cpp</in>
          <in>add_constitutive_law_to_python.h</in>
          <in>add_containers_to_python.cpp</in>
          <in>add_containers_to_python.h</in>
          <in>add_coordinate_matrix_to_python.cpp</in>
          <in>add_dem_variables_to_python.cpp</in>
          <in>add_dem_variables_to_python.h</in>
          <in>add_deprecated_variables_to_python.cpp</in>
          <in>add_deprecated_variables_to_python.h</in>
          <in>add_equation_systems_to_python.cpp</in>
          <in>add_equation_systems_to_python.h</in>
          <in>add_geometries_to_python.cpp</in>
          <in>add_geometries_to_python.h</in>
          <in>add_hermitian_matrix_to_python.cpp</in>
          <in>add_identity_matrix_to_python.cpp</in>
          <in>add_integration_points_to_python.cpp</in>
          <in>add_io_to_python.cpp</in>
          <in>add_io_to_python.h</in>
          <in>add_kernel_to_python.cpp</in>
          <in>add_kernel_to_python.h</in>
          <in>add_kratos_application_to_python.cpp</in>
          <in>add_kratos_application_to_python.h</in>
          <in>add_kratos_parameters_to_python.cpp</in>
          <in>add_kratos_parameters_to_python.h</in>
          <in>add_legacy_structural_app_vars_to_python.cpp</in>
          <in>add_legacy_structural_app_vars_to_python.h</in>
          <in>add_linear_solvers_to_python.cpp</in>
          <in>add_linear_solvers_to_python.h</in>
          <in>add_matrix_market_interface_to_python.cpp</in>
          <in>add_matrix_market_interface_to_python.h</in>
          <in>add_matrix_to_python.cpp</in>
          <in>add_matrix_to_python.h</in>
          <in>add_mesh_to_python.cpp</in>
          <in>add_mesh_to_python.h</in>
          <in>add_model_part_to_python.cpp</in>
          <in>add_model_part_to_python.h</in>
          <in>add_modeler_to_python.cpp</in>
          <in>add_modeler_to_python.h</in>
          <in>add_node_to_python.cpp</in>
          <in>add_parallel_linear_solvers_to_python.cpp</in>
          <in>add_parallel_linear_solvers_to_python.h</in>
          <in>add_parallel_strategies_to_python.cpp</in>
          <in>add_parallel_strategies_to_python.h</in>
          <in>add_points_to_python.cpp</in>
          <in>add_points_to_python.h</in>
          <in>add_process_info_to_python.cpp</in>
          <in>add_process_info_to_python.h</in>
          <in>add_processes_to_python.cpp</in>
          <in>add_processes_to_python.h</in>
          <in>add_properties_to_python.cpp</in>
          <in>add_quadratures_to_python.cpp</in>
          <in>add_quadratures_to_python.h</in>
          <in>add_scalar_matrix_to_python.cpp</in>
          <in>add_search_strategies_to_python.cpp</in>
          <in>add_search_strategies_to_python.h</in>
          <in>add_serializer_to_python.cpp</in>
          <in>add_serializer_to_python.h</in>
          <in>add_sparse_matrix_to_python.cpp</in>
          <in>add_sparse_vector_to_python.cpp</in>
          <in>add_sparse_vector_to_python.h</in>
          <in>add_strategies_to_python.cpp</in>
          <in>add_strategies_to_python.h</in>
          <in>add_symmetric_matrix_to_python.cpp</in>
          <in>add_table_to_python.cpp</in>
          <in>add_table_to_python.h</in>
          <in>add_triangular_matrix_to_python.cpp</in>
          <in>add_utilities_to_python.cpp</in>
          <in>add_utilities_to_python.h</in>
          <in>add_vector_to_python.cpp</in>
          <in>add_vector_to_python.h</in>
          <in>add_zero_matrix_to_python.cpp</in>
          <in>bounded_vector_python_interface.h</in>
          <in>bounded_vector_vector_assignment_operator_python.h</in>
          <in>container_from_python.h</in>
          <in>kratos_python.cpp</in>
          <in>linear_solvers_python.cpp</in>
          <in>linear_solvers_python.h</in>
          <in>matrix_matrix_operator_python.h</in>
          <in>matrix_python_interface.h</in>
          <in>matrix_scalar_assignment_operator_python.h</in>
          <in>matrix_scalar_operator_python.h</in>
          <in>matrix_vector_operator_python.h</in>
          <in>pointer_indexing_python_interface.h</in>
          <in>pointer_vector_set_python_interface.h</in>
          <in>pyconversions.h</in>
          <in>readonly_matrix_python_interface.h</in>
          <in>readonly_vector_python_interface.h</in>
          <in>solution_step_variable_indexing_python.h</in>
          <in>variable_indexing_python.h</in>
          <in>vector_python_interface.h</in>
          <in>vector_scalar_assignment_operator_python.h</in>
          <in>vector_scalar_operator_python.h</in>
          <in>vector_vector_assignment_operator_python.h</in>
          <in>vector_vector_operator_python.h</in>
          <in>vectorial_spaces_python.cpp</in>
          <in>vectorial_spaces_python.h</in>
        </df>
        <df name="python_interface">
        </df>
        <df name="python_scripts">
          <df name="__pycache__">
          </df>
          <df name="application_generator">
            <df name="classes">
            </df>
            <df name="utils">
            </df>
          </df>
        </df>
        <df name="solving_strategies">
          <df name="builder_and_solvers">
            <in>builder_and_solver.h</in>
            <in>parallel_residualbased_elimination_builder_and_solver.h</in>
            <in>parallel_residualbased_elimination_builder_and_solver_deactivation.h</in>
            <in>residualbased_block_builder_and_solver.h</in>
            <in>residualbased_elimination_builder_and_solver.h</in>
            <in>residualbased_elimination_builder_and_solver_componentwise.h</in>
            <in>residualbased_elimination_builder_and_solver_deactivation.h</in>
            <in>residualbased_elimination_builder_and_solver_slip.h</in>
          </df>
          <df name="convergencecriterias">
            <in>and_criteria.h</in>
            <in>convergence_criteria.h</in>
            <in>displacement_criteria.h</in>
            <in>incremental_displacement_criteria.h</in>
            <in>or_criteria.h</in>
            <in>residual_criteria.h</in>
          </df>
          <df name="schemes">
            <in>residual_based_bossak_displacement_scheme.hpp</in>
            <in>residual_based_newmark_displacement_scheme.hpp</in>
            <in>residualbased_incremental_aitken_static_scheme.h</in>
            <in>residualbased_incrementalupdate_static_scheme.h</in>
            <in>residualbased_incrementalupdate_static_scheme_slip.h</in>
            <in>scheme.h</in>
          </df>
          <df name="strategies">
            <in>adaptive_residualbased_newton_raphson_strategy.h</in>
            <in>explicit_strategy.h</in>
            <in>residualbased_linear_strategy.h</in>
            <in>residualbased_newton_raphson_strategy.h</in>
            <in>solving_strategy.h</in>
          </df>
        </df>
        <df name="sources">
          <in>bounding_volume_tree.cpp</in>
          <in>c2c_variables.cpp</in>
          <in>cfd_variables.cpp</in>
          <in>constitutive_law.cpp</in>
          <in>datafile_io.cpp</in>
          <in>dem_variables.cpp</in>
          <in>deprecated_variables.cpp</in>
          <in>global_variables.cpp</in>
          <in>integration_rules.cpp</in>
          <in>io.cpp</in>
          <in>kernel.cpp</in>
          <in>kratos_components.cpp</in>
          <in>kratos_exception.cpp</in>
          <in>legacy_structural_app_vars.cpp</in>
          <in>mmio.c</in>
          <in>model_part.cpp</in>
          <in>model_part_io.cpp</in>
          <in>mpi_connectivity_preserve_modeler.cpp</in>
          <in>periodic_condition.cpp</in>
          <in>reorder_consecutive_model_part_io.cpp</in>
          <in>serializer.cpp</in>
          <in>timer.cpp</in>
          <in>variables.cpp</in>
        </df>
        <df name="spaces">
          <in>dense_space.h</in>
          <in>mpi_decomposition_space.h</in>
          <in>parallel_ublas_space.h</in>
          <in>ublas_space.h</in>
        </df>
        <df name="spatial_containers">
          <in>bins.h</in>
          <in>bins_dynamic.h</in>
          <in>bins_dynamic_objects.h</in>
          <in>bins_static.h</in>
          <in>bins_static_objects.h</in>
          <in>bounding_box.h</in>
          <in>bounding_volume_tree.h</in>
          <in>bucket.h</in>
          <in>cell.h</in>
          <in>dem_search.h</in>
          <in>kd_tree.h</in>
          <in>octree.h</in>
          <in>octree_binary.h</in>
          <in>octree_binary_cell.h</in>
          <in>point_search.h</in>
          <in>search_structure.h</in>
          <in>spatial_containers.h</in>
          <in>spatial_search.h</in>
          <in>tree.h</in>
        </df>
        <df name="templates">
          <df name="classes">
            <in>condition_template.cpp</in>
            <in>condition_template.h</in>
            <in>element_template.cpp</in>
            <in>element_template.h</in>
            <in>process_template.cpp</in>
            <in>process_template.h</in>
          </df>
          <df name="template_application">
            <df name="custom_elements">
            </df>
            <df name="custom_python">
            </df>
            <df name="custom_strategies">
            </df>
            <df name="custom_utilities">
            </df>
            <df name="examples">
            </df>
            <df name="python_scripts">
            </df>
            <df name="tests">
            </df>
          </df>
        </df>
        <df name="test_examples">
        </df>
        <df name="tests">
          <df name="__pycache__">
          </df>
        </df>
        <df name="utilities">
          <in>activation_utilities.h</in>
          <in>binbased_fast_point_locator.h</in>
          <in>binbased_nodes_in_element_locator.h</in>
          <in>body_distance_calculation_utils.h</in>
          <in>body_normal_calculation_utils.h</in>
          <in>bounding_box_utilities.h</in>
          <in>connectivity_preserve_modeler.h</in>
          <in>convect_particles_utilities.h</in>
          <in>coordinate_transformation_utilities.h</in>
          <in>counter.h</in>
          <in>cutting_utility.h</in>
          <in>deflation_utils.h</in>
          <in>discont_2d.h</in>
          <in>discont_utils.h</in>
          <in>divide_elem_utils.h</in>
          <in>enrich_2d_2dofs.h</in>
          <in>enrichment_utilities.h</in>
          <in>enrichment_utilities_duplicate_dofs.h</in>
          <in>geometry_tester.h</in>
          <in>geometry_utilities.h</in>
          <in>geometry_utilitiesNuevo.h</in>
          <in>indexed_object.h</in>
          <in>iso_printer.h</in>
          <in>kratos_log.cpp</in>
          <in>kratos_log.h</in>
          <in>line_searches_utils.h</in>
          <in>logger.cpp</in>
          <in>logger.h</in>
          <in>math_utils.h</in>
          <in>normal_calculation_utils.h</in>
          <in>object_counter.h</in>
          <in>openmp_utils.h</in>
          <in>parallel_levelset_distance_calculator.h</in>
          <in>pointlocation.h</in>
          <in>quaternion.h</in>
          <in>signed_distance_calculation_utils.h</in>
          <in>spatial_containers_configure.h</in>
          <in>split_prism.hpp</in>
          <in>split_tetrahedra.h</in>
          <in>split_triangle.c</in>
          <in>superlu.hpp</in>
          <in>timer.h</in>
          <in>variable_utils.h</in>
        </df>
      </df>
      <df name="KratosMultiphysics">
        <df name="__pycache__">
        </df>
      </df>
      <df name="libs">
        <in>Kratos.so</in>
        <in>KratosDEMApplication.so</in>
        <in>KratosExternalSolversApplication.so</in>
        <in>KratosHenryApplication.so</in>
        <in>KratosManagerApplication.so</in>
        <in>KratosUnit_Benchmark_TestApplication.so</in>
        <in>libKratosCore.so</in>
        <in>libz.so</in>
      </df>
      <df name="packaging_aux">
      </df>
      <df name="problemtype_generator">
        <df name="default">
        </df>
        <df name="kratos_definitions">
          <df name="definitions">
          </df>
          <df name="files">
          </df>
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>cmake_build/Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>python3 henry.py</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>python3 henry.py</runcommand>
        <rundir>/home/enric/kratos/applications/manager_application/test_examples</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
          <variable name="PYTHONPATH" value="/home/enric/kratos"/>
          <variable name="LD_LIBRARY_PATH" value="/home/enric/kratos/libs"/>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
